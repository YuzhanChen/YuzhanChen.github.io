{"version":3,"sources":["webpack:///./node_modules/tone/Tone/core/Tone.js","webpack:///./src/views/happysynth/HappySynthPlay.vue?7760","webpack:///./node_modules/tone/Tone/type/TimeBase.js","webpack:///./node_modules/tone/Tone/type/Frequency.js","webpack:///./node_modules/tone/Tone/type/Time.js","webpack:///./node_modules/tone/Tone/type/TransportTime.js","webpack:///./node_modules/tone/Tone/core/Emitter.js","webpack:///./node_modules/tone/Tone/core/Timeline.js","webpack:///./node_modules/tone/Tone/shim/OfflineAudioContext.js","webpack:///./node_modules/tone/Tone/shim/AudioContext.js","webpack:///./node_modules/tone/Tone/core/Context.js","webpack:///./node_modules/tone/Tone/type/Type.js","webpack:///./node_modules/tone/Tone/shim/AudioNode.js","webpack:///./node_modules/tone/Tone/core/AudioNode.js","webpack:///./node_modules/tone/Tone/core/Param.js","webpack:///./node_modules/tone/Tone/signal/SignalBase.js","webpack:///./node_modules/tone/Tone/core/Gain.js","webpack:///./node_modules/tone/Tone/shim/ConstantSourceNode.js","webpack:///./node_modules/tone/Tone/signal/Signal.js","webpack:///./node_modules/tone/Tone/component/Volume.js","webpack:///./node_modules/tone/Tone/core/Master.js","webpack:///./node_modules/tone/Tone/instrument/Instrument.js","webpack:///./node_modules/tone/Tone/shim/AudioBuffer.js","webpack:///./node_modules/tone/Tone/core/Buffer.js","webpack:///./node_modules/tone/Tone/core/Buffers.js","webpack:///./node_modules/tone/Tone/signal/TickSignal.js","webpack:///./node_modules/tone/Tone/core/TimelineState.js","webpack:///./node_modules/tone/Tone/source/TickSource.js","webpack:///./node_modules/tone/Tone/core/Clock.js","webpack:///./node_modules/tone/Tone/core/IntervalTimeline.js","webpack:///./node_modules/tone/Tone/type/Ticks.js","webpack:///./node_modules/tone/Tone/core/TransportEvent.js","webpack:///./node_modules/tone/Tone/core/TransportRepeatEvent.js","webpack:///./node_modules/tone/Tone/core/Transport.js","webpack:///./node_modules/tone/Tone/source/Source.js","webpack:///./node_modules/tone/Tone/source/BufferSource.js","webpack:///./node_modules/tone/Tone/instrument/Sampler.js","webpack:///./src/sampler/index.js","webpack:///src/views/happysynth/HappySynthPlay.vue","webpack:///./src/views/happysynth/HappySynthPlay.vue?befa","webpack:///./src/views/happysynth/HappySynthPlay.vue","webpack:///./node_modules/os-browserify/browser.js","webpack:///./node_modules/core-js/modules/es.string.iterator.js","webpack:///./node_modules/core-js/internals/string-multibyte.js","webpack:///./src/components/happysynth/PianoKeys.vue?adfa","webpack:///./node_modules/core-js/internals/array-fill.js","webpack:///./src/components/happysynth/PianoKeys.vue?60b8","webpack:///src/components/happysynth/PianoKeys.vue","webpack:///./src/components/happysynth/PianoKeys.vue?3175","webpack:///./src/components/happysynth/PianoKeys.vue","webpack:///./node_modules/core-js/modules/es.array.fill.js","webpack:///./node_modules/tone/Tone/version.js","webpack:///./node_modules/core-js/modules/web.dom-collections.iterator.js"],"names":["Tone","this","Error","prototype","toString","className","isLetter","match","sameConstructor","constructor","isFunction","dispose","set","params","value","isString","tmpObj","paramLoop","attr","parent","indexOf","attrSplit","split","i","length","splice","innerParam","join","param","isUndef","Signal","Param","AudioParam","TimeBase","get","_collectDefaults","ret","subRet","j","subAttr","isObject","isDefined","constr","defaults","Object","keys","_super","superDefs","push","values","options","defaultArg","given","fallback","givenProp","fallbackProp","log","debug","global","TONE_DEBUG_CLASS","args","Array","from","arguments","unshift","console","apply","undefined","assert","statement","error","connectSeries","currentUnit","toUnit","connect","srcNode","dstNode","outputNumber","inputNumber","input","isArray","AudioNode","disconnect","bDone","forEach","e","val","isNumber","arg","call","isBoolean","isNote","test","noOp","_readOnly","property","defineProperty","_writable","State","window","equalPowerScale","percent","piFactor","Math","PI","sin","dbToGain","db","pow","gainToDb","gain","LN10","intervalToFrequencyRatio","interval","now","context","immediate","currentTime","extend","child","TempConstructor","_audioContext","start","resume","isContext","Context","emit","setContext","ctx","sampleRate","hasAudioContext","hasOwnProperty","hasPromises","Boolean","getContext","resolve","initialized","resCallback","off","on","version","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","noteOn","noteOff","loadingMsgShown","staticStyle","_v","loadSuccessMsgShown","_s","loadSuccessMsgText","loadFailMsgShown","staticRenderFns","units","_val","_units","parseFloat","charAt","_defaultUnits","toSeconds","toTicks","toFrequency","toMidi","_expressions","regexp","method","dot","parseInt","scalar","_beatsToUnits","_getTimeSignature","_ticksToUnits","_frequencyToUnits","m","q","s","total","_secondsToUnits","_getBpm","Transport","bpm","timeSignature","_getPPQ","PPQ","_now","freq","beats","seconds","ticks","_noArg","valueOf","trim","typeName","quantity","time","expr","matching","slice","toSamples","toMilliseconds","Frequency","assign","mtof","pitch","octave","index","noteToScaleIndex","toLowerCase","noteNumber","transpose","harmonize","intervals","map","bind","ftom","toNote","log2","A4","round","floor","noteName","scaleIndexToNote","quarterTime","quarters","midi","frequency","Time","capture","quantTo","nextSubdivision","quantize","subdiv","subdivision","multiple","ideal","diff","toNotation","testNotations","power","closest","closestSeconds","notation","notationSeconds","abs","toBarsBeatsSixteenths","toFixed","measures","sixteenths","progress","TransportTime","Emitter","_events","event","callback","events","eventName","once","boundCallback","ev","eventList","len","mixin","object","functions","func","emitterFunc","Timeline","_timeline","memory","Infinity","add","_search","remove","comparator","peek","shift","getAfter","getBefore","cancel","after","cancelBefore","previousEvent","beginning","end","midPoint","nextEvent","testEvent","_iterate","lowerBound","upperBound","forEachBefore","forEachAfter","forEachBetween","startTime","endTime","forEachFrom","forEachAtTime","supported","OfflineAudioContext","webkitOfflineAudioContext","startRendering","then","_native_startRendering","Promise","done","oncomplete","renderedBuffer","AudioContext","webkitAudioContext","close","suspend","buffer","createBuffer","source","createBufferSource","destination","createGain","createGainNode","createDelay","createDelayNode","decodeAudioDataPromise","offlineContext","audioData","Uint32Array","decodeAudioData","_native_decodeAudioData","success","AudioContextProperties","AudioContextMethods","_context","rawContext","prop","_defineProperty","_defineMethod","_latencyHint","latencyHint","_constants","lookAhead","_computedUpdateInterval","_ticker","Ticker","clockSource","updateInterval","_timeouts","_timeoutIds","_timeoutLoop","onstatechange","master","state","closePromise","TONE_AUDIO_CONTEXT","getConstant","arr","getChannelData","constant","channelCount","channelCountMode","loop","setTimeout","fn","timeout","clearTimeout","id","type","hint","con","_type","_updateInterval","_callback","_createClock","Type","_createWorker","URL","webkitURL","blob","Blob","blobUrl","createObjectURL","worker","Worker","onmessage","_worker","_createTimeout","_timeout","Timeout","max","postMessage","_disposeClock","terminate","TONE_SILENCE_LOGGING","prefix","printString","warn","Default","Ticks","NormalRange","AudioRange","Decibels","Interval","BPM","Positive","Gain","Cents","Degrees","MIDI","BarsBeatsSixteenths","Samples","Hertz","Note","Milliseconds","Seconds","Notation","testContext","testSrcNode","testDstNode","nativeConnect","createInsOuts","inputs","outputs","output","c","channelInterpretation","unit","outputNum","inputNum","chain","fan","_param","convert","overridden","setValueAtTime","_toUnits","getValueAtTime","_initialValue","_fromUnits","cancelScheduledValues","minValue","maxValue","min","_minOutput","AutomationType","Linear","Exponential","Target","SetValue","Cancel","before","initialValue","defaultValue","previousVal","previous","_exponentialApproach","_linearInterpolate","_exponentialInterpolate","setRampPoint","currentVal","cancelAndHoldAtTime","linearRampToValueAtTime","exponentialRampToValueAtTime","exponentialRampTo","rampTime","linearRampTo","targetRampTo","exponentialApproachValueAtTime","timeConstant","setTargetAtTime","setValueCurveAtTime","duration","scaling","segTime","valueAtTime","sampleTime","rampTo","t0","v0","v1","t","exp","t1","SignalBase","node","_gainNode","createConstantSource","ConstantSourceNode","_bufferSource","gainNode","_output","offset","stop","_constantSource","Volume","volume","_unmutedVolume","mute","Master","_volume","isMaster","toMaster","MasterConstructor","Instrument","_scheduledEvents","triggerAttack","triggerRelease","sync","_syncMethod","timePosition","originalMethod","schedule","unsync","clear","_original_triggerAttack","_original_triggerRelease","triggerAttackRelease","note","velocity","AudioBuffer","copyToChannel","src","chanNum","channel","copyFromChannel","dest","Buffer","_buffer","_reversed","reverse","_xhr","onload","url","loaded","load","catch","onerror","_reverse","promise","buff","err","_removeFromDownloadQueue","abort","numberOfChannels","fromArray","array","isMultidimensional","channels","toMono","toArray","outputArray","Float32Array","numChannels","channelArray","sample","startSamples","endSamples","replacement","retBuffer","rev","_downloadQueue","baseUrl","fromUrl","request","matches","extensions","extension","supportsType","replace","onError","onProgress","totalProgress","XMLHttpRequest","open","responseType","addEventListener","status","response","lengthComputable","send","cancelDownloads","document","createElement","canPlayType","removeEvents","fail","Buffers","urls","key","_buffers","_loadingCount","_bufferLoaded","has","name","isLoaded","buffName","_wrapScheduleMethods","ticksUntilTime","_getTicksUntilEvent","TickSignal","prevEvent","segments","rampVal","segmentDur","val0","val1","getTicksAtTime","getDurationOfTicks","currentTick","getTimeOfTick","tick","delta","k","sqrt","sol1","sol2","ticksToTime","when","timeToTicks","startTicks","endTicks","TimelineState","initial","_initial","setStateAtTime","getLastState","getNextState","TickSource","_state","Stopped","_tickOffset","setTicksAtTime","Started","pause","Paused","stopEvent","tmpEvent","lastState","elapsedTicks","periodStartTime","offsetEvent","getSecondsAtTime","elapsedSeconds","getStateAtTime","absoluteTicks","forEachTickBetween","lastStateEvent","ticksAtStart","nextTickTime","Clock","_nextTick","_tickSource","_lastUpdate","_boundLoop","_loop","ceil","IntervalTimeline","_root","_length","IntervalNode","insert","updateHeight","updateMax","_rebalance","results","search","_removeNode","_setRoot","_replaceNodeInParent","isLeftChild","left","right","temp","balance","getBalance","_rotateLeft","pivotNode","_rotateRight","low","allNodes","traverse","searchAfter","high","_left","_right","height","point","TransportEvent","_eventId","_once","invoke","TransportRepeatEvent","_interval","_currentId","_nextId","_boundRestart","_restart","_createEvents","scheduleOnce","_boundCreateEvents","_loopStart","_loopEnd","_ppq","TransportConstructor","_clock","_processTick","_bindClockEvents","_timeSignature","_repeatedEvents","_syncedSignals","_swingTicks","_swingAmount","transport","isTransport","tickTime","amount","_addEvent","scheduleRepeat","eventId","item","timeline","toggle","timeSig","startPosition","endPosition","setLoopPoints","loopStart","loopEnd","ppq","transportPos","remainingTicks","syncSignal","signal","ratio","ratioSignal","unsyncSignal","syncedSignal","Source","_synced","_scheduled","_start","restart","_stop","sched","_syncedStart","stateEvent","startOffset","_syncedStop","BufferSource","onended","_startTime","_sourceStarted","_sourceStopped","_stopTime","_source","_onended","playbackRate","fadeIn","fadeOut","curve","_onendedTimeout","fadeInTime","computedDur","loopDuration","cancelStop","fadeOutTime","additionalTail","_wasDisposed","Sampler","urlMap","mid","isNaN","_activeSources","attack","release","_findClosest","MAX_INTERVAL","notes","difference","closestNote","releaseAll","sources","d","sampler","component","exports","endianness","hostname","location","loadavg","uptime","freemem","Number","MAX_VALUE","totalmem","cpus","navigator","appVersion","networkInterfaces","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","EOL","homedir","InternalStateModule","defineIterator","STRING_ITERATOR","setInternalState","getInternalState","getterFor","String","iterated","string","toInteger","requireObjectCoercible","createMethod","CONVERT_TO_STRING","$this","pos","first","second","S","position","size","charCodeAt","module","codeAt","toObject","toAbsoluteIndex","toLength","O","argumentsLength","endPos","$","fill","addToUnscopables","target","proto","DOMIterables","ArrayIteratorMethods","createNonEnumerableProperty","wellKnownSymbol","ITERATOR","TO_STRING_TAG","ArrayValues","COLLECTION_NAME","Collection","CollectionPrototype","METHOD_NAME"],"mappings":"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","file":"js/chunk-8b78f054.a15a849d.js","sourcesContent":["/**\n *  Tone.js\n *  @author Yotam Mann\n *  @license http://opensource.org/licenses/MIT MIT License\n *  @copyright 2014-2019 Yotam Mann\n */\nimport version from \"../version\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tTONE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  @class  Tone is the base class of all other classes.\n *  @constructor\n */\nvar Tone = function(){\n\tif (!(this instanceof Tone)){\n\t\tthrow new Error(\"constructor needs to be called with the 'new' keyword\");\n\t}\n};\n\n/**\n *  @memberOf Tone#\n *  @returns {String} returns the name of the class as a string\n */\nTone.prototype.toString = function(){\n\tfor (var className in Tone){\n\t\tvar isLetter = className[0].match(/^[A-Z]$/);\n\t\tvar sameConstructor = Tone[className] === this.constructor;\n\t\tif (Tone.isFunction(Tone[className]) && isLetter && sameConstructor){\n\t\t\treturn className;\n\t\t}\n\t}\n\treturn \"Tone\";\n};\n\n/**\n *  @memberOf Tone#\n *  disconnect and dispose\n *  @returns {Tone} this\n */\nTone.prototype.dispose = function(){\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tGET/SET\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Set the parameters at once. Either pass in an\n *  object mapping parameters to values, or to set a\n *  single parameter, by passing in a string and value.\n *  The last argument is an optional ramp time which\n *  will ramp any signal values to their destination value\n *  over the duration of the rampTime.\n *  @param {Object|String} params\n *  @param {Number=} value\n *  @returns {Tone} this\n *  @memberOf Tone#\n *  @example\n * //set values using an object\n * filter.set({\n * \t\"frequency\" : 300,\n * \t\"type\" : highpass\n * });\n *  @example\n * filter.set(\"type\", \"highpass\");\n *  @example\n * //ramp to the value 220 over 3 seconds.\n * oscillator.set({\n * \t\"frequency\" : 220\n * }, 3);\n */\nTone.prototype.set = function(params, value){\n\tif (Tone.isString(params)){\n\t\tvar tmpObj = {};\n\t\ttmpObj[params] = value;\n\t\tparams = tmpObj;\n\t}\n\n\tparamLoop:\n\tfor (var attr in params){\n\t\tvalue = params[attr];\n\t\tvar parent = this;\n\t\tif (attr.indexOf(\".\") !== -1){\n\t\t\tvar attrSplit = attr.split(\".\");\n\t\t\tfor (var i = 0; i < attrSplit.length - 1; i++){\n\t\t\t\tparent = parent[attrSplit[i]];\n\t\t\t\tif (parent instanceof Tone){\n\t\t\t\t\tattrSplit.splice(0, i+1);\n\t\t\t\t\tvar innerParam = attrSplit.join(\".\");\n\t\t\t\t\tparent.set(innerParam, value);\n\t\t\t\t\tcontinue paramLoop;\n\t\t\t\t}\n\t\t\t}\n\t\t\tattr = attrSplit[attrSplit.length - 1];\n\t\t}\n\t\tvar param = parent[attr];\n\t\tif (Tone.isUndef(param)){\n\t\t\tcontinue;\n\t\t}\n\t\tif ((Tone.Signal && param instanceof Tone.Signal) ||\n\t\t\t(Tone.Param && param instanceof Tone.Param)){\n\t\t\tif (param.value !== value){\n\t\t\t\tparam.value = value;\n\t\t\t}\n\t\t} else if (param instanceof AudioParam){\n\t\t\tif (param.value !== value){\n\t\t\t\tparam.value = value;\n\t\t\t}\n\t\t} else if (Tone.TimeBase && param instanceof Tone.TimeBase){\n\t\t\tparent[attr] = value;\n\t\t} else if (param instanceof Tone){\n\t\t\tparam.set(value);\n\t\t} else if (param !== value){\n\t\t\tparent[attr] = value;\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Get the object's attributes. Given no arguments get\n *  will return all available object properties and their corresponding\n *  values. Pass in a single attribute to retrieve or an array\n *  of attributes. The attribute strings can also include a \".\"\n *  to access deeper properties.\n *  @memberOf Tone#\n *  @example\n * osc.get();\n * //returns {\"type\" : \"sine\", \"frequency\" : 440, ...etc}\n *  @example\n * osc.get(\"type\");\n * //returns { \"type\" : \"sine\"}\n * @example\n * //use dot notation to access deep properties\n * synth.get([\"envelope.attack\", \"envelope.release\"]);\n * //returns {\"envelope\" : {\"attack\" : 0.2, \"release\" : 0.4}}\n *  @param {Array=|string|undefined} params the parameters to get, otherwise will return\n *  \t\t\t\t\t                  all available.\n *  @returns {Object}\n */\nTone.prototype.get = function(params){\n\tif (Tone.isUndef(params)){\n\t\tparams = this._collectDefaults(this.constructor);\n\t} else if (Tone.isString(params)){\n\t\tparams = [params];\n\t}\n\tvar ret = {};\n\tfor (var i = 0; i < params.length; i++){\n\t\tvar attr = params[i];\n\t\tvar parent = this;\n\t\tvar subRet = ret;\n\t\tif (attr.indexOf(\".\") !== -1){\n\t\t\tvar attrSplit = attr.split(\".\");\n\t\t\tfor (var j = 0; j < attrSplit.length - 1; j++){\n\t\t\t\tvar subAttr = attrSplit[j];\n\t\t\t\tsubRet[subAttr] = subRet[subAttr] || {};\n\t\t\t\tsubRet = subRet[subAttr];\n\t\t\t\tparent = parent[subAttr];\n\t\t\t}\n\t\t\tattr = attrSplit[attrSplit.length - 1];\n\t\t}\n\t\tvar param = parent[attr];\n\t\tif (Tone.isObject(params[attr])){\n\t\t\tsubRet[attr] = param.get();\n\t\t} else if (Tone.Signal && param instanceof Tone.Signal){\n\t\t\tsubRet[attr] = param.value;\n\t\t} else if (Tone.Param && param instanceof Tone.Param){\n\t\t\tsubRet[attr] = param.value;\n\t\t} else if (param instanceof AudioParam){\n\t\t\tsubRet[attr] = param.value;\n\t\t} else if (param instanceof Tone){\n\t\t\tsubRet[attr] = param.get();\n\t\t} else if (!Tone.isFunction(param) && Tone.isDefined(param)){\n\t\t\tsubRet[attr] = param;\n\t\t}\n\t}\n\treturn ret;\n};\n\n/**\n *  collect all of the default attributes in one\n *  @private\n *  @param {Function} constr the constructor to find the defaults from\n *  @return {Array} all of the attributes which belong to the class\n */\nTone.prototype._collectDefaults = function(constr){\n\tvar ret = [];\n\tif (Tone.isDefined(constr.defaults)){\n\t\tret = Object.keys(constr.defaults);\n\t}\n\tif (Tone.isDefined(constr._super)){\n\t\tvar superDefs = this._collectDefaults(constr._super);\n\t\t//filter out repeats\n\t\tfor (var i = 0; i < superDefs.length; i++){\n\t\t\tif (ret.indexOf(superDefs[i]) === -1){\n\t\t\t\tret.push(superDefs[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tDEFAULTS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  @memberOf Tone\n *  @param  {Array}  values  The arguments array\n *  @param  {Array}  keys    The names of the arguments\n *  @param {Function|Object} constr The class constructor\n *  @return  {Object}  An object composed of the  defaults between the class' defaults\n *                        and the passed in arguments.\n */\nTone.defaults = function(values, keys, constr){\n\tvar options = {};\n\tif (values.length === 1 && Tone.isObject(values[0])){\n\t\toptions = values[0];\n\t} else {\n\t\tfor (var i = 0; i < keys.length; i++){\n\t\t\toptions[keys[i]] = values[i];\n\t\t}\n\t}\n\tif (Tone.isDefined(constr.defaults)){\n\t\treturn Tone.defaultArg(options, constr.defaults);\n\t} else if (Tone.isObject(constr)){\n\t\treturn Tone.defaultArg(options, constr);\n\t} else {\n\t\treturn options;\n\t}\n};\n\n/**\n *  If the `given` parameter is undefined, use the `fallback`.\n *  If both `given` and `fallback` are object literals, it will\n *  return a deep copy which includes all of the parameters from both\n *  objects. If a parameter is undefined in given, it will return\n *  the fallback property.\n *  <br><br>\n *  WARNING: if object is self referential, it will go into an an\n *  infinite recursive loop.\n *  @memberOf Tone\n *  @param  {*} given\n *  @param  {*} fallback\n *  @return {*}\n */\nTone.defaultArg = function(given, fallback){\n\tif (Tone.isObject(given) && Tone.isObject(fallback)){\n\t\tvar ret = {};\n\t\t//make a deep copy of the given object\n\t\tfor (var givenProp in given){\n\t\t\tret[givenProp] = Tone.defaultArg(fallback[givenProp], given[givenProp]);\n\t\t}\n\t\tfor (var fallbackProp in fallback){\n\t\t\tret[fallbackProp] = Tone.defaultArg(given[fallbackProp], fallback[fallbackProp]);\n\t\t}\n\t\treturn ret;\n\t} else {\n\t\treturn Tone.isUndef(given) ? fallback : given;\n\t}\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tDEBUGGING\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Print the outputs to the console log for debugging purposes. \n *  Prints the contents only if either the object has a property\n *  called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n *  is set to the name of the class. \n *  @example\n * //prints all logs originating from Tone.OscillatorNode\n * Tone.global.TONE_DEBUG_CLASS = \"OscillatorNode\"\n *  @param {*} args Any arguments to print to the console.\n *  @private\n */\nTone.prototype.log = function(){\n\t//if the object is either set to debug = true\n\t//or if there is a string on the Tone.global.with the class name\n\tif (this.debug || this.toString() === Tone.global.TONE_DEBUG_CLASS){\n\t\tvar args = Array.from(arguments);\n\t\targs.unshift(this.toString()+\":\");\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log.apply(undefined, args);\n\t}\n};\n\n/**\n *  Assert that the statement is true, otherwise invoke the error. \n *  @param {Boolean} statement\n *  @param {String} error The message which is passed into an Error\n *  @private\n */\nTone.prototype.assert = function(statement, error){\n\tif (!statement){\n\t\tthrow new Error(error);\n\t}\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tCONNECTIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  connect together all of the arguments in series\n *  @param {...(AudioParam|Tone|AudioNode)} nodes\n *  @returns {Tone}\n *  @memberOf Tone\n *  @static\n */\nTone.connectSeries = function(){\n\tvar currentUnit = arguments[0];\n\tfor (var i = 1; i < arguments.length; i++){\n\t\tvar toUnit = arguments[i];\n\t\tTone.connect(currentUnit, toUnit);\n\t\tcurrentUnit = toUnit;\n\t}\n\treturn Tone;\n};\n\n/**\n * Connect two nodes together so that signal flows from the \n * first node to the second. The second node can be an AudioParam. \n * Optionally specific the input and output channels. \n * @param {(AudioNode|Tone.AudioNode)} srcNode The source node\n * @param {(AudioNode|Tone.AudioNode|AudioParam|Tone.AudioParam)} dstNode The destination node\n * @param {number} [outputNumber=0] The output channel of the srcNode\n * @param {number} [inputNumber=0] The input channel of the dstNode\n */\nTone.connect = function(srcNode, dstNode, outputNumber, inputNumber){\n\t\n\t//resolve the input of the dstNode\n\twhile (Tone.isDefined(dstNode.input)){\n\t\tif (Tone.isArray(dstNode.input)){\n\t\t\tinputNumber = Tone.defaultArg(inputNumber, 0);\n\t\t\tdstNode = dstNode.input[inputNumber];\n\t\t\tinputNumber = 0;\n\t\t} else if (dstNode.input){\n\t\t\tdstNode = dstNode.input;\n\t\t}\n\t}\n\n\t//make the connection\n\tif (dstNode instanceof AudioParam){\n\t\tsrcNode.connect(dstNode, outputNumber);\n\t} else if (dstNode instanceof AudioNode){\n\t\tsrcNode.connect(dstNode, outputNumber, inputNumber);\n\t}\n\n\treturn Tone;\n};\n\n/**\n * Disconnect a node from all nodes or optionally include a destination node and input/output channels.\n * @param {(AudioNode|Tone.AudioNode)} srcNode The source node\n * @param {?(AudioNode|Tone.AudioNode|AudioParam|Tone.AudioParam)} dstNode The destination node\n * @param {?number} [outputNumber=0] The output channel of the srcNode\n * @param {?number} [inputNumber=0] The input channel of the dstNode\n */\nTone.disconnect = function(srcNode, dstNode, outputNumber, inputNumber){\n\tif (dstNode){\n\t\t//resolve the input of the dstNode\n\t\tvar bDone = false;\n\t\twhile (!bDone){\n\t\t\tif (Tone.isArray(dstNode.input)){\n\t\t\t\tif (Tone.isDefined(inputNumber)){\n\t\t\t\t\tTone.disconnect(srcNode, dstNode.input[inputNumber], outputNumber);\n\t\t\t\t} else {\n\t\t\t\t\tdstNode.input.forEach(function(dstNode){\n\t\t\t\t\t\t//ignore errors from connections that aren't there\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tTone.disconnect(srcNode, dstNode, outputNumber);\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbDone = true;\n\t\t\t} else if (dstNode.input){\n\t\t\t\tdstNode = dstNode.input;\n\t\t\t} else {\n\t\t\t\tbDone = true;\n\t\t\t}\n\t\t}\n\t\n\t\t//make the connection\n\t\tif (dstNode instanceof AudioParam){\n\t\t\tsrcNode.disconnect(dstNode, outputNumber);\n\t\t} else if (dstNode instanceof AudioNode){\n\t\t\tsrcNode.disconnect(dstNode, outputNumber, inputNumber);\n\t\t}\n\t} else {\n\t\tsrcNode.disconnect();\n\t}\n\n\treturn Tone;\n};\n\n///////////////////////////////////////////////////////////////////////////\n// TYPE CHECKING\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Test if the arg is undefined\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is undefined\n *  @static\n *  @memberOf Tone\n */\nTone.isUndef = function(val){\n\treturn typeof val === \"undefined\";\n};\n\n/**\n *  Test if the arg is not undefined\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is undefined\n *  @static\n *  @memberOf Tone\n */\nTone.isDefined = function(val){\n\treturn !Tone.isUndef(val);\n};\n\n/**\n *  Test if the arg is a function\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a function\n *  @static\n *  @memberOf Tone\n */\nTone.isFunction = function(val){\n\treturn typeof val === \"function\";\n};\n\n/**\n *  Test if the argument is a number.\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a number\n *  @static\n *  @memberOf Tone\n */\nTone.isNumber = function(arg){\n\treturn (typeof arg === \"number\");\n};\n\n/**\n *  Test if the given argument is an object literal (i.e. `{}`);\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is an object literal.\n *  @static\n *  @memberOf Tone\n */\nTone.isObject = function(arg){\n\treturn (Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object);\n};\n\n/**\n *  Test if the argument is a boolean.\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a boolean\n *  @static\n *  @memberOf Tone\n */\nTone.isBoolean = function(arg){\n\treturn (typeof arg === \"boolean\");\n};\n\n/**\n *  Test if the argument is an Array\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is an array\n *  @static\n *  @memberOf Tone\n */\nTone.isArray = function(arg){\n\treturn (Array.isArray(arg));\n};\n\n/**\n *  Test if the argument is a string.\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a string\n *  @static\n *  @memberOf Tone\n */\nTone.isString = function(arg){\n\treturn (typeof arg === \"string\");\n};\n\n/**\n *  Test if the argument is in the form of a note in scientific pitch notation.\n *  e.g. \"C4\"\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a string\n *  @static\n *  @memberOf Tone\n */\nTone.isNote = function(arg){\n\treturn Tone.isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n};\n\n/**\n *  An empty function.\n *  @static\n */\nTone.noOp = function(){};\n\n/**\n *  Make the property not writable. Internal use only.\n *  @private\n *  @param  {String}  property  the property to make not writable\n */\nTone.prototype._readOnly = function(property){\n\tif (Array.isArray(property)){\n\t\tfor (var i = 0; i < property.length; i++){\n\t\t\tthis._readOnly(property[i]);\n\t\t}\n\t} else {\n\t\tObject.defineProperty(this, property, {\n\t\t\t\"writable\" : false,\n\t\t\t\"enumerable\" : true,\n\t\t});\n\t}\n};\n\n/**\n *  Make an attribute writeable. Interal use only.\n *  @private\n *  @param  {String}  property  the property to make writable\n */\nTone.prototype._writable = function(property){\n\tif (Array.isArray(property)){\n\t\tfor (var i = 0; i < property.length; i++){\n\t\t\tthis._writable(property[i]);\n\t\t}\n\t} else {\n\t\tObject.defineProperty(this, property, {\n\t\t\t\"writable\" : true,\n\t\t});\n\t}\n};\n\n/**\n * Possible play states.\n * @enum {String}\n */\nTone.State = {\n\t\"Started\" : \"started\",\n\t\"Stopped\" : \"stopped\",\n\t\"Paused\" : \"paused\",\n};\n\n/**\n * A reference to the global context, `global` or `Tone.global.\n */\nTone.global = Tone.isUndef(global) ? window : global;\n\n///////////////////////////////////////////////////////////////////////////\n// CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Equal power gain scale. Good for cross-fading.\n *  @param  {NormalRange} percent (0-1)\n *  @return {Number}         output gain (0-1)\n *  @static\n *  @memberOf Tone\n */\nTone.equalPowerScale = function(percent){\n\tvar piFactor = 0.5 * Math.PI;\n\treturn Math.sin(percent * piFactor);\n};\n\n/**\n *  Convert decibels into gain.\n *  @param  {Decibels} db\n *  @return {Number}\n *  @static\n *  @memberOf Tone\n */\nTone.dbToGain = function(db){\n\treturn Math.pow(10, db / 20);\n};\n\n/**\n *  Convert gain to decibels.\n *  @param  {Number} gain (0-1)\n *  @return {Decibels}\n *  @static\n *  @memberOf Tone\n */\nTone.gainToDb = function(gain){\n\treturn 20 * (Math.log(gain) / Math.LN10);\n};\n\n/**\n *  Convert an interval (in semitones) to a frequency ratio.\n *  @param  {Interval} interval the number of semitones above the base note\n *  @return {Number}          the frequency ratio\n *  @static\n *  @memberOf Tone\n *  @example\n * tone.intervalToFrequencyRatio(0); // 1\n * tone.intervalToFrequencyRatio(12); // 2\n * tone.intervalToFrequencyRatio(-12); // 0.5\n */\nTone.intervalToFrequencyRatio = function(interval){\n\treturn Math.pow(2, (interval/12));\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tTIMING\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Return the current time of the AudioContext clock plus\n *  the lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @memberOf Tone#\n */\nTone.prototype.now = function(){\n\treturn Tone.context.now();\n};\n\n/**\n *  Return the current time of the AudioContext clock plus\n *  the lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @static\n *  @memberOf Tone\n */\nTone.now = function(){\n\treturn Tone.context.now();\n};\n\n/**\n *  Return the current time of the AudioContext clock without\n *  any lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @memberOf Tone#\n */\nTone.prototype.immediate = function(){\n\treturn Tone.context.currentTime;\n};\n\n/**\n *  Return the current time of the AudioContext clock without\n *  any lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @memberOf Tone\n */\nTone.immediate = function(){\n\treturn Tone.context.currentTime;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tINHERITANCE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  have a child inherit all of Tone's (or a parent's) prototype\n *  to inherit the parent's properties, make sure to call\n *  Parent.call(this) in the child's constructor\n *\n *  based on closure library's inherit function\n *\n *  @memberOf Tone\n *  @static\n *  @param  {Function} \tchild\n *  @param  {Function=} parent (optional) parent to inherit from\n *                             if no parent is supplied, the child\n *                             will inherit from Tone\n */\nTone.extend = function(child, parent){\n\tif (Tone.isUndef(parent)){\n\t\tparent = Tone;\n\t}\n\tfunction TempConstructor(){}\n\tTempConstructor.prototype = parent.prototype;\n\tchild.prototype = new TempConstructor();\n\t/** @override */\n\tchild.prototype.constructor = child;\n\tchild._super = parent;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tCONTEXT\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * The shared AudioContext\n * @type {Tone.Context}\n * @private\n */\nTone._audioContext = null;\n\n/**\n * \tMost browsers will not play _any_ audio until a user \n * \tclicks something (like a play button). Invoke this method\n * \ton a click or keypress event handler to start the audio context. \n * \tMore about the Autoplay policy [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n *  @memberOf Tone\n *  @static\n *  @return {Promise} This promise is resolved when the audio context is started. \n *  @example\n * document.querySelector('#playbutton').addEventListener('click', () => Tone.start())\n */\nTone.start = function(){\n\treturn Tone.context.resume();\n};\n\n/**\n *  A static pointer to the audio context accessible as Tone.context.\n *  @type {Tone.Context}\n *  @name context\n *  @memberOf Tone\n */\nObject.defineProperty(Tone, \"context\", {\n\t\"get\" : function(){\n\t\treturn Tone._audioContext;\n\t},\n\t\"set\" : function(context){\n\t\tif (context.isContext){\n\t\t\tTone._audioContext = context;\n\t\t} else {\n\t\t\tTone._audioContext = new Tone.Context(context);\n\t\t}\n\t\t//initialize the new audio context\n\t\tTone.Context.emit(\"init\", Tone._audioContext);\n\t}\n});\n\n/**\n *  The AudioContext\n *  @type {Tone.Context}\n *  @name context\n *  @memberOf Tone#\n *  @readOnly\n */\nObject.defineProperty(Tone.prototype, \"context\", {\n\t\"get\" : function(){\n\t\treturn Tone.context;\n\t}\n});\n\n/**\n *  Tone automatically creates a context on init, but if you are working\n *  with other libraries which also create an AudioContext, it can be\n *  useful to set your own. If you are going to set your own context,\n *  be sure to do it at the start of your code, before creating any objects.\n *  @static\n *  @param {AudioContext} ctx The new audio context to set\n */\nTone.setContext = function(ctx){\n\tTone.context = ctx;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tATTRIBUTES\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  The number of seconds of 1 processing block (128 samples)\n *  @type {Number}\n *  @name blockTime\n *  @memberOf Tone\n *  @static\n *  @readOnly\n */\nObject.defineProperty(Tone.prototype, \"blockTime\", {\n\t\"get\" : function(){\n\t\treturn 128 / this.context.sampleRate;\n\t}\n});\n\n/**\n *  The duration in seconds of one sample.\n *  @type {Number}\n *  @name sampleTime\n *  @memberOf Tone\n *  @static\n *  @readOnly\n */\nObject.defineProperty(Tone.prototype, \"sampleTime\", {\n\t\"get\" : function(){\n\t\treturn 1 / this.context.sampleRate;\n\t}\n});\n\n/**\n *  Whether or not all the technologies that Tone.js relies on are supported by the current browser.\n *  @type {Boolean}\n *  @name supported\n *  @memberOf Tone\n *  @readOnly\n *  @static\n */\nObject.defineProperty(Tone, \"supported\", {\n\t\"get\" : function(){\n\t\tvar hasAudioContext = Tone.global.hasOwnProperty(\"AudioContext\") || Tone.global.hasOwnProperty(\"webkitAudioContext\");\n\t\tvar hasPromises = Tone.global.hasOwnProperty(\"Promise\");\n\t\treturn hasAudioContext && hasPromises;\n\t}\n});\n\n/**\n *  Boolean value if the audio context has been initialized.\n *  @type {Boolean}\n *  @memberOf Tone\n *  @static\n *  @name initialized\n *  @readOnly\n */\nObject.defineProperty(Tone, \"initialized\", {\n\t\"get\" : function(){\n\t\treturn Boolean(Tone.context);\n\t}\n});\n\n/**\n *  Get the context when it becomes available\n *  @param  {Function}  resolve  Callback when the context is initialized\n *  @return  {Tone}\n */\nTone.getContext = function(resolve){\n\tif (Tone.initialized){\n\t\tresolve(Tone.context);\n\t} else {\n\t\tvar resCallback = function(){\n\t\t\tresolve(Tone.context);\n\t\t\tTone.Context.off(\"init\", resCallback);\n\t\t};\n\t\tTone.Context.on(\"init\", resCallback);\n\t}\n\treturn Tone;\n};\n\n/**\n * The version number\n * @type {String}\n * @static\n */\nTone.version = version;\n\nexport default Tone;\n\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"happysynth-play\"},[_c('piano-keys',{attrs:{\"octave\":\"3\"},on:{\"notedown\":_vm.noteOn,\"noteup\":_vm.noteOff}}),_c('piano-keys',{attrs:{\"octave\":\"4\"},on:{\"notedown\":_vm.noteOn,\"noteup\":_vm.noteOff}}),_c('piano-keys',{attrs:{\"octave\":\"5\"},on:{\"notedown\":_vm.noteOn,\"noteup\":_vm.noteOff}}),_c('message-container',[_c('message',{attrs:{\"is-shown\":_vm.loadingMsgShown}},[_c('icon',{staticStyle:{\"color\":\"#28f\"},attrs:{\"icon-type\":\"loading\"}}),_vm._v(\" 加载音色采样中... \")],1),_c('message',{attrs:{\"is-shown\":_vm.loadSuccessMsgShown}},[_c('icon',{staticStyle:{\"color\":\"#6b6\"},attrs:{\"icon-type\":\"check\"}}),_vm._v(\" \"+_vm._s(_vm.loadSuccessMsgText)+\" \")],1),_c('message',{attrs:{\"is-shown\":_vm.loadFailMsgShown}},[_c('icon',{staticStyle:{\"color\":\"#f32\"},attrs:{\"icon-type\":\"warning\"}}),_vm._v(\" 加载失败 \")],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Tone from \"../core/Tone\";\n\n/**\n *  @class Tone.TimeBase is a flexible encoding of time\n *         which can be evaluated to and from a string.\n *  @extends {Tone}\n *  @param  {Time}  val    The time value as a number, string or object\n *  @param  {String=}  units  Unit values\n *  @example\n * Tone.TimeBase(4, \"n\")\n * Tone.TimeBase(2, \"t\")\n * Tone.TimeBase(\"2t\")\n * Tone.TimeBase({\"2t\" : 2})\n * Tone.TimeBase(\"2t\") + Tone.TimeBase(\"4n\");\n */\nTone.TimeBase = function(val, units){\n\n\t//allows it to be constructed with or without 'new'\n\tif (this instanceof Tone.TimeBase){\n\n\t\t/**\n\t\t *  The value\n\t\t *  @type  {Number|String|Tone.TimeBase}\n\t\t *  @private\n\t\t */\n\t\tthis._val = val;\n\n\t\t/**\n\t\t * The units\n\t\t * @type {String?}\n\t\t * @private\n\t\t */\n\t\tthis._units = units;\n\n\t\t//test if the value is a string representation of a number\n\t\tif (Tone.isUndef(this._units) && Tone.isString(this._val) &&\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tparseFloat(this._val) == this._val && this._val.charAt(0) !== \"+\"){\n\t\t\tthis._val = parseFloat(this._val);\n\t\t\tthis._units = this._defaultUnits;\n\t\t} else if (val && val.constructor === this.constructor){\n\t\t\t//if they're the same type, just copy values over\n\t\t\tthis._val = val._val;\n\t\t\tthis._units = val._units;\n\t\t} else if (val instanceof Tone.TimeBase){\n\t\t\tswitch (this._defaultUnits){\n\t\t\t\tcase \"s\" :\n\t\t\t\t\tthis._val = val.toSeconds();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"i\" :\n\t\t\t\t\tthis._val = val.toTicks();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"hz\" :\n\t\t\t\t\tthis._val = val.toFrequency();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"midi\" :\n\t\t\t\t\tthis._val = val.toMidi();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault :\n\t\t\t\t\tthrow new Error(\"Unrecognized default units \"+this._defaultUnits);\n\t\t\t}\n\t\t}\n\n\t} else {\n\n\t\treturn new Tone.TimeBase(val, units);\n\t}\n};\n\nTone.extend(Tone.TimeBase);\n\n///////////////////////////////////////////////////////////////////////////\n//\tABSTRACT SYNTAX TREE PARSER\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  All the primary expressions.\n *  @private\n *  @type  {Object}\n */\nTone.TimeBase.prototype._expressions = {\n\t\"n\" : {\n\t\tregexp : /^(\\d+)n(\\.?)$/i,\n\t\tmethod : function(value, dot){\n\t\t\tvalue = parseInt(value);\n\t\t\tvar scalar = dot === \".\" ? 1.5 : 1;\n\t\t\tif (value === 1){\n\t\t\t\treturn this._beatsToUnits(this._getTimeSignature())*scalar;\n\t\t\t} else {\n\t\t\t\treturn this._beatsToUnits(4 / value)*scalar;\n\t\t\t}\n\t\t}\n\t},\n\t\"t\" : {\n\t\tregexp : /^(\\d+)t$/i,\n\t\tmethod : function(value){\n\t\t\tvalue = parseInt(value);\n\t\t\treturn this._beatsToUnits(8 / (parseInt(value) * 3));\n\t\t}\n\t},\n\t\"m\" : {\n\t\tregexp : /^(\\d+)m$/i,\n\t\tmethod : function(value){\n\t\t\treturn this._beatsToUnits(parseInt(value) * this._getTimeSignature());\n\t\t}\n\t},\n\t\"i\" : {\n\t\tregexp : /^(\\d+)i$/i,\n\t\tmethod : function(value){\n\t\t\treturn this._ticksToUnits(parseInt(value));\n\t\t}\n\t},\n\t\"hz\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?)hz$/i,\n\t\tmethod : function(value){\n\t\t\treturn this._frequencyToUnits(parseFloat(value));\n\t\t}\n\t},\n\t\"tr\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/,\n\t\tmethod : function(m, q, s){\n\t\t\tvar total = 0;\n\t\t\tif (m && m !== \"0\"){\n\t\t\t\ttotal += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t}\n\t\t\tif (q && q !== \"0\"){\n\t\t\t\ttotal += this._beatsToUnits(parseFloat(q));\n\t\t\t}\n\t\t\tif (s && s !== \"0\"){\n\t\t\t\ttotal += this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t}\n\t\t\treturn total;\n\t\t}\n\t},\n\t\"s\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?)s$/,\n\t\tmethod : function(value){\n\t\t\treturn this._secondsToUnits(parseFloat(value));\n\t\t}\n\t},\n\t\"samples\" : {\n\t\tregexp : /^(\\d+)samples$/,\n\t\tmethod : function(value){\n\t\t\treturn parseInt(value) / this.context.sampleRate;\n\t\t}\n\t},\n\t\"default\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?)$/,\n\t\tmethod : function(value){\n\t\t\treturn this._expressions[this._defaultUnits].method.call(this, value);\n\t\t}\n\t}\n};\n\n/**\n *  The default units if none are given.\n *  @type {String}\n *  @private\n */\nTone.TimeBase.prototype._defaultUnits = \"s\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tTRANSPORT FALLBACKS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * Return the bpm, or 120 if Transport is not available\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._getBpm = function(){\n\tif (Tone.Transport){\n\t\treturn Tone.Transport.bpm.value;\n\t} else {\n\t\treturn 120;\n\t}\n};\n\n/**\n * Return the timeSignature or 4 if Transport is not available\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._getTimeSignature = function(){\n\tif (Tone.Transport){\n\t\treturn Tone.Transport.timeSignature;\n\t} else {\n\t\treturn 4;\n\t}\n};\n\n/**\n * Return the PPQ or 192 if Transport is not available\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._getPPQ = function(){\n\tif (Tone.Transport){\n\t\treturn Tone.Transport.PPQ;\n\t} else {\n\t\treturn 192;\n\t}\n};\n\n/**\n * Return the current time in whichever context is relevant\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._now = function(){\n\treturn this.now();\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tUNIT CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Returns the value of a frequency in the current units\n *  @param {Frequency} freq\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._frequencyToUnits = function(freq){\n\treturn 1/freq;\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._beatsToUnits = function(beats){\n\treturn (60 / this._getBpm()) * beats;\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._secondsToUnits = function(seconds){\n\treturn seconds;\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._ticksToUnits = function(ticks){\n\treturn ticks * (this._beatsToUnits(1) / this._getPPQ());\n};\n\n/**\n * With no arguments, return 'now'\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._noArg = function(){\n\treturn this._now();\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tEXPRESSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Evaluate the time value. Returns the time\n *  in seconds.\n *  @return  {Seconds}\n */\nTone.TimeBase.prototype.valueOf = function(){\n\tif (Tone.isUndef(this._val)){\n\t\treturn this._noArg();\n\t} else if (Tone.isString(this._val) && Tone.isUndef(this._units)){\n\t\tfor (var units in this._expressions){\n\t\t\tif (this._expressions[units].regexp.test(this._val.trim())){\n\t\t\t\tthis._units = units;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} else if (Tone.isObject(this._val)){\n\t\tvar total = 0;\n\t\tfor (var typeName in this._val){\n\t\t\tvar quantity = this._val[typeName];\n\t\t\tvar time = (new this.constructor(typeName)).valueOf() * quantity;\n\t\t\ttotal += time;\n\t\t}\n\t\treturn total;\n\t}\n\tif (Tone.isDefined(this._units)){\n\t\tvar expr = this._expressions[this._units];\n\t\tvar matching = this._val.toString().trim().match(expr.regexp);\n\t\tif (matching){\n\t\t\treturn expr.method.apply(this, matching.slice(1));\n\t\t} else {\n\t\t\treturn expr.method.call(this, parseFloat(this._val));\n\t\t}\n\t} else {\n\t\treturn this._val;\n\t}\n};\n\n/**\n *  Return the value in seconds\n *  @return {Seconds}\n */\nTone.TimeBase.prototype.toSeconds = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the value in hertz\n *  @return {Frequency}\n */\nTone.TimeBase.prototype.toFrequency = function(){\n\treturn 1 / this.toSeconds();\n};\n\n/**\n *  Return the time in samples\n *  @return  {Samples}\n */\nTone.TimeBase.prototype.toSamples = function(){\n\treturn this.toSeconds() * this.context.sampleRate;\n};\n\n/**\n *  Return the time in milliseconds.\n *  @return  {Milliseconds}\n */\nTone.TimeBase.prototype.toMilliseconds = function(){\n\treturn this.toSeconds() * 1000;\n};\n\n/**\n *  Clean up\n *  @return {Tone.TimeBase} this\n */\nTone.TimeBase.prototype.dispose = function(){\n\tthis._val = null;\n\tthis._units = null;\n};\n\nexport default Tone.TimeBase;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/TimeBase\";\n\n/**\n *  @class Tone.Frequency is a primitive type for encoding Frequency values.\n *         Eventually all time values are evaluated to hertz\n *         using the `eval` method.\n *  @constructor\n *  @extends {Tone.TimeBase}\n *  @param  {String|Number}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * Tone.Frequency(\"C3\") // 261\n * Tone.Frequency(38, \"midi\") //\n * Tone.Frequency(\"C3\").transpose(4);\n */\nTone.Frequency = function(val, units){\n\tif (this instanceof Tone.Frequency){\n\n\t\tTone.TimeBase.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Frequency(val, units);\n\t}\n};\n\nTone.extend(Tone.Frequency, Tone.TimeBase);\n\n///////////////////////////////////////////////////////////////////////////\n//\tAUGMENT BASE EXPRESSIONS\n///////////////////////////////////////////////////////////////////////////\n\nTone.Frequency.prototype._expressions = Object.assign({}, Tone.TimeBase.prototype._expressions, {\n\t\"midi\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?midi)/,\n\t\tmethod : function(value){\n\t\t\tif (this._defaultUnits === \"midi\"){\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn Tone.Frequency.mtof(value);\n\t\t\t}\n\t\t}\n\t},\n\t\"note\" : {\n\t\tregexp : /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n\t\tmethod : function(pitch, octave){\n\t\t\tvar index = noteToScaleIndex[pitch.toLowerCase()];\n\t\t\tvar noteNumber = index + (parseInt(octave) + 1) * 12;\n\t\t\tif (this._defaultUnits === \"midi\"){\n\t\t\t\treturn noteNumber;\n\t\t\t} else {\n\t\t\t\treturn Tone.Frequency.mtof(noteNumber);\n\t\t\t}\n\t\t}\n\t},\n\t\"tr\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t\tmethod : function(m, q, s){\n\t\t\tvar total = 1;\n\t\t\tif (m && m !== \"0\"){\n\t\t\t\ttotal *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t}\n\t\t\tif (q && q !== \"0\"){\n\t\t\t\ttotal *= this._beatsToUnits(parseFloat(q));\n\t\t\t}\n\t\t\tif (s && s !== \"0\"){\n\t\t\t\ttotal *= this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t}\n\t\t\treturn total;\n\t\t}\n\t}\n});\n\n///////////////////////////////////////////////////////////////////////////\n//\tEXPRESSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Transposes the frequency by the given number of semitones.\n *  @param  {Interval}  interval\n *  @return  {Tone.Frequency} A new transposed frequency\n *  @example\n * Tone.Frequency(\"A4\").transpose(3); //\"C5\"\n */\nTone.Frequency.prototype.transpose = function(interval){\n\treturn new this.constructor(this.valueOf() * Tone.intervalToFrequencyRatio(interval));\n};\n\n/**\n *  Takes an array of semitone intervals and returns\n *  an array of frequencies transposed by those intervals.\n *  @param  {Array}  intervals\n *  @return  {Array<Tone.Frequency>} Returns an array of Frequencies\n *  @example\n * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); //[\"A4\", \"C5\", \"E5\"]\n */\nTone.Frequency.prototype.harmonize = function(intervals){\n\treturn intervals.map(function(interval){\n\t\treturn this.transpose(interval);\n\t}.bind(this));\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tUNIT CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Return the value of the frequency as a MIDI note\n *  @return  {MIDI}\n *  @example\n * Tone.Frequency(\"C4\").toMidi(); //60\n */\nTone.Frequency.prototype.toMidi = function(){\n\treturn Tone.Frequency.ftom(this.valueOf());\n};\n\n/**\n *  Return the value of the frequency in Scientific Pitch Notation\n *  @return  {Note}\n *  @example\n * Tone.Frequency(69, \"midi\").toNote(); //\"A4\"\n */\nTone.Frequency.prototype.toNote = function(){\n\tvar freq = this.toFrequency();\n\tvar log = Math.log2(freq / Tone.Frequency.A4);\n\tvar noteNumber = Math.round(12 * log) + 57;\n\tvar octave = Math.floor(noteNumber/12);\n\tif (octave < 0){\n\t\tnoteNumber += -12 * octave;\n\t}\n\tvar noteName = scaleIndexToNote[noteNumber % 12];\n\treturn noteName + octave.toString();\n};\n\n/**\n *  Return the duration of one cycle in seconds.\n *  @return  {Seconds}\n */\nTone.Frequency.prototype.toSeconds = function(){\n\treturn 1 / Tone.TimeBase.prototype.toSeconds.call(this);\n};\n\n/**\n *  Return the value in Hertz\n *  @return  {Frequency}\n */\nTone.Frequency.prototype.toFrequency = function(){\n\treturn Tone.TimeBase.prototype.toFrequency.call(this);\n};\n\n/**\n *  Return the duration of one cycle in ticks\n *  @return  {Ticks}\n */\nTone.Frequency.prototype.toTicks = function(){\n\tvar quarterTime = this._beatsToUnits(1);\n\tvar quarters = this.valueOf() / quarterTime;\n\treturn Math.floor(quarters * Tone.Transport.PPQ);\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tUNIT CONVERSIONS HELPERS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  With no arguments, return 0\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._noArg = function(){\n\treturn 0;\n};\n\n/**\n *  Returns the value of a frequency in the current units\n *  @param {Frequency} freq\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._frequencyToUnits = function(freq){\n\treturn freq;\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._ticksToUnits = function(ticks){\n\treturn 1 / ((ticks * 60) / (Tone.Transport.bpm.value * Tone.Transport.PPQ));\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._beatsToUnits = function(beats){\n\treturn 1 / Tone.TimeBase.prototype._beatsToUnits.call(this, beats);\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._secondsToUnits = function(seconds){\n\treturn 1 / seconds;\n};\n\n/**\n *  The default units if none are given.\n *  @private\n */\nTone.Frequency.prototype._defaultUnits = \"hz\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tFREQUENCY CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Note to scale index\n *  @type  {Object}\n *  @private\n */\nvar noteToScaleIndex = {\n\t\"cbb\" : -2, \"cb\" : -1, \"c\" : 0, \"c#\" : 1, \"cx\" : 2,\n\t\"dbb\" : 0, \"db\" : 1, \"d\" : 2, \"d#\" : 3, \"dx\" : 4,\n\t\"ebb\" : 2, \"eb\" : 3, \"e\" : 4, \"e#\" : 5, \"ex\" : 6,\n\t\"fbb\" : 3, \"fb\" : 4, \"f\" : 5, \"f#\" : 6, \"fx\" : 7,\n\t\"gbb\" : 5, \"gb\" : 6, \"g\" : 7, \"g#\" : 8, \"gx\" : 9,\n\t\"abb\" : 7, \"ab\" : 8, \"a\" : 9, \"a#\" : 10, \"ax\" : 11,\n\t\"bbb\" : 9, \"bb\" : 10, \"b\" : 11, \"b#\" : 12, \"bx\" : 13,\n};\n\n/**\n *  scale index to note (sharps)\n *  @type  {Array}\n *  @private\n */\nvar scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\n/**\n *  The [concert pitch](https://en.wikipedia.org/wiki/Concert_pitch)\n *  A4's values in Hertz.\n *  @type {Frequency}\n *  @static\n */\nTone.Frequency.A4 = 440;\n\n/**\n *  Convert a MIDI note to frequency value.\n *  @param  {MIDI} midi The midi number to convert.\n *  @return {Frequency} the corresponding frequency value\n *  @static\n *  @example\n * Tone.Frequency.mtof(69); // returns 440\n */\nTone.Frequency.mtof = function(midi){\n\treturn Tone.Frequency.A4 * Math.pow(2, (midi - 69) / 12);\n};\n\n/**\n *  Convert a frequency value to a MIDI note.\n *  @param {Frequency} frequency The value to frequency value to convert.\n *  @returns  {MIDI}\n *  @static\n *  @example\n * Tone.Frequency.ftom(440); // returns 69\n */\nTone.Frequency.ftom = function(frequency){\n\treturn 69 + Math.round(12 * Math.log2(frequency / Tone.Frequency.A4));\n};\n\nexport default Tone.Frequency;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/TimeBase\";\nimport \"../type/Frequency\";\n\n/**\n *  @class Tone.Time is a primitive type for encoding Time values.\n *         Tone.Time can be constructed with or without the `new` keyword. Tone.Time can be passed\n *         into the parameter of any method which takes time as an argument.\n *  @constructor\n *  @extends {Tone.TimeBase}\n *  @param  {String|Number|Object}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * var t = Tone.Time(\"4n\");//a quarter note\n */\nTone.Time = function(val, units){\n\tif (this instanceof Tone.Time){\n\n\t\tTone.TimeBase.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Time(val, units);\n\t}\n};\n\nTone.extend(Tone.Time, Tone.TimeBase);\n\n/**\n * Extend the base expressions\n */\nTone.Time.prototype._expressions = Object.assign({}, Tone.TimeBase.prototype._expressions, {\n\t\"quantize\" : {\n\t\tregexp : /^@(.+)/,\n\t\tmethod : function(capture){\n\t\t\tif (Tone.Transport){\n\t\t\t\tvar quantTo = new this.constructor(capture);\n\t\t\t\treturn this._secondsToUnits(Tone.Transport.nextSubdivision(quantTo));\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t},\n\t\"now\" : {\n\t\tregexp : /^\\+(.+)/,\n\t\tmethod : function(capture){\n\t\t\treturn this._now() + (new this.constructor(capture));\n\t\t}\n\t}\n});\n\n/**\n *  Quantize the time by the given subdivision. Optionally add a\n *  percentage which will move the time value towards the ideal\n *  quantized value by that percentage.\n *  @param  {Number|Time}  val    The subdivision to quantize to\n *  @param  {NormalRange}  [percent=1]  Move the time value\n *                                   towards the quantized value by\n *                                   a percentage.\n *  @return  {Number}  this\n *  @example\n * Tone.Time(21).quantize(2) //returns 22\n * Tone.Time(0.6).quantize(\"4n\", 0.5) //returns 0.55\n */\nTone.Time.prototype.quantize = function(subdiv, percent){\n\tpercent = Tone.defaultArg(percent, 1);\n\tvar subdivision = new this.constructor(subdiv);\n\tvar value = this.valueOf();\n\tvar multiple = Math.round(value / subdivision);\n\tvar ideal = multiple * subdivision;\n\tvar diff = ideal - value;\n\treturn value + diff * percent;\n};\n\n///////////////////////////////////////////////////////////////////////////\n// CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Convert a Time to Notation. The notation values are will be the\n *  closest representation between 1m to 128th note.\n *  @return {Notation}\n *  @example\n * //if the Transport is at 120bpm:\n * Tone.Time(2).toNotation();//returns \"1m\"\n */\nTone.Time.prototype.toNotation = function(){\n\tvar time = this.toSeconds();\n\tvar testNotations = [\"1m\"];\n\tfor (var power = 1; power < 8; power++){\n\t\tvar subdiv = Math.pow(2, power);\n\t\ttestNotations.push(subdiv + \"n.\");\n\t\ttestNotations.push(subdiv + \"n\");\n\t\ttestNotations.push(subdiv + \"t\");\n\t}\n\ttestNotations.push(\"0\");\n\t//find the closets notation representation\n\tvar closest = testNotations[0];\n\tvar closestSeconds = Tone.Time(testNotations[0]).toSeconds();\n\ttestNotations.forEach(function(notation){\n\t\tvar notationSeconds = Tone.Time(notation).toSeconds();\n\t\tif (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)){\n\t\t\tclosest = notation;\n\t\t\tclosestSeconds = notationSeconds;\n\t\t}\n\t});\n\treturn closest;\n};\n\n/**\n *  Return the time encoded as Bars:Beats:Sixteenths.\n *  @return  {BarsBeatsSixteenths}\n */\nTone.Time.prototype.toBarsBeatsSixteenths = function(){\n\tvar quarterTime = this._beatsToUnits(1);\n\tvar quarters = this.valueOf() / quarterTime;\n\tquarters = parseFloat(quarters.toFixed(4));\n\tvar measures = Math.floor(quarters / this._getTimeSignature());\n\tvar sixteenths = (quarters % 1) * 4;\n\tquarters = Math.floor(quarters) % this._getTimeSignature();\n\tsixteenths = sixteenths.toString();\n\tif (sixteenths.length > 3){\n\t\t// the additional parseFloat removes insignificant trailing zeroes\n\t\tsixteenths = parseFloat(parseFloat(sixteenths).toFixed(3));\n\t}\n\tvar progress = [measures, quarters, sixteenths];\n\treturn progress.join(\":\");\n};\n\n/**\n *  Return the time in ticks.\n *  @return  {Ticks}\n */\nTone.Time.prototype.toTicks = function(){\n\tvar quarterTime = this._beatsToUnits(1);\n\tvar quarters = this.valueOf() / quarterTime;\n\treturn Math.round(quarters * this._getPPQ());\n};\n\n/**\n *  Return the time in seconds.\n *  @return  {Seconds}\n */\nTone.Time.prototype.toSeconds = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the value as a midi note.\n *  @return  {Midi}\n */\nTone.Time.prototype.toMidi = function(){\n\treturn Tone.Frequency.ftom(this.toFrequency());\n};\n\nexport default Tone.Time;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Time\";\n\n/**\n *  @class Tone.TransportTime is a the time along the Transport's\n *         timeline. It is similar to Tone.Time, but instead of evaluating\n *         against the AudioContext's clock, it is evaluated against\n *         the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n *  @constructor\n *  @param  {Time}  val    The time value as a number or string\n *  @param  {String=}  units  Unit values\n *  @extends {Tone.Time}\n */\nTone.TransportTime = function(val, units){\n\tif (this instanceof Tone.TransportTime){\n\n\t\tTone.Time.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.TransportTime(val, units);\n\t}\n};\n\nTone.extend(Tone.TransportTime, Tone.Time);\n\n/**\n * Return the current time in whichever context is relevant\n * @type {Number}\n * @private\n */\nTone.TransportTime.prototype._now = function(){\n\treturn Tone.Transport.seconds;\n};\n\nexport default Tone.TransportTime;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class Tone.Emitter gives classes which extend it\n *         the ability to listen for and emit events.\n *         Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n *         MIT (c) 2011 Jerome Etienne.\n *\n *  @extends {Tone}\n */\nTone.Emitter = function(){\n\tTone.call(this);\n\t/**\n\t *  Contains all of the events.\n\t *  @private\n\t *  @type  {Object}\n\t */\n\tthis._events = {};\n};\n\nTone.extend(Tone.Emitter);\n\n/**\n *  Bind a callback to a specific event.\n *  @param  {String}    event     The name of the event to listen for.\n *  @param  {Function}  callback  The callback to invoke when the\n *                                event is emitted\n *  @return  {Tone.Emitter}    this\n */\nTone.Emitter.prototype.on = function(event, callback){\n\t//split the event\n\tvar events = event.split(/\\W+/);\n\tfor (var i = 0; i < events.length; i++){\n\t\tvar eventName = events[i];\n\t\tif (!this._events.hasOwnProperty(eventName)){\n\t\t\tthis._events[eventName] = [];\n\t\t}\n\t\tthis._events[eventName].push(callback);\n\t}\n\treturn this;\n};\n\n/**\n *  Bind a callback which is only invoked once\n *  @param  {String}    event     The name of the event to listen for.\n *  @param  {Function}  callback  The callback to invoke when the\n *                                event is emitted\n *  @return  {Tone.Emitter}    this\n */\nTone.Emitter.prototype.once = function(event, callback){\n\tvar boundCallback = function(){\n\t\t//invoke the callback\n\t\tcallback.apply(this, arguments);\n\t\tthis.off(event, boundCallback);\n\t}.bind(this);\n\tthis.on(event, boundCallback);\n\treturn this;\n};\n\n/**\n *  Remove the event listener.\n *  @param  {String}    event     The event to stop listening to.\n *  @param  {Function=}  callback  The callback which was bound to\n *                                the event with Tone.Emitter.on.\n *                                If no callback is given, all callbacks\n *                                events are removed.\n *  @return  {Tone.Emitter}    this\n */\nTone.Emitter.prototype.off = function(event, callback){\n\tvar events = event.split(/\\W+/);\n\tfor (var ev = 0; ev < events.length; ev++){\n\t\tevent = events[ev];\n\t\tif (this._events.hasOwnProperty(event)){\n\t\t\tif (Tone.isUndef(callback)){\n\t\t\t\tthis._events[event] = [];\n\t\t\t} else {\n\t\t\t\tvar eventList = this._events[event];\n\t\t\t\tfor (var i = 0; i < eventList.length; i++){\n\t\t\t\t\tif (eventList[i] === callback){\n\t\t\t\t\t\teventList.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Invoke all of the callbacks bound to the event\n *  with any arguments passed in.\n *  @param  {String}  event  The name of the event.\n *  @param {...*} args The arguments to pass to the functions listening.\n *  @return  {Tone.Emitter}  this\n */\nTone.Emitter.prototype.emit = function(event){\n\tif (this._events){\n\t\tvar args = Array.apply(null, arguments).slice(1);\n\t\tif (this._events.hasOwnProperty(event)){\n\t\t\tvar eventList = this._events[event].slice(0);\n\t\t\tfor (var i = 0, len = eventList.length; i < len; i++){\n\t\t\t\teventList[i].apply(this, args);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Add Emitter functions (on/off/emit) to the object\n *  @param  {Object|Function}  object  The object or class to extend.\n *  @returns {Tone.Emitter}\n */\nTone.Emitter.mixin = function(object){\n\tvar functions = [\"on\", \"once\", \"off\", \"emit\"];\n\tobject._events = {};\n\tfor (var i = 0; i < functions.length; i++){\n\t\tvar func = functions[i];\n\t\tvar emitterFunc = Tone.Emitter.prototype[func];\n\t\tobject[func] = emitterFunc;\n\t}\n\treturn Tone.Emitter;\n};\n\n/**\n *  Clean up\n *  @return  {Tone.Emitter}  this\n */\nTone.Emitter.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis._events = null;\n\treturn this;\n};\n\nexport default Tone.Emitter;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class A Timeline class for scheduling and maintaining state\n *         along a timeline. All events must have a \"time\" property.\n *         Internally, events are stored in time order for fast\n *         retrieval.\n *  @extends {Tone}\n *  @param {Positive} [memory=Infinity] The number of previous events that are retained.\n */\nTone.Timeline = function(){\n\n\tvar options = Tone.defaults(arguments, [\"memory\"], Tone.Timeline);\n\tTone.call(this);\n\n\t/**\n\t *  The array of scheduled timeline events\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._timeline = [];\n\n\t/**\n\t *  The memory of the timeline, i.e.\n\t *  how many events in the past it will retain\n\t *  @type {Positive}\n\t */\n\tthis.memory = options.memory;\n};\n\nTone.extend(Tone.Timeline);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n */\nTone.Timeline.defaults = {\n\t\"memory\" : Infinity\n};\n\n/**\n *  The number of items in the timeline.\n *  @type {Number}\n *  @memberOf Tone.Timeline#\n *  @name length\n *  @readOnly\n */\nObject.defineProperty(Tone.Timeline.prototype, \"length\", {\n\tget : function(){\n\t\treturn this._timeline.length;\n\t}\n});\n\n/**\n *  Insert an event object onto the timeline. Events must have a \"time\" attribute.\n *  @param  {Object}  event  The event object to insert into the\n *                           timeline.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.add = function(event){\n\t//the event needs to have a time attribute\n\tif (Tone.isUndef(event.time)){\n\t\tthrow new Error(\"Tone.Timeline: events must have a time attribute\");\n\t}\n\tevent.time = event.time.valueOf();\n\tvar index = this._search(event.time);\n\tthis._timeline.splice(index + 1, 0, event);\n\t//if the length is more than the memory, remove the previous ones\n\tif (this.length > this.memory){\n\t\tvar diff = this.length - this.memory;\n\t\tthis._timeline.splice(0, diff);\n\t}\n\treturn this;\n};\n\n/**\n *  Remove an event from the timeline.\n *  @param  {Object}  event  The event object to remove from the list.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.remove = function(event){\n\tvar index = this._timeline.indexOf(event);\n\tif (index !== -1){\n\t\tthis._timeline.splice(index, 1);\n\t}\n\treturn this;\n};\n\n/**\n *  Get the nearest event whose time is less than or equal to the given time.\n *  @param  {Number}  time  The time to query.\n *  @param  {String}  comparator Which value in the object to compare\n *  @returns {Object} The event object set after that time.\n */\nTone.Timeline.prototype.get = function(time, comparator){\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar index = this._search(time, comparator);\n\tif (index !== -1){\n\t\treturn this._timeline[index];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Return the first event in the timeline without removing it\n *  @returns {Object} The first event object\n */\nTone.Timeline.prototype.peek = function(){\n\treturn this._timeline[0];\n};\n\n/**\n *  Return the first event in the timeline and remove it\n *  @returns {Object} The first event object\n */\nTone.Timeline.prototype.shift = function(){\n\treturn this._timeline.shift();\n};\n\n/**\n *  Get the event which is scheduled after the given time.\n *  @param  {Number}  time  The time to query.\n *  @param  {String}  comparator Which value in the object to compare\n *  @returns {Object} The event object after the given time\n */\nTone.Timeline.prototype.getAfter = function(time, comparator){\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar index = this._search(time, comparator);\n\tif (index + 1 < this._timeline.length){\n\t\treturn this._timeline[index + 1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Get the event before the event at the given time.\n *  @param  {Number}  time  The time to query.\n *  @param  {String}  comparator Which value in the object to compare\n *  @returns {Object} The event object before the given time\n */\nTone.Timeline.prototype.getBefore = function(time, comparator){\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar len = this._timeline.length;\n\t//if it's after the last item, return the last item\n\tif (len > 0 && this._timeline[len - 1][comparator] < time){\n\t\treturn this._timeline[len - 1];\n\t}\n\tvar index = this._search(time, comparator);\n\tif (index - 1 >= 0){\n\t\treturn this._timeline[index - 1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Cancel events after the given time\n *  @param  {Number}  time  The time to query.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.cancel = function(after){\n\tif (this._timeline.length > 1){\n\t\tvar index = this._search(after);\n\t\tif (index >= 0){\n\t\t\tif (this._timeline[index].time === after){\n\t\t\t\t//get the first item with that time\n\t\t\t\tfor (var i = index; i >= 0; i--){\n\t\t\t\t\tif (this._timeline[i].time === after){\n\t\t\t\t\t\tindex = i;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._timeline = this._timeline.slice(0, index);\n\t\t\t} else {\n\t\t\t\tthis._timeline = this._timeline.slice(0, index + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._timeline = [];\n\t\t}\n\t} else if (this._timeline.length === 1){\n\t\t//the first item's time\n\t\tif (this._timeline[0].time >= after){\n\t\t\tthis._timeline = [];\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel events before or equal to the given time.\n *  @param  {Number}  time  The time to cancel before.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.cancelBefore = function(time){\n\tvar index = this._search(time);\n\tif (index >= 0){\n\t\tthis._timeline = this._timeline.slice(index + 1);\n\t}\n\treturn this;\n};\n\n/**\n * Returns the previous event if there is one. null otherwise\n * @param  {Object} event The event to find the previous one of\n * @return {Object}       The event right before the given event\n */\nTone.Timeline.prototype.previousEvent = function(event){\n\tvar index = this._timeline.indexOf(event);\n\tif (index > 0){\n\t\treturn this._timeline[index-1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Does a binary search on the timeline array and returns the\n *  nearest event index whose time is after or equal to the given time.\n *  If a time is searched before the first index in the timeline, -1 is returned.\n *  If the time is after the end, the index of the last item is returned.\n *  @param  {Number}  time\n *  @param  {String}  comparator Which value in the object to compare\n *  @return  {Number} the index in the timeline array\n *  @private\n */\nTone.Timeline.prototype._search = function(time, comparator){\n\tif (this._timeline.length === 0){\n\t\treturn -1;\n\t}\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar beginning = 0;\n\tvar len = this._timeline.length;\n\tvar end = len;\n\tif (len > 0 && this._timeline[len - 1][comparator] <= time){\n\t\treturn len - 1;\n\t}\n\twhile (beginning < end){\n\t\t// calculate the midpoint for roughly equal partition\n\t\tvar midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t\tvar event = this._timeline[midPoint];\n\t\tvar nextEvent = this._timeline[midPoint + 1];\n\t\tif (event[comparator] === time){\n\t\t\t//choose the last one that has the same time\n\t\t\tfor (var i = midPoint; i < this._timeline.length; i++){\n\t\t\t\tvar testEvent = this._timeline[i];\n\t\t\t\tif (testEvent[comparator] === time){\n\t\t\t\t\tmidPoint = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn midPoint;\n\t\t} else if (event[comparator] < time && nextEvent[comparator] > time){\n\t\t\treturn midPoint;\n\t\t} else if (event[comparator] > time){\n\t\t\t//search lower\n\t\t\tend = midPoint;\n\t\t} else {\n\t\t\t//search upper\n\t\t\tbeginning = midPoint + 1;\n\t\t}\n\t}\n\treturn -1;\n};\n\n/**\n *  Internal iterator. Applies extra safety checks for\n *  removing items from the array.\n *  @param  {Function}  callback\n *  @param  {Number=}    lowerBound\n *  @param  {Number=}    upperBound\n *  @private\n */\nTone.Timeline.prototype._iterate = function(callback, lowerBound, upperBound){\n\tlowerBound = Tone.defaultArg(lowerBound, 0);\n\tupperBound = Tone.defaultArg(upperBound, this._timeline.length-1);\n\tthis._timeline.slice(lowerBound, upperBound+1).forEach(function(event){\n\t\tcallback.call(this, event);\n\t}.bind(this));\n};\n\n/**\n *  Iterate over everything in the array\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEach = function(callback){\n\tthis._iterate(callback);\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array at or before the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachBefore = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar upperBound = this._search(time);\n\tif (upperBound !== -1){\n\t\tthis._iterate(callback, 0, upperBound);\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array after the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachAfter = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar lowerBound = this._search(time);\n\tthis._iterate(callback, lowerBound + 1);\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array between the startTime and endTime. \n *  The timerange is inclusive of the startTime, but exclusive of the endTime. \n *  range = [startTime, endTime). \n *  @param  {Number}  startTime The time to check if items are before\n *  @param  {Number}  endTime The end of the test interval. \n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachBetween = function(startTime, endTime, callback){\n\tvar lowerBound = this._search(startTime);\n\tvar upperBound = this._search(endTime);\n\tif (lowerBound !== -1 && upperBound !== -1){\n\t\tif (this._timeline[lowerBound].time !== startTime){\n\t\t\tlowerBound += 1;\n\t\t}\n\t\t//exclusive of the end time\n\t\tif (this._timeline[upperBound].time === endTime){\n\t\t\tupperBound -= 1;\n\t\t}\n\t\tthis._iterate(callback, lowerBound, upperBound);\n\t} else if (lowerBound === -1){\n\t\tthis._iterate(callback, 0, upperBound);\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array at or after the given time. Similar to\n *  forEachAfter, but includes the item(s) at the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachFrom = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar lowerBound = this._search(time);\n\t//work backwards until the event time is less than time\n\twhile (lowerBound >= 0 && this._timeline[lowerBound].time >= time){\n\t\tlowerBound--;\n\t}\n\tthis._iterate(callback, lowerBound + 1);\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array at the given time\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachAtTime = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar upperBound = this._search(time);\n\tif (upperBound !== -1){\n\t\tthis._iterate(function(event){\n\t\t\tif (event.time === time){\n\t\t\t\tcallback.call(this, event);\n\t\t\t}\n\t\t}, 0, upperBound);\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Timeline}  this\n */\nTone.Timeline.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis._timeline = null;\n\treturn this;\n};\n\nexport default Tone.Timeline;\n\n","import Tone from \"../core/Tone\";\nif (Tone.supported){\n\n\tif (!Tone.global.hasOwnProperty(\"OfflineAudioContext\") && Tone.global.hasOwnProperty(\"webkitOfflineAudioContext\")){\n\t\tTone.global.OfflineAudioContext = Tone.global.webkitOfflineAudioContext;\n\t}\n\n\t//returns promise?\n\tvar context = new OfflineAudioContext(1, 1, 44100);\n\tvar ret = context.startRendering();\n\tif (!(ret && Tone.isFunction(ret.then))){\n\t\tOfflineAudioContext.prototype._native_startRendering = OfflineAudioContext.prototype.startRendering;\n\t\tOfflineAudioContext.prototype.startRendering = function(){\n\t\t\treturn new Promise(function(done){\n\t\t\t\tthis.oncomplete = function(e){\n\t\t\t\t\tdone(e.renderedBuffer);\n\t\t\t\t};\n\t\t\t\tthis._native_startRendering();\n\t\t\t}.bind(this));\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../shim/OfflineAudioContext\";\n\nif (Tone.supported){\n\tif (!Tone.global.hasOwnProperty(\"AudioContext\") && Tone.global.hasOwnProperty(\"webkitAudioContext\")){\n\t\tTone.global.AudioContext = Tone.global.webkitAudioContext;\n\t}\n\n\t//not functionally equivalent, but only an API placeholder\n\tif (!AudioContext.prototype.close){\n\t\tAudioContext.prototype.close = function(){\n\t\t\tif (Tone.isFunction(this.suspend)){\n\t\t\t\tthis.suspend();\n\t\t\t}\n\t\t\treturn Promise.resolve();\n\t\t};\n\t}\n\n\t//not functionally equivalent\n\tif (!AudioContext.prototype.resume){\n\t\tAudioContext.prototype.resume = function(){\n\t\t\t//play some silent audio to jumpstart the context\n\t\t\tvar buffer = this.createBuffer(1, 1, this.sampleRate);\n\t\t\tvar source = this.createBufferSource();\n\t\t\tsource.buffer = buffer;\n\t\t\tsource.connect(this.destination);\n\t\t\tsource.start(0);\n\t\t\treturn Promise.resolve();\n\t\t};\n\t}\n\n\t//createGain\n\tif (!AudioContext.prototype.createGain && AudioContext.prototype.createGainNode){\n\t\tAudioContext.prototype.createGain = AudioContext.prototype.createGainNode;\n\t}\n\n\t//createDelay\n\tif (!AudioContext.prototype.createDelay && AudioContext.prototype.createDelayNode){\n\t\tAudioContext.prototype.createDelay = AudioContext.prototype.createDelayNode;\n\t}\n\n\t//test decodeAudioData returns a promise\n\t// https://github.com/mohayonao/web-audio-api-shim/blob/master/src/AudioContext.js\n\t// MIT License (c) 2015 @mohayonao\n\tvar decodeAudioDataPromise = false;\n\tvar offlineContext = new OfflineAudioContext(1, 1, 44100);\n\tvar audioData = new Uint32Array([1179011410, 48, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 8, 0, 0, 0, 0]).buffer;\n\ttry {\n\t\tvar ret = offlineContext.decodeAudioData(audioData);\n\t\tif (ret && Tone.isFunction(ret.then)){\n\t\t\tdecodeAudioDataPromise = true;\n\t\t}\n\t} catch (e){\n\t\tdecodeAudioDataPromise = false;\n\t}\n\n\tif (!decodeAudioDataPromise){\n\t\tAudioContext.prototype._native_decodeAudioData = AudioContext.prototype.decodeAudioData;\n\t\tAudioContext.prototype.decodeAudioData = function(audioData){\n\t\t\treturn new Promise(function(success, error){\n\t\t\t\tthis._native_decodeAudioData(audioData, success, error);\n\t\t\t}.bind(this));\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Emitter\";\nimport \"../core/Timeline\";\nimport \"../shim/AudioContext\";\n\nvar AudioContextProperties = [\"baseLatency\", \"destination\", \"currentTime\", \"sampleRate\", \"listener\", \"state\"];\nvar AudioContextMethods = [\"suspend\", \"close\", \"resume\", \"getOutputTimestamp\", \"createMediaElementSource\", \"createMediaStreamSource\", \"createMediaStreamDestination\", \"createBuffer\", \"decodeAudioData\", \"createBufferSource\", \"createConstantSource\", \"createGain\", \"createDelay\", \"createBiquadFilter\", \"createIIRFilter\", \"createWaveShaper\", \"createPanner\", \"createConvolver\", \"createDynamicsCompressor\", \"createAnalyser\", \"createScriptProcessor\", \"createStereoPanner\", \"createOscillator\", \"createPeriodicWave\", \"createChannelSplitter\", \"createChannelMerger\", \"audioWorklet\"];\n\n/**\n *  @class Wrapper around the native AudioContext.\n *  @extends {Tone.Emitter}\n *  @param {AudioContext=} context optionally pass in a context\n */\nTone.Context = function(){\n\n\tTone.Emitter.call(this);\n\n\tvar options = Tone.defaults(arguments, [\"context\"], Tone.Context);\n\n\tif (!options.context){\n\t\toptions.context = new Tone.global.AudioContext();\n\t\tif (!options.context){\n\t\t\tthrow new Error(\"could not create AudioContext. Possibly too many AudioContexts running already.\");\n\t\t}\n\t}\n\tthis._context = options.context;\n\t//make sure it's not an AudioContext wrapper\n\twhile (this._context.rawContext){\n\t\tthis._context = this._context.rawContext;\n\t}\n\n\t// extend all of the properties\n\tAudioContextProperties.forEach(function(prop){\n\t\tthis._defineProperty(this._context, prop);\n\t}.bind(this));\n\t// extend all of the methods\n\tAudioContextMethods.forEach(function(method){\n\t\tthis._defineMethod(this._context, method);\n\t}.bind(this));\n\n\t/**\n\t *  The default latency hint\n\t *  @type  {String}\n\t *  @private\n\t */\n\tthis._latencyHint = options.latencyHint;\n\n\t/**\n\t *  An object containing all of the constants AudioBufferSourceNodes\n\t *  @type  {Object}\n\t *  @private\n\t */\n\tthis._constants = {};\n\n\t///////////////////////////////////////////////////////////////////////\n\t// WORKER\n\t///////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  The amount of time events are scheduled\n\t *  into the future\n\t *  @type  {Number}\n\t */\n\tthis.lookAhead = options.lookAhead;\n\n\t/**\n\t *  A reference to the actual computed update interval\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._computedUpdateInterval = 0;\n\n\t/**\n\t *  A reliable callback method\n\t *  @private\n\t *  @type  {Ticker}\n\t */\n\tthis._ticker = new Ticker(this.emit.bind(this, \"tick\"), options.clockSource, options.updateInterval);\n\n\t///////////////////////////////////////////////////////////////////////\n\t// TIMEOUTS\n\t///////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  All of the setTimeout events.\n\t *  @type  {Tone.Timeline}\n\t *  @private\n\t */\n\tthis._timeouts = new Tone.Timeline();\n\n\t/**\n\t *  The timeout id counter\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._timeoutIds = 0;\n\n\tthis.on(\"tick\", this._timeoutLoop.bind(this));\n\n\t//forward state change events\n\tthis._context.onstatechange = function(e){\n\t\tthis.emit(\"statechange\", e);\n\t}.bind(this);\n};\n\nTone.extend(Tone.Context, Tone.Emitter);\nTone.Emitter.mixin(Tone.Context);\n\n/**\n * defaults\n * @static\n * @type {Object}\n */\nTone.Context.defaults = {\n\t\"clockSource\" : \"worker\",\n\t\"latencyHint\" : \"interactive\",\n\t\"lookAhead\" : 0.1,\n\t\"updateInterval\" : 0.03\n};\n\n/**\n * Is an instanceof Tone.Context\n * @type {Boolean}\n */\nTone.Context.prototype.isContext = true;\n\n/**\n *  Define a property on this Tone.Context.\n *  This is used to extend the native AudioContext\n *  @param  {AudioContext}  context\n *  @param  {String}  prop\n *  @private\n */\nTone.Context.prototype._defineProperty = function(context, prop){\n\tif (Tone.isUndef(this[prop])){\n\t\tObject.defineProperty(this, prop, {\n\t\t\t\"get\" : function(){\n\t\t\t\treturn context[prop];\n\t\t\t},\n\t\t\t\"set\" : function(val){\n\t\t\t\tcontext[prop] = val;\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n *  Define a method on this Tone.Context.\n *  This is used to extend the native AudioContext\n *  @param  {AudioContext}  context\n *  @param  {String}  prop\n *  @private\n */\nTone.Context.prototype._defineMethod = function(context, prop){\n\tif (Tone.isUndef(this[prop])){\n\t\tObject.defineProperty(this, prop, {\n\t\t\t\"get\" : function(){\n\t\t\t\treturn context[prop].bind(context);\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n *  The current audio context time\n *  @return  {Number}\n */\nTone.Context.prototype.now = function(){\n\treturn this._context.currentTime + this.lookAhead;\n};\n\n/**\n *  The audio output destination. Alias for Tone.Master\n *  @readyOnly\n *  @type  {Tone.Master}\n */\nObject.defineProperty(Tone.Context.prototype, \"destination\", {\n\t\"get\" : function(){\n\t\tif (!this.master){\n\t\t\treturn this._context.destination;\n\t\t} else {\n\t\t\treturn this.master;\n\t\t}\n\t}\n});\n\n/**\n *  Starts the audio context from a suspended state. This is required\n *  to initially start the AudioContext.\n *  @return  {Promise}\n */\nTone.Context.prototype.resume = function(){\n\tif (this._context.state === \"suspended\" && this._context instanceof AudioContext){\n\t\treturn this._context.resume();\n\t} else {\n\t\treturn Promise.resolve();\n\t}\n};\n\n/**\n *  Promise which is invoked when the context is running.\n *  Tries to resume the context if it's not started.\n *  @return  {Promise}\n */\nTone.Context.prototype.close = function(){\n\tvar closePromise = Promise.resolve();\n\t//never close the global Tone.Context\n\tif (this !== Tone.global.TONE_AUDIO_CONTEXT){\n\t\tclosePromise = this.rawContext.close();\n\t}\n\treturn closePromise.then(function(){\n\t\tTone.Context.emit(\"close\", this);\n\t}.bind(this));\n};\n\n/**\n *  Generate a looped buffer at some constant value.\n *  @param  {Number}  val\n *  @return  {BufferSourceNode}\n */\nTone.Context.prototype.getConstant = function(val){\n\tif (this._constants[val]){\n\t\treturn this._constants[val];\n\t} else {\n\t\tvar buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n\t\tvar arr = buffer.getChannelData(0);\n\t\tfor (var i = 0; i < arr.length; i++){\n\t\t\tarr[i] = val;\n\t\t}\n\t\tvar constant = this._context.createBufferSource();\n\t\tconstant.channelCount = 1;\n\t\tconstant.channelCountMode = \"explicit\";\n\t\tconstant.buffer = buffer;\n\t\tconstant.loop = true;\n\t\tconstant.start(0);\n\t\tthis._constants[val] = constant;\n\t\treturn constant;\n\t}\n};\n\n/**\n *  The private loop which keeps track of the context scheduled timeouts\n *  Is invoked from the clock source\n *  @private\n */\nTone.Context.prototype._timeoutLoop = function(){\n\tvar now = this.now();\n\twhile (this._timeouts && this._timeouts.length && this._timeouts.peek().time <= now){\n\t\tthis._timeouts.shift().callback();\n\t}\n};\n\n/**\n *  A setTimeout which is gaurenteed by the clock source.\n *  Also runs in the offline context.\n *  @param  {Function}  fn       The callback to invoke\n *  @param  {Seconds}    timeout  The timeout in seconds\n *  @returns {Number} ID to use when invoking Tone.Context.clearTimeout\n */\nTone.Context.prototype.setTimeout = function(fn, timeout){\n\tthis._timeoutIds++;\n\tvar now = this.now();\n\tthis._timeouts.add({\n\t\t\"callback\" : fn,\n\t\t\"time\" : now + timeout,\n\t\t\"id\" : this._timeoutIds\n\t});\n\treturn this._timeoutIds;\n};\n\n/**\n *  Clears a previously scheduled timeout with Tone.context.setTimeout\n *  @param  {Number}  id  The ID returned from setTimeout\n *  @return  {Tone.Context}  this\n */\nTone.Context.prototype.clearTimeout = function(id){\n\tthis._timeouts.forEach(function(event){\n\t\tif (event.id === id){\n\t\t\tthis.remove(event);\n\t\t}\n\t});\n\treturn this;\n};\n\n/**\n *  How often the Web Worker callback is invoked.\n *  This number corresponds to how responsive the scheduling\n *  can be. Context.updateInterval + Context.lookAhead gives you the\n *  total latency between scheduling an event and hearing it.\n *  @type {Number}\n *  @memberOf Tone.Context#\n *  @name updateInterval\n */\nObject.defineProperty(Tone.Context.prototype, \"updateInterval\", {\n\t\"get\" : function(){\n\t\treturn this._ticker.updateInterval;\n\t},\n\t\"set\" : function(interval){\n\t\tthis._ticker.updateInterval = interval;\n\t}\n});\n\n/**\n *  The unwrapped AudioContext.\n *  @type {AudioContext}\n *  @memberOf Tone.Context#\n *  @name rawContext\n *  @readOnly\n */\nObject.defineProperty(Tone.Context.prototype, \"rawContext\", {\n\t\"get\" : function(){\n\t\treturn this._context;\n\t}\n});\n\n/**\n *  What the source of the clock is, either \"worker\" (Web Worker [default]),\n *  \"timeout\" (setTimeout), or \"offline\" (none).\n *  @type {String}\n *  @memberOf Tone.Context#\n *  @name clockSource\n */\nObject.defineProperty(Tone.Context.prototype, \"clockSource\", {\n\t\"get\" : function(){\n\t\treturn this._ticker.type;\n\t},\n\t\"set\" : function(type){\n\t\tthis._ticker.type = type;\n\t}\n});\n\n/**\n *  The type of playback, which affects tradeoffs between audio\n *  output latency and responsiveness.\n *\n *  In addition to setting the value in seconds, the latencyHint also\n *  accepts the strings \"interactive\" (prioritizes low latency),\n *  \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n *  latency and performance), and \"fastest\" (lowest latency, might glitch more often).\n *  @type {String|Seconds}\n *  @memberOf Tone.Context#\n *  @name latencyHint\n *  @example\n * //set the lookAhead to 0.3 seconds\n * Tone.context.latencyHint = 0.3;\n */\nObject.defineProperty(Tone.Context.prototype, \"latencyHint\", {\n\t\"get\" : function(){\n\t\treturn this._latencyHint;\n\t},\n\t\"set\" : function(hint){\n\t\tvar lookAhead = hint;\n\t\tthis._latencyHint = hint;\n\t\tif (Tone.isString(hint)){\n\t\t\tswitch (hint){\n\t\t\t\tcase \"interactive\" :\n\t\t\t\t\tlookAhead = 0.1;\n\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"playback\" :\n\t\t\t\t\tlookAhead = 0.8;\n\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"balanced\" :\n\t\t\t\t\tlookAhead = 0.25;\n\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"fastest\" :\n\t\t\t\t\tthis._context.latencyHint = \"interactive\";\n\t\t\t\t\tlookAhead = 0.01;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.lookAhead = lookAhead;\n\t\tthis.updateInterval = lookAhead/3;\n\t}\n});\n\n/**\n *  Unlike other dispose methods, this returns a Promise\n *  which executes when the context is closed and disposed\n *  @returns {Promise} this\n */\nTone.Context.prototype.dispose = function(){\n\treturn this.close().then(function(){\n\t\tTone.Emitter.prototype.dispose.call(this);\n\t\tthis._ticker.dispose();\n\t\tthis._ticker = null;\n\t\tthis._timeouts.dispose();\n\t\tthis._timeouts = null;\n\t\tfor (var con in this._constants){\n\t\t\tthis._constants[con].disconnect();\n\t\t}\n\t\tthis._constants = null;\n\t}.bind(this));\n};\n\n/**\n * @class A class which provides a reliable callback using either\n *        a Web Worker, or if that isn't supported, falls back to setTimeout.\n * @private\n */\nvar Ticker = function(callback, type, updateInterval){\n\n\t/**\n\t * Either \"worker\" or \"timeout\"\n\t * @type {String}\n\t * @private\n\t */\n\tthis._type = type;\n\n\t/**\n\t * The update interval of the worker\n\t * @private\n\t * @type {Number}\n\t */\n\tthis._updateInterval = updateInterval;\n\n\t/**\n\t * The callback to invoke at regular intervals\n\t * @type {Function}\n\t * @private\n\t */\n\tthis._callback = Tone.defaultArg(callback, Tone.noOp);\n\n\t//create the clock source for the first time\n\tthis._createClock();\n};\n\n/**\n * The possible ticker types\n * @private\n * @type {Object}\n */\nTicker.Type = {\n\t\"Worker\" : \"worker\",\n\t\"Timeout\" : \"timeout\",\n\t\"Offline\" : \"offline\"\n};\n\n/**\n *  Generate a web worker\n *  @return  {WebWorker}\n *  @private\n */\nTicker.prototype._createWorker = function(){\n\n\t//URL Shim\n\tTone.global.URL = Tone.global.URL || Tone.global.webkitURL;\n\n\tvar blob = new Blob([\n\t\t//the initial timeout time\n\t\t\"var timeoutTime = \"+(this._updateInterval * 1000).toFixed(1)+\";\" +\n\t\t//onmessage callback\n\t\t\"self.onmessage = function(msg){\" +\n\t\t\"\ttimeoutTime = parseInt(msg.data);\" +\n\t\t\"};\" +\n\t\t//the tick function which posts a message\n\t\t//and schedules a new tick\n\t\t\"function tick(){\" +\n\t\t\"\tsetTimeout(tick, timeoutTime);\" +\n\t\t\"\tself.postMessage('tick');\" +\n\t\t\"}\" +\n\t\t//call tick initially\n\t\t\"tick();\"\n\t]);\n\tvar blobUrl = URL.createObjectURL(blob);\n\tvar worker = new Worker(blobUrl);\n\n\tworker.onmessage = this._callback.bind(this);\n\n\tthis._worker = worker;\n};\n\n/**\n * Create a timeout loop\n * @private\n */\nTicker.prototype._createTimeout = function(){\n\tthis._timeout = setTimeout(function(){\n\t\tthis._createTimeout();\n\t\tthis._callback();\n\t}.bind(this), this._updateInterval * 1000);\n};\n\n/**\n * Create the clock source.\n * @private\n */\nTicker.prototype._createClock = function(){\n\tif (this._type === Ticker.Type.Worker){\n\t\ttry {\n\t\t\tthis._createWorker();\n\t\t} catch (e){\n\t\t\t// workers not supported, fallback to timeout\n\t\t\tthis._type = Ticker.Type.Timeout;\n\t\t\tthis._createClock();\n\t\t}\n\t} else if (this._type === Ticker.Type.Timeout){\n\t\tthis._createTimeout();\n\t}\n};\n\n/**\n * @memberOf Ticker#\n * @type {Number}\n * @name updateInterval\n * @private\n */\nObject.defineProperty(Ticker.prototype, \"updateInterval\", {\n\t\"get\" : function(){\n\t\treturn this._updateInterval;\n\t},\n\t\"set\" : function(interval){\n\t\tthis._updateInterval = Math.max(interval, 128/44100);\n\t\tif (this._type === Ticker.Type.Worker){\n\t\t\tthis._worker.postMessage(Math.max(interval * 1000, 1));\n\t\t}\n\t}\n});\n\n/**\n * The type of the ticker, either a worker or a timeout\n * @memberOf Ticker#\n * @type {Number}\n * @name type\n * @private\n */\nObject.defineProperty(Ticker.prototype, \"type\", {\n\t\"get\" : function(){\n\t\treturn this._type;\n\t},\n\t\"set\" : function(type){\n\t\tthis._disposeClock();\n\t\tthis._type = type;\n\t\tthis._createClock();\n\t}\n});\n\n/**\n * Clean up the current clock source\n * @private\n */\nTicker.prototype._disposeClock = function(){\n\tif (this._timeout){\n\t\tclearTimeout(this._timeout);\n\t\tthis._timeout = null;\n\t}\n\tif (this._worker){\n\t\tthis._worker.terminate();\n\t\tthis._worker.onmessage = null;\n\t\tthis._worker = null;\n\t}\n};\n\n/**\n * Clean up\n * @private\n */\nTicker.prototype.dispose = function(){\n\tthis._disposeClock();\n\tthis._callback = null;\n};\n\n// set the audio context initially, and if one is not already created\nif (Tone.supported && !Tone.initialized){\t\t\t\n\tif (!Tone.global.TONE_AUDIO_CONTEXT){\n\t\tTone.global.TONE_AUDIO_CONTEXT = new Tone.Context();\n\t}\n\tTone.context = Tone.global.TONE_AUDIO_CONTEXT;\n\n\t// log on first initialization\n\t// allow optional silencing of this log\n\tif (!Tone.global.TONE_SILENCE_LOGGING){\n\t\tvar prefix = \"v\";\n\t\tif (Tone.version === \"dev\"){\n\t\t\tprefix = \"\";\n\t\t}\n\t\tvar printString = \" * Tone.js \" + prefix + Tone.version + \" * \"; \n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(\"%c\" + printString, \"background: #000; color: #fff\");\n\t}\n} else if (!Tone.supported && !Tone.global.TONE_SILENCE_LOGGING){\n\t// eslint-disable-next-line no-console\n\tconsole.warn(\"This browser does not support Tone.js\");\n}\n\nexport default Tone.Context;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Time\";\nimport \"../type/Frequency\";\nimport \"../type/TransportTime\";\nimport \"../core/Context\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tTYPES\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * Units which a value can take on.\n * @enum {String}\n */\nTone.Type = {\n\t/**\n\t *  Default units\n\t *  @typedef {Default}\n\t */\n\tDefault : \"number\",\n\t/**\n\t *  Time can be described in a number of ways. Read more [Time](https://github.com/Tonejs/Tone.js/wiki/Time).\n\t *\n\t *  * Numbers, which will be taken literally as the time (in seconds).\n\t *  * Notation, (\"4n\", \"8t\") describes time in BPM and time signature relative values.\n\t *  * TransportTime, (\"4:3:2\") will also provide tempo and time signature relative times\n\t *  in the form BARS:QUARTERS:SIXTEENTHS.\n\t *  * Frequency, (\"8hz\") is converted to the length of the cycle in seconds.\n\t *  * Now-Relative, (\"+1\") prefix any of the above with \"+\" and it will be interpreted as\n\t *  \"the current time plus whatever expression follows\".\n\t *  * Object, ({\"4n\" : 3, \"8t\" : -1}). The resulting time is equal to the sum of all of the keys multiplied by the values in the object. \n\t *  * No Argument, for methods which accept time, no argument will be interpreted as\n\t *  \"now\" (i.e. the currentTime).\n\t *\n\t *  @typedef {Time}\n\t */\n\tTime : \"time\",\n\t/**\n\t *  Frequency can be described similar to time, except ultimately the\n\t *  values are converted to frequency instead of seconds. A number\n\t *  is taken literally as the value in hertz. Additionally any of the\n\t *  Time encodings can be used. Note names in the form\n\t *  of NOTE OCTAVE (i.e. C4) are also accepted and converted to their\n\t *  frequency value.\n\t *  @typedef {Frequency}\n\t */\n\tFrequency : \"frequency\",\n\t/**\n\t *  TransportTime describes a position along the Transport's timeline. It is\n\t *  similar to Time in that it uses all the same encodings, but TransportTime specifically\n\t *  pertains to the Transport's timeline, which is startable, stoppable, loopable, and seekable.\n\t *  [Read more](https://github.com/Tonejs/Tone.js/wiki/TransportTime)\n\t *  @typedef {TransportTime}\n\t */\n\tTransportTime : \"transportTime\",\n\t/**\n\t *  Ticks are the basic subunit of the Transport. They are\n\t *  the smallest unit of time that the Transport supports.\n\t *  @typedef {Ticks}\n\t */\n\tTicks : \"ticks\",\n\t/**\n\t *  Normal values are within the range [0, 1].\n\t *  @typedef {NormalRange}\n\t */\n\tNormalRange : \"normalRange\",\n\t/**\n\t *  AudioRange values are between [-1, 1].\n\t *  @typedef {AudioRange}\n\t */\n\tAudioRange : \"audioRange\",\n\t/**\n\t *  Decibels are a logarithmic unit of measurement which is useful for volume\n\t *  because of the logarithmic way that we perceive loudness. 0 decibels\n\t *  means no change in volume. -10db is approximately half as loud and 10db\n\t *  is twice is loud.\n\t *  @typedef {Decibels}\n\t */\n\tDecibels : \"db\",\n\t/**\n\t *  Half-step note increments, i.e. 12 is an octave above the root. and 1 is a half-step up.\n\t *  @typedef {Interval}\n\t */\n\tInterval : \"interval\",\n\t/**\n\t *  Beats per minute.\n\t *  @typedef {BPM}\n\t */\n\tBPM : \"bpm\",\n\t/**\n\t *  The value must be greater than or equal to 0.\n\t *  @typedef {Positive}\n\t */\n\tPositive : \"positive\",\n\t/**\n\t *  Gain is the ratio between input and output of a signal.\n\t *  A gain of 0 is the same as silencing the signal. A gain of\n\t *  1, causes no change to the incoming signal.\n\t *  @typedef {Gain}\n\t */\n\tGain : \"gain\",\n\t/**\n\t *  A cent is a hundredth of a semitone.\n\t *  @typedef {Cents}\n\t */\n\tCents : \"cents\",\n\t/**\n\t *  Angle between 0 and 360.\n\t *  @typedef {Degrees}\n\t */\n\tDegrees : \"degrees\",\n\t/**\n\t *  A number representing a midi note.\n\t *  @typedef {MIDI}\n\t */\n\tMIDI : \"midi\",\n\t/**\n\t *  A colon-separated representation of time in the form of\n\t *  Bars:Beats:Sixteenths.\n\t *  @typedef {BarsBeatsSixteenths}\n\t */\n\tBarsBeatsSixteenths : \"barsBeatsSixteenths\",\n\t/**\n\t *  Sampling is the reduction of a continuous signal to a discrete signal.\n\t *  Audio is typically sampled 44100 times per second.\n\t *  @typedef {Samples}\n\t */\n\tSamples : \"samples\",\n\t/**\n\t *  Hertz are a frequency representation defined as one cycle per second.\n\t *  @typedef {Hertz}\n\t */\n\tHertz : \"hertz\",\n\t/**\n\t *  A frequency represented by a letter name,\n\t *  accidental and octave. This system is known as\n\t *  [Scientific Pitch Notation](https://en.wikipedia.org/wiki/Scientific_pitch_notation).\n\t *  @typedef {Note}\n\t */\n\tNote : \"note\",\n\t/**\n\t *  One millisecond is a thousandth of a second.\n\t *  @typedef {Milliseconds}\n\t */\n\tMilliseconds : \"milliseconds\",\n\t/**\n\t *  Seconds are the time unit of the AudioContext. In the end,\n\t *  all values need to be evaluated to seconds.\n\t *  @typedef {Seconds}\n\t */\n\tSeconds : \"seconds\",\n\t/**\n\t *  A string representing a duration relative to a measure.\n\t *  * \"4n\" = quarter note\n\t *  * \"2m\" = two measures\n\t *  * \"8t\" = eighth-note triplet\n\t *  @typedef {Notation}\n\t */\n\tNotation : \"notation\",\n};\n\n///////////////////////////////////////////////////////////////////////////\n// AUGMENT TONE's PROTOTYPE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Convert Time into seconds.\n *\n *  Unlike the method which it overrides, this takes into account\n *  transporttime and musical notation.\n *\n *  Time : 1.40\n *  Notation: 4n or 1m or 2t\n *  Now Relative: +3n\n *\n *  @param  {Time} time\n *  @return {Seconds}\n */\nTone.prototype.toSeconds = function(time){\n\tif (Tone.isNumber(time)){\n\t\treturn time;\n\t} else if (Tone.isUndef(time)){\n\t\treturn this.now();\n\t} else if (Tone.isString(time) || Tone.isObject(time)){\n\t\treturn (new Tone.Time(time)).toSeconds();\n\t} else if (time instanceof Tone.TimeBase){\n\t\treturn time.toSeconds();\n\t}\n};\n\n/**\n *  Convert a frequency representation into a number.\n *  @param  {Frequency} freq\n *  @return {Hertz}      the frequency in hertz\n */\nTone.prototype.toFrequency = function(freq){\n\tif (Tone.isNumber(freq)){\n\t\treturn freq;\n\t} else if (Tone.isString(freq) || Tone.isUndef(freq) || Tone.isObject(freq)){\n\t\treturn (new Tone.Frequency(freq)).valueOf();\n\t} else if (freq instanceof Tone.TimeBase){\n\t\treturn freq.toFrequency();\n\t}\n};\n\n/**\n *  Convert a time representation into ticks.\n *  @param  {Time} time\n *  @return {Ticks}  the time in ticks\n */\nTone.prototype.toTicks = function(time){\n\tif (Tone.isNumber(time) || Tone.isString(time) || Tone.isObject(time)){\n\t\treturn (new Tone.TransportTime(time)).toTicks();\n\t} else if (Tone.isUndef(time)){\n\t\treturn Tone.Transport.ticks;\n\t} else if (time instanceof Tone.TimeBase){\n\t\treturn time.toTicks();\n\t}\n};\n\nexport default Tone;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  Makes sure that connect returns the dst node\n *  @private\n */\nif (Tone.supported){\n\tvar testContext = new OfflineAudioContext(2, 1, 44100);\n\tvar testSrcNode = testContext.createGain();\n\tvar testDstNode = testContext.createGain();\n\tif (testSrcNode.connect(testDstNode) !== testDstNode){\n\t\tvar nativeConnect = AudioNode.prototype.connect;\n\t\tAudioNode.prototype.connect = function(){\n\t\t\tnativeConnect.apply(this, arguments);\n\t\t\treturn arguments[0];\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Context\";\nimport \"../shim/AudioNode\";\n\n/**\n *  @class Tone.AudioNode is the base class for classes which process audio.\n *         AudioNodes have inputs and outputs.\n *  @param\t{AudioContext=} context\tThe audio context to use with the class\n *  @extends {Tone}\n */\nTone.AudioNode = function(){\n\tTone.call(this);\n\n\t//use the default context if one is not passed in\n\tvar options = Tone.defaults(arguments, [\"context\"], {\n\t\t\"context\" : Tone.context\n\t});\n\n\t/**\n\t * The AudioContext of this instance\n\t * @private\n\t * @type {AudioContext}\n\t */\n\tthis._context = options.context;\n};\n\nTone.extend(Tone.AudioNode);\n\n/**\n * Get the audio context belonging to this instance.\n * @type {Tone.Context}\n * @memberOf Tone.AudioNode#\n * @name context\n * @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"context\", {\n\tget : function(){\n\t\treturn this._context;\n\t}\n});\n\n/**\n *  Create input and outputs for this object.\n *  @param  {Number}  [input=0]   The number of inputs\n *  @param  {Number}  [outputs=0]  The number of outputs\n *  @return  {Tone.AudioNode}  this\n *  @private\n */\nTone.AudioNode.prototype.createInsOuts = function(inputs, outputs){\n\n\tif (inputs === 1){\n\t\tthis.input = this.context.createGain();\n\t} else if (inputs > 1){\n\t\tthis.input = new Array(inputs);\n\t}\n\n\tif (outputs === 1){\n\t\tthis.output = this.context.createGain();\n\t} else if (outputs > 1){\n\t\tthis.output = new Array(outputs);\n\t}\n};\n\n/**\n *  channelCount is the number of channels used when up-mixing and down-mixing\n *  connections to any inputs to the node. The default value is 2 except for\n *  specific nodes where its value is specially determined.\n *\n *  @memberof Tone.AudioNode#\n *  @type {Number}\n *  @name channelCount\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"channelCount\", {\n\tget : function(){\n\t\treturn this.output.channelCount;\n\t},\n\tset : function(c){\n\t\treturn this.output.channelCount = c;\n\t}\n});\n\n/**\n *  channelCountMode determines how channels will be counted when up-mixing and\n *  down-mixing connections to any inputs to the node.\n *  The default value is \"max\". This attribute has no effect for nodes with no inputs.\n *  @memberof Tone.AudioNode#\n *  @type {String}\n *  @name channelCountMode\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"channelCountMode\", {\n\tget : function(){\n\t\treturn this.output.channelCountMode;\n\t},\n\tset : function(m){\n\t\treturn this.output.channelCountMode = m;\n\t}\n});\n\n/**\n *  channelInterpretation determines how individual channels will be treated\n *  when up-mixing and down-mixing connections to any inputs to the node.\n *  The default value is \"speakers\".\n *  @memberof Tone.AudioNode#\n *  @type {String}\n *  @name channelInterpretation\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"channelInterpretation\", {\n\tget : function(){\n\t\treturn this.output.channelInterpretation;\n\t},\n\tset : function(i){\n\t\treturn this.output.channelInterpretation = i;\n\t}\n});\n\n/**\n *  The number of inputs feeding into the AudioNode.\n *  For source nodes, this will be 0.\n *  @type {Number}\n *  @name numberOfInputs\n *  @memberof Tone.AudioNode#\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"numberOfInputs\", {\n\tget : function(){\n\t\tif (this.input){\n\t\t\tif (Tone.isArray(this.input)){\n\t\t\t\treturn this.input.length;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  The number of outputs coming out of the AudioNode.\n *  @type {Number}\n *  @name numberOfOutputs\n *  @memberof Tone.AudioNode#\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"numberOfOutputs\", {\n\tget : function(){\n\t\tif (this.output){\n\t\t\tif (Tone.isArray(this.output)){\n\t\t\t\treturn this.output.length;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  connect the output of a ToneNode to an AudioParam, AudioNode, or ToneNode\n *  @param  {Tone | AudioParam | AudioNode} unit\n *  @param {number} [outputNum=0] optionally which output to connect from\n *  @param {number} [inputNum=0] optionally which input to connect to\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.connect = function(unit, outputNum, inputNum){\n\tif (Tone.isArray(this.output)){\n\t\toutputNum = Tone.defaultArg(outputNum, 0);\n\t\tthis.output[outputNum].connect(unit, 0, inputNum);\n\t} else {\n\t\tTone.connect(this.output, unit, outputNum, inputNum);\n\t}\n\treturn this;\n};\n\n/**\n *  disconnect the output\n *  @param {Number|AudioNode} output Either the output index to disconnect\n *                                   if the output is an array, or the\n *                                   node to disconnect from.\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.disconnect = function(destination, outputNum, inputNum){\n\tif (Tone.isArray(this.output)){\n\t\toutputNum = Tone.defaultArg(outputNum, 0);\n\t\tthis.output[outputNum].disconnect(destination, 0, inputNum);\n\t} else {\n\t\tTone.disconnect(this.output, destination, outputNum, inputNum);\n\t}\n\treturn this;\n};\n\n/**\n *  Connect the output of this node to the rest of the nodes in series.\n *  @example\n *  //connect a node to an effect, panVol and then to the master output\n *  node.chain(effect, panVol, Tone.Master);\n *  @param {...(AudioParam|Tone|AudioNode)} nodes\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.chain = function(){\n\tvar args = Array.from(arguments);\n\targs.unshift(this);\n\tTone.connectSeries.apply(undefined, args);\n\treturn this;\n};\n\n/**\n *  connect the output of this node to the rest of the nodes in parallel.\n *  @param {...(AudioParam|Tone|AudioNode)} nodes\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.fan = function(){\n\tfor (var i = 0; i < arguments.length; i++){\n\t\tthis.connect(arguments[i]);\n\t}\n\treturn this;\n};\n\n/**\n * Dispose and disconnect\n * @return {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.dispose = function(){\n\tif (Tone.isDefined(this.input)){\n\t\tif (this.input instanceof AudioNode){\n\t\t\tthis.input.disconnect();\n\t\t}\n\t\tthis.input = null;\n\t}\n\tif (Tone.isDefined(this.output)){\n\t\tif (this.output instanceof AudioNode){\n\t\t\tthis.output.disconnect();\n\t\t}\n\t\tthis.output = null;\n\t}\n\tthis._context = null;\n\treturn this;\n};\n\nexport default Tone.AudioNode;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\nimport \"../core/AudioNode\";\nimport \"../core/Timeline\";\n\n/**\n *  @class Tone.Param wraps the native Web Audio's AudioParam to provide\n *         additional unit conversion functionality. It also\n *         serves as a base-class for classes which have a single,\n *         automatable parameter.\n *  @extends {Tone.AudioNode}\n *  @param  {AudioParam}  param  The parameter to wrap.\n *  @param  {Tone.Type} units The units of the audio param.\n *  @param  {Boolean} convert If the param should be converted.\n */\nTone.Param = function(){\n\n\tvar options = Tone.defaults(arguments, [\"param\", \"units\", \"convert\"], Tone.Param);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The native parameter to control\n\t *  @type  {AudioParam}\n\t *  @private\n\t */\n\tthis._param = this.input = options.param;\n\n\t/**\n\t *  The units of the parameter\n\t *  @type {Tone.Type}\n\t */\n\tthis.units = options.units;\n\n\t/**\n\t *  If the value should be converted or not\n\t *  @type {Boolean}\n\t */\n\tthis.convert = options.convert;\n\n\t/**\n\t *  True if the signal value is being overridden by\n\t *  a connected signal.\n\t *  @readOnly\n\t *  @type  {boolean}\n\t *  @private\n\t */\n\tthis.overridden = false;\n\n\t/**\n\t * The timeline which tracks all of the automations.\n\t * @type {Tone.Timeline}\n\t * @private\n\t */\n\tthis._events = new Tone.Timeline(1000);\n\n\tif (Tone.isDefined(options.value) && this._param){\n\t\tthis.setValueAtTime(options.value, 0);\n\t}\n};\n\nTone.extend(Tone.Param, Tone.AudioNode);\n\n/**\n *  Defaults\n *  @type  {Object}\n *  @const\n */\nTone.Param.defaults = {\n\t\"units\" : Tone.Type.Default,\n\t\"convert\" : true,\n\t\"param\" : undefined\n};\n\n/**\n * The current value of the parameter.\n * @memberOf Tone.Param#\n * @type {Number}\n * @name value\n */\nObject.defineProperty(Tone.Param.prototype, \"value\", {\n\tget : function(){\n\t\tvar now = this.now();\n\t\treturn this._toUnits(this.getValueAtTime(now));\n\t},\n\tset : function(value){\n\t\tthis._initialValue = this._fromUnits(value);\n\t\tthis.cancelScheduledValues(this.now());\n\t\tthis.setValueAtTime(value, this.now());\n\t}\n});\n\n/**\n * The minimum output value of the parameter\n * @memberOf Tone.Param#\n * @type {Number}\n * @name value\n */\nObject.defineProperty(Tone.Param.prototype, \"minValue\", {\n\tget : function(){\n\t\tif (this.units === Tone.Type.Time || this.units === Tone.Type.Frequency ||\n\t\t\tthis.units === Tone.Type.NormalRange || this.units === Tone.Type.Positive ||\n\t\t\tthis.units === Tone.Type.BPM){\n\t\t\treturn 0;\n\t\t} else if (this.units === Tone.Type.AudioRange){\n\t\t\treturn -1;\n\t\t} else if (this.units === Tone.Type.Decibels){\n\t\t\treturn -Infinity;\n\t\t} else {\n\t\t\treturn this._param.minValue;\n\t\t}\n\t}\n});\n\n/**\n * The maximum output value of the parameter\n * @memberOf Tone.Param#\n * @type {Number}\n * @name value\n */\nObject.defineProperty(Tone.Param.prototype, \"maxValue\", {\n\tget : function(){\n\t\tif (this.units === Tone.Type.NormalRange ||\n\t\t\tthis.units === Tone.Type.AudioRange){\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn this._param.maxValue;\n\t\t}\n\t}\n});\n\n/**\n *  Convert the given value from the type specified by Tone.Param.units\n *  into the destination value (such as Gain or Frequency).\n *  @private\n *  @param  {*} val the value to convert\n *  @return {number}     the number which the value should be set to\n */\nTone.Param.prototype._fromUnits = function(val){\n\tif ((this.convert || Tone.isUndef(this.convert)) && !this.overridden){\n\t\tswitch (this.units){\n\t\t\tcase Tone.Type.Time:\n\t\t\t\treturn this.toSeconds(val);\n\t\t\tcase Tone.Type.Frequency:\n\t\t\t\treturn this.toFrequency(val);\n\t\t\tcase Tone.Type.Decibels:\n\t\t\t\treturn Tone.dbToGain(val);\n\t\t\tcase Tone.Type.NormalRange:\n\t\t\t\treturn Math.min(Math.max(val, 0), 1);\n\t\t\tcase Tone.Type.AudioRange:\n\t\t\t\treturn Math.min(Math.max(val, -1), 1);\n\t\t\tcase Tone.Type.Positive:\n\t\t\t\treturn Math.max(val, 0);\n\t\t\tdefault:\n\t\t\t\treturn val;\n\t\t}\n\t} else {\n\t\treturn val;\n\t}\n};\n\n/**\n * Convert the parameters value into the units specified by Tone.Param.units.\n * @private\n * @param  {number} val the value to convert\n * @return {number}\n */\nTone.Param.prototype._toUnits = function(val){\n\tif (this.convert || Tone.isUndef(this.convert)){\n\t\tswitch (this.units){\n\t\t\tcase Tone.Type.Decibels:\n\t\t\t\treturn Tone.gainToDb(val);\n\t\t\tdefault:\n\t\t\t\treturn val;\n\t\t}\n\t} else {\n\t\treturn val;\n\t}\n};\n\n/**\n *  the minimum output value\n *  @type {Number}\n *  @private\n */\nTone.Param.prototype._minOutput = 1e-5;\n\n/**\n *  The event types\n *  @enum {String}\n *  @private\n */\nTone.Param.AutomationType = {\n\tLinear : \"linearRampToValueAtTime\",\n\tExponential : \"exponentialRampToValueAtTime\",\n\tTarget : \"setTargetAtTime\",\n\tSetValue : \"setValueAtTime\",\n\tCancel : \"cancelScheduledValues\"\n};\n\n/**\n *  Schedules a parameter value change at the given time.\n *  @param {*}\tvalue The value to set the signal.\n *  @param {Time}  time The time when the change should occur.\n *  @returns {Tone.Param} this\n *  @example\n * //set the frequency to \"G4\" in exactly 1 second from now.\n * freq.setValueAtTime(\"G4\", \"+1\");\n */\nTone.Param.prototype.setValueAtTime = function(value, time){\n\ttime = this.toSeconds(time);\n\tvalue = this._fromUnits(value);\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\"value\" : value,\n\t\t\"time\" : time,\n\t});\n\tthis.log(Tone.Param.AutomationType.SetValue, value, time);\n\tthis._param.setValueAtTime(value, time);\n\treturn this;\n};\n\n/**\n *  Get the signals value at the given time. Subsequent scheduling\n *  may invalidate the returned value.\n *  @param {Time} time When to get the value\n *  @returns {Number} The value at the given time\n */\nTone.Param.prototype.getValueAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar after = this._events.getAfter(time);\n\tvar before = this._events.get(time);\n\tvar initialValue = Tone.defaultArg(this._initialValue, this._param.defaultValue);\n\tvar value = initialValue;\n\t//if it was set by\n\tif (before === null){\n\t\tvalue = initialValue;\n\t} else if (before.type === Tone.Param.AutomationType.Target){\n\t\tvar previous = this._events.getBefore(before.time);\n\t\tvar previousVal;\n\t\tif (previous === null){\n\t\t\tpreviousVal = initialValue;\n\t\t} else {\n\t\t\tpreviousVal = previous.value;\n\t\t}\n\t\tvalue = this._exponentialApproach(before.time, previousVal, before.value, before.constant, time);\n\t} else if (after === null){\n\t\tvalue = before.value;\n\t} else if (after.type === Tone.Param.AutomationType.Linear){\n\t\tvalue = this._linearInterpolate(before.time, before.value, after.time, after.value, time);\n\t} else if (after.type === Tone.Param.AutomationType.Exponential){\n\t\tvalue = this._exponentialInterpolate(before.time, before.value, after.time, after.value, time);\n\t} else {\n\t\tvalue = before.value;\n\t}\n\treturn value;\n};\n\n/**\n *  Creates a schedule point with the current value at the current time.\n *  This is useful for creating an automation anchor point in order to\n *  schedule changes from the current value.\n *\n *  @param {number=} now (Optionally) pass the now value in.\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.setRampPoint = function(time){\n\ttime = this.toSeconds(time);\n\tvar currentVal = this.getValueAtTime(time);\n\tthis.cancelAndHoldAtTime(time);\n\tif (currentVal === 0){\n\t\tcurrentVal = this._minOutput;\n\t}\n\tthis.setValueAtTime(this._toUnits(currentVal), time);\n\treturn this;\n};\n\n/**\n *  Schedules a linear continuous change in parameter value from the\n *  previous scheduled parameter value to the given value.\n *\n *  @param  {number} value\n *  @param  {Time} endTime\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.linearRampToValueAtTime = function(value, endTime){\n\tvalue = this._fromUnits(value);\n\tendTime = this.toSeconds(endTime);\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.Linear,\n\t\t\"value\" : value,\n\t\t\"time\" : endTime,\n\t});\n\tthis.log(Tone.Param.AutomationType.Linear, value, endTime);\n\tthis._param.linearRampToValueAtTime(value, endTime);\n\treturn this;\n};\n\n/**\n *  Schedules an exponential continuous change in parameter value from\n *  the previous scheduled parameter value to the given value.\n *\n *  @param  {number} value\n *  @param  {Time} endTime\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.exponentialRampToValueAtTime = function(value, endTime){\n\tvalue = this._fromUnits(value);\n\tvalue = Math.max(this._minOutput, value);\n\tendTime = this.toSeconds(endTime);\n\t//store the event\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.Exponential,\n\t\t\"time\" : endTime,\n\t\t\"value\" : value\n\t});\n\tthis.log(Tone.Param.AutomationType.Exponential, value, endTime);\n\tthis._param.exponentialRampToValueAtTime(value, endTime);\n\treturn this;\n};\n\n/**\n *  Schedules an exponential continuous change in parameter value from\n *  the current time and current value to the given value over the\n *  duration of the rampTime.\n *\n *  @param  {number} value   The value to ramp to.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //exponentially ramp to the value 2 over 4 seconds.\n * signal.exponentialRampTo(2, 4);\n */\nTone.Param.prototype.exponentialRampTo = function(value, rampTime, startTime){\n\tstartTime = this.toSeconds(startTime);\n\tthis.setRampPoint(startTime);\n\tthis.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\treturn this;\n};\n\n/**\n *  Schedules an linear continuous change in parameter value from\n *  the current time and current value to the given value over the\n *  duration of the rampTime.\n *\n *  @param  {number} value   The value to ramp to.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //linearly ramp to the value 4 over 3 seconds.\n * signal.linearRampTo(4, 3);\n */\nTone.Param.prototype.linearRampTo = function(value, rampTime, startTime){\n\tstartTime = this.toSeconds(startTime);\n\tthis.setRampPoint(startTime);\n\tthis.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time. Since it\n *  is an exponential approach it will continue approaching after the ramp duration. The\n *  rampTime is the time that it takes to reach over 99% of the way towards the value.\n *  @param  {number} value   The value to ramp to.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //exponentially ramp to the value 2 over 4 seconds.\n * signal.exponentialRampTo(2, 4);\n */\nTone.Param.prototype.targetRampTo = function(value, rampTime, startTime){\n\tstartTime = this.toSeconds(startTime);\n\tthis.setRampPoint(startTime);\n\tthis.exponentialApproachValueAtTime(value, startTime, rampTime);\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time. Since it\n *  is an exponential approach it will continue approaching after the ramp duration. The\n *  rampTime is the time that it takes to reach over 99% of the way towards the value. This methods\n *  is similar to setTargetAtTime except the third argument is a time instead of a 'timeConstant'\n *  @param  {number} value   The value to ramp to.\n *  @param {Time}\ttime \tWhen the ramp should start.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @returns {Tone.Param} this\n *  @example\n * //exponentially ramp to the value 2 over 4 seconds.\n * signal.exponentialRampTo(2, 4);\n */\nTone.Param.prototype.exponentialApproachValueAtTime = function(value, time, rampTime){\n\tvar timeConstant = Math.log(this.toSeconds(rampTime)+1)/Math.log(200);\n\ttime = this.toSeconds(time);\n\tthis.setTargetAtTime(value, time, timeConstant);\n\t//at 90% start a linear ramp to the final value\n\tthis.cancelAndHoldAtTime(time + rampTime * 0.9);\n\tthis.linearRampToValueAtTime(value, time + rampTime);\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time with\n *  a rate having the given time constant.\n *  @param {number} value\n *  @param {Time} startTime\n *  @param {number} timeConstant\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.setTargetAtTime = function(value, startTime, timeConstant){\n\tvalue = this._fromUnits(value);\n\t// The value will never be able to approach without timeConstant > 0.\n\tif (timeConstant <= 0){\n\t\tthrow new Error(\"timeConstant must be greater than 0\");\n\t}\n\tstartTime = this.toSeconds(startTime);\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.Target,\n\t\t\"value\" : value,\n\t\t\"time\" : startTime,\n\t\t\"constant\" : timeConstant\n\t});\n\tthis.log(Tone.Param.AutomationType.Target, value, startTime, timeConstant);\n\tthis._param.setTargetAtTime(value, startTime, timeConstant);\n\treturn this;\n};\n\n/**\n *  Sets an array of arbitrary parameter values starting at the given time\n *  for the given duration.\n *\n *  @param {Array} values\n *  @param {Time} startTime\n *  @param {Time} duration\n *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.setValueCurveAtTime = function(values, startTime, duration, scaling){\n\tscaling = Tone.defaultArg(scaling, 1);\n\tduration = this.toSeconds(duration);\n\tstartTime = this.toSeconds(startTime);\n\tthis.setValueAtTime(values[0] * scaling, startTime);\n\tvar segTime = duration / (values.length - 1);\n\tfor (var i = 1; i < values.length; i++){\n\t\tthis.linearRampToValueAtTime(values[i] * scaling, startTime + i * segTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancels all scheduled parameter changes with times greater than or\n *  equal to startTime.\n *\n *  @param  {Time} time\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.cancelScheduledValues = function(time){\n\ttime = this.toSeconds(time);\n\tthis._events.cancel(time);\n\tthis._param.cancelScheduledValues(time);\n\tthis.log(Tone.Param.AutomationType.Cancel, time);\n\treturn this;\n};\n\n/**\n *  This is similar to [cancelScheduledValues](#cancelScheduledValues) except\n *  it holds the automated value at time until the next automated event.\n *  @param  {Time} time\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.cancelAndHoldAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar valueAtTime = this.getValueAtTime(time);\n\tthis.log(\"cancelAndHoldAtTime\", time, \"value=\"+valueAtTime);\n\n\t//remove the schedule events\n\tthis._param.cancelScheduledValues(time);\n\n\t//if there is an event at the given time\n\t//and that even is not a \"set\"\n\tvar before = this._events.get(time);\n\tvar after = this._events.getAfter(time);\n\tif (before && before.time === time){\n\t\t//remove everything after\n\t\tif (after){\n\t\t\tthis._events.cancel(after.time);\n\t\t} else {\n\t\t\tthis._events.cancel(time + this.sampleTime);\n\t\t}\n\t} else if (after){\n\t\t//cancel the next event(s)\n\t\tthis._events.cancel(after.time);\n\t\tif (after.type === Tone.Param.AutomationType.Linear){\n\t\t\tthis.linearRampToValueAtTime(valueAtTime, time);\n\t\t} else if (after.type === Tone.Param.AutomationType.Exponential){\n\t\t\tthis.exponentialRampToValueAtTime(valueAtTime, time);\n\t\t}\n\t}\n\n\t//set the value at the given time\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\"value\" : valueAtTime,\n\t\t\"time\" : time\n\t});\n\tthis._param.setValueAtTime(valueAtTime, time);\n\treturn this;\n};\n\n/**\n *  Ramps to the given value over the duration of the rampTime.\n *  Automatically selects the best ramp type (exponential or linear)\n *  depending on the `units` of the signal\n *\n *  @param  {number} value\n *  @param  {Time} rampTime \tThe time that it takes the\n *                              value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //ramp to the value either linearly or exponentially\n * //depending on the \"units\" value of the signal\n * signal.rampTo(0, 10);\n *  @example\n * //schedule it to ramp starting at a specific time\n * signal.rampTo(0, 10, 5)\n */\nTone.Param.prototype.rampTo = function(value, rampTime, startTime){\n\trampTime = Tone.defaultArg(rampTime, 0.1);\n\tif (this.units === Tone.Type.Frequency || this.units === Tone.Type.BPM || this.units === Tone.Type.Decibels){\n\t\tthis.exponentialRampTo(value, rampTime, startTime);\n\t} else {\n\t\tthis.linearRampTo(value, rampTime, startTime);\n\t}\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tAUTOMATION CURVE CALCULATIONS\n//\tMIT License, copyright (c) 2014 Jordan Santell\n///////////////////////////////////////////////////////////////////////////\n\n// Calculates the the value along the curve produced by setTargetAtTime\nTone.Param.prototype._exponentialApproach = function(t0, v0, v1, timeConstant, t){\n\treturn v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n};\n\n// Calculates the the value along the curve produced by linearRampToValueAtTime\nTone.Param.prototype._linearInterpolate = function(t0, v0, t1, v1, t){\n\treturn v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n};\n\n// Calculates the the value along the curve produced by exponentialRampToValueAtTime\nTone.Param.prototype._exponentialInterpolate = function(t0, v0, t1, v1, t){\n\treturn v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n};\n\n/**\n *  Clean up\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._param = null;\n\tthis._events = null;\n\treturn this;\n};\n\nexport default Tone.Param;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Base class for all Signals. Used Internally.\n *\n *  @constructor\n *  @extends {Tone}\n */\nTone.SignalBase = function(){\n\tTone.AudioNode.call(this);\n};\n\nTone.extend(Tone.SignalBase, Tone.AudioNode);\n\n/**\n *  When signals connect to other signals or AudioParams,\n *  they take over the output value of that signal or AudioParam.\n *  For all other nodes, the behavior is the same as a default <code>connect</code>.\n *\n *  @override\n *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node\n *  @param {number} [outputNumber=0] The output number to connect from.\n *  @param {number} [inputNumber=0] The input number to connect to.\n *  @returns {Tone.SignalBase} this\n */\nTone.SignalBase.prototype.connect = function(node, outputNumber, inputNumber){\n\t//zero it out so that the signal can have full control\n\tif ((Tone.Signal && Tone.Signal === node.constructor) ||\n\t\t\t(Tone.Param && Tone.Param === node.constructor)){\n\t\t//cancel changes\n\t\tnode._param.cancelScheduledValues(0);\n\t\t//reset the value\n\t\tnode._param.setValueAtTime(0, 0);\n\t\t//mark the value as overridden\n\t\tnode.overridden = true;\n\t} else if (node instanceof AudioParam){\n\t\tnode.cancelScheduledValues(0);\n\t\tnode.setValueAtTime(0, 0);\n\t}\n\tTone.AudioNode.prototype.connect.call(this, node, outputNumber, inputNumber);\n\treturn this;\n};\n\nexport default Tone.SignalBase;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Param\";\nimport \"../type/Type\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class A thin wrapper around the Native Web Audio GainNode.\n *         The GainNode is a basic building block of the Web Audio\n *         API and is useful for routing audio and adjusting gains.\n *  @extends {Tone.AudioNode}\n *  @param  {Number=}  gain  The initial gain of the GainNode\n *  @param {Tone.Type=} units The units of the gain parameter.\n */\nTone.Gain = function(){\n\n\tvar options = Tone.defaults(arguments, [\"gain\", \"units\"], Tone.Gain);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The GainNode\n\t *  @type  {GainNode}\n\t *  @private\n\t */\n\tthis.input = this.output = this._gainNode = this.context.createGain();\n\n\t/**\n\t *  The gain parameter of the gain node.\n\t *  @type {Gain}\n\t *  @signal\n\t */\n\tthis.gain = new Tone.Param({\n\t\t\"param\" : this._gainNode.gain,\n\t\t\"units\" : options.units,\n\t\t\"value\" : options.gain,\n\t\t\"convert\" : options.convert\n\t});\n\tthis._readOnly(\"gain\");\n};\n\nTone.extend(Tone.Gain, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Gain.defaults = {\n\t\"gain\" : 1,\n\t\"convert\" : true,\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Gain}  this\n */\nTone.Gain.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._gainNode.disconnect();\n\tthis._gainNode = null;\n\tthis._writable(\"gain\");\n\tthis.gain.dispose();\n\tthis.gain = null;\n};\n\nexport default Tone.Gain;\n\n","import Tone from \"../core/Tone\";\nimport \"../shim/AudioContext\";\nimport \"../core/Context\";\nimport \"../core/Gain\";\n\nif (Tone.supported && !Tone.global.AudioContext.prototype.createConstantSource){\n\n\tvar ConstantSourceNode = function(context){\n\t\tthis.context = context;\n\n\t\tvar buffer = context.createBuffer(1, 128, context.sampleRate);\n\t\tvar arr = buffer.getChannelData(0);\n\t\tfor (var i = 0; i < arr.length; i++){\n\t\t\tarr[i] = 1;\n\t\t}\n\n\t\tthis._bufferSource = context.createBufferSource();\n\t\tthis._bufferSource.channelCount = 1;\n\t\tthis._bufferSource.channelCountMode = \"explicit\";\n\t\tthis._bufferSource.buffer = buffer;\n\t\tthis._bufferSource.loop = true;\n\n\t\tvar gainNode = this._output = context.createGain();\n\t\tthis.offset = gainNode.gain;\n\n\t\tthis._bufferSource.connect(gainNode);\n\t};\n\n\tConstantSourceNode.prototype.start = function(time){\n\t\tthis._bufferSource.start(time);\n\t\treturn this;\n\t};\n\n\tConstantSourceNode.prototype.stop = function(time){\n\t\tthis._bufferSource.stop(time);\n\t\treturn this;\n\t};\n\n\tConstantSourceNode.prototype.connect = function(){\n\t\tthis._output.connect.apply(this._output, arguments);\n\t\treturn this;\n\t};\n\n\tConstantSourceNode.prototype.disconnect = function(){\n\t\tthis._output.disconnect.apply(this._output, arguments);\n\t\treturn this;\n\t};\n\n\tAudioContext.prototype.createConstantSource = function(){\n\t\treturn new ConstantSourceNode(this);\n\t};\n\n\tTone.Context.prototype.createConstantSource = function(){\n\t\treturn new ConstantSourceNode(this);\n\t};\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\nimport \"../core/Param\";\nimport \"../signal/SignalBase\";\nimport \"../shim/ConstantSourceNode\";\n\n/**\n *  @class  A signal is an audio-rate value. Tone.Signal is a core component of the library.\n *          Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n *          has all of the methods available to native Web Audio\n *          [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n *          as well as additional conveniences. Read more about working with signals\n *          [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n *\n *  @constructor\n *  @extends {Tone.Param}\n *  @param {Number|AudioParam} [value] Initial value of the signal. If an AudioParam\n *                                     is passed in, that parameter will be wrapped\n *                                     and controlled by the Signal.\n *  @param {string} [units=Number] unit The units the signal is in.\n *  @example\n * var signal = new Tone.Signal(10);\n */\nTone.Signal = function(){\n\n\tvar options = Tone.defaults(arguments, [\"value\", \"units\"], Tone.Signal);\n\tTone.Param.call(this, options);\n\n\t/**\n\t * The constant source node which generates the signal\n\t * @type {ConstantSourceNode}\n\t * @private\n\t */\n\tthis._constantSource = this.context.createConstantSource();\n\tthis._constantSource.start(0);\n\tthis._param = this._constantSource.offset;\n\tthis.value = options.value;\n\n\t/**\n\t * The node where the constant signal value is scaled.\n\t * @type {ConstantSourceNode}\n\t * @private\n\t */\n\tthis.output = this._constantSource;\n\n\t/**\n\t * The node where the value is set.\n\t * @type {Tone.Param}\n\t * @private\n\t */\n\tthis.input = this._param = this.output.offset;\n};\n\nTone.extend(Tone.Signal, Tone.Param);\n\n/**\n *  The default values\n *  @type  {Object}\n *  @static\n *  @const\n */\nTone.Signal.defaults = {\n\t\"value\" : 0,\n\t\"units\" : Tone.Type.Default,\n\t\"convert\" : true,\n};\n\n//use SignalBase's connect/disconnect methods\nTone.Signal.prototype.connect = Tone.SignalBase.prototype.connect;\nTone.Signal.prototype.disconnect = Tone.SignalBase.prototype.disconnect;\n\n/**\n * Return the current signal value at the given time.\n * @param  {Time} time When to get the signal value\n * @return {Number}\n */\nTone.Signal.prototype.getValueAtTime = function(time){\n\tif (this._param.getValueAtTime){\n\t\treturn this._param.getValueAtTime(time);\n\t} else {\n\t\treturn Tone.Param.prototype.getValueAtTime.call(this, time);\n\t}\n};\n\n/**\n *  dispose and disconnect\n *  @returns {Tone.Signal} this\n */\nTone.Signal.prototype.dispose = function(){\n\tTone.Param.prototype.dispose.call(this);\n\tthis._constantSource.stop();\n\tthis._constantSource.disconnect();\n\tthis._constantSource = null;\n\treturn this;\n};\n\nexport default Tone.Signal;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Volume is a simple volume node, useful for creating a volume fader.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Decibels} [volume=0] the initial volume\n *  @example\n * var vol = new Tone.Volume(-12);\n * instrument.chain(vol, Tone.Master);\n */\nTone.Volume = function(){\n\n\tvar options = Tone.defaults(arguments, [\"volume\"], Tone.Volume);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t * the output node\n\t * @type {GainNode}\n\t * @private\n\t */\n\tthis.output = this.input = new Tone.Gain(options.volume, Tone.Type.Decibels);\n\n\t/**\n\t * The unmuted volume\n\t * @type {Decibels}\n\t * @private\n\t */\n\tthis._unmutedVolume = options.volume;\n\n\t/**\n\t *  The volume control in decibels.\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.volume = this.output.gain;\n\n\tthis._readOnly(\"volume\");\n\n\t//set the mute initially\n\tthis.mute = options.mute;\n};\n\nTone.extend(Tone.Volume, Tone.AudioNode);\n\n/**\n *  Defaults\n *  @type  {Object}\n *  @const\n *  @static\n */\nTone.Volume.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n * Mute the output.\n * @memberOf Tone.Volume#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * volume.mute = true;\n */\nObject.defineProperty(Tone.Volume.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this.volume.value === -Infinity;\n\t},\n\tset : function(mute){\n\t\tif (!this.mute && mute){\n\t\t\tthis._unmutedVolume = this.volume.value;\n\t\t\t//maybe it should ramp here?\n\t\t\tthis.volume.value = -Infinity;\n\t\t} else if (this.mute && !mute){\n\t\t\tthis.volume.value = this._unmutedVolume;\n\t\t}\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.Volume} this\n */\nTone.Volume.prototype.dispose = function(){\n\tthis.input.dispose();\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable(\"volume\");\n\tthis.volume.dispose();\n\tthis.volume = null;\n\treturn this;\n};\n\nexport default Tone.Volume;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Volume\";\nimport \"../core/Context\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  A single master output which is connected to the\n *          AudioDestinationNode (aka your speakers).\n *          It provides useful conveniences such as the ability\n *          to set the volume and mute the entire application.\n *          It also gives you the ability to apply master effects to your application.\n *          <br><br>\n *          Like Tone.Transport, A single Tone.Master is created\n *          on initialization and you do not need to explicitly construct one.\n *\n *  @constructor\n *  @extends {Tone}\n *  @singleton\n *  @example\n * //the audio will go from the oscillator to the speakers\n * oscillator.connect(Tone.Master);\n * //a convenience for connecting to the master output is also provided:\n * oscillator.toMaster();\n * //the above two examples are equivalent.\n */\nTone.Master = function(){\n\n\tTone.AudioNode.call(this);\n\tTone.getContext(function(){\n\t\tthis.createInsOuts(1, 0);\n\n\t\t/**\n\t\t *  The private volume node\n\t\t *  @type  {Tone.Volume}\n\t\t *  @private\n\t\t */\n\t\tthis._volume = this.output = new Tone.Volume();\n\n\t\t/**\n\t\t * The volume of the master output.\n\t\t * @type {Decibels}\n\t\t * @signal\n\t\t */\n\t\tthis.volume = this._volume.volume;\n\n\t\tthis._readOnly(\"volume\");\n\t\t//connections\n\t\tTone.connectSeries(this.input, this.output, this.context.destination);\n\n\t\t//master is a singleton so it adds itself to the context\n\t\tthis.context.master = this;\n\t}.bind(this));\n};\n\nTone.extend(Tone.Master, Tone.AudioNode);\n\n/**\n *  @type {Object}\n *  @const\n */\nTone.Master.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n * Is an instanceof Tone.Master\n * @type {Boolean}\n */\nTone.Master.prototype.isMaster = true;\n\n/**\n * Mute the output.\n * @memberOf Tone.Master#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * Tone.Master.mute = true;\n */\nObject.defineProperty(Tone.Master.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n/**\n *  Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n *  chained in the master effects chain.\n *  @param {...(AudioNode|Tone)} nodes All arguments will be connected in a row\n *                                  and the Master will be routed through it.\n *  @return  {Tone.Master}  this\n *  @example\n * //some overall compression to keep the levels in check\n * var masterCompressor = new Tone.Compressor({\n * \t\"threshold\" : -6,\n * \t\"ratio\" : 3,\n * \t\"attack\" : 0.5,\n * \t\"release\" : 0.1\n * });\n * //give a little boost to the lows\n * var lowBump = new Tone.Filter(200, \"lowshelf\");\n * //route everything through the filter\n * //and compressor before going to the speakers\n * Tone.Master.chain(lowBump, masterCompressor);\n */\nTone.Master.prototype.chain = function(){\n\tthis.input.disconnect();\n\tvar args = Array.from(arguments);\n\targs.unshift(this.input);\n\targs.push(this.output);\n\tTone.connectSeries.apply(undefined, args);\n};\n\n/**\n *  Clean up\n *  @return  {Tone.Master}  this\n */\nTone.Master.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable(\"volume\");\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis.volume = null;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tAUGMENT TONE's PROTOTYPE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Connect 'this' to the master output. Shorthand for this.connect(Tone.Master)\n *  @returns {Tone.AudioNode} this\n *  @example\n * //connect an oscillator to the master output\n * var osc = new Tone.Oscillator().toMaster();\n */\nTone.AudioNode.prototype.toMaster = function(){\n\tthis.connect(this.context.master);\n\treturn this;\n};\n\n/**\n *  initialize the module and listen for new audio contexts\n *  @private\n */\nvar MasterConstructor = Tone.Master;\nTone.Master = new MasterConstructor();\n\nTone.Context.on(\"init\", function(context){\n\t// if it already exists, just restore it\n\tif (context.master && context.master.isMaster){\n\t\tTone.Master = context.master;\n\t} else {\n\t\tTone.Master = new MasterConstructor();\n\t}\n});\n\nTone.Context.on(\"close\", function(context){\n\tif (context.master && context.master.isMaster){\n\t\tcontext.master.dispose();\n\t}\n});\n\nexport default Tone.Master;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\nimport \"../core/Master\";\n\n/**\n *  @class  Base-class for all instruments\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n */\nTone.Instrument = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.Instrument.defaults);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The output and volume triming node\n\t *  @type  {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @type {Decibels}\n\t * @signal\n\t * @example\n\t * source.volume.value = -6;\n\t */\n\tthis.volume = this._volume.volume;\n\tthis._readOnly(\"volume\");\n\n\t/**\n\t * Keep track of all events scheduled to the transport\n\t * when the instrument is 'synced'\n\t * @type {Array<Number>}\n\t * @private\n\t */\n\tthis._scheduledEvents = [];\n};\n\nTone.extend(Tone.Instrument, Tone.AudioNode);\n\n/**\n *  the default attributes\n *  @type {object}\n */\nTone.Instrument.defaults = {\n\t/** the volume of the output in decibels */\n\t\"volume\" : 0\n};\n\n/**\n *  @abstract\n *  @param {string|number} note the note to trigger\n *  @param {Time} [time=now] the time to trigger the ntoe\n *  @param {number} [velocity=1] the velocity to trigger the note\n */\nTone.Instrument.prototype.triggerAttack = Tone.noOp;\n\n/**\n *  @abstract\n *  @param {Time} [time=now] when to trigger the release\n */\nTone.Instrument.prototype.triggerRelease = Tone.noOp;\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * instrument.sync()\n * //schedule 3 notes when the transport first starts\n * instrument.triggerAttackRelease('C4', '8n', 0)\n * instrument.triggerAttackRelease('E4', '8n', '8n')\n * instrument.triggerAttackRelease('G4', '8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.Instrument.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 1);\n\tthis._syncMethod(\"triggerRelease\", 0);\n\treturn this;\n};\n\n/**\n * Wrap the given method so that it can be synchronized\n * @param {String} method Which method to wrap and sync\n * @param  {Number} timePosition What position the time argument appears in\n * @private\n */\nTone.Instrument.prototype._syncMethod = function(method, timePosition){\n\tvar originalMethod = this[\"_original_\"+method] = this[method];\n\tthis[method] = function(){\n\t\tvar args = Array.prototype.slice.call(arguments);\n\t\tvar time = args[timePosition];\n\t\tvar id = Tone.Transport.schedule(function(t){\n\t\t\targs[timePosition] = t;\n\t\t\toriginalMethod.apply(this, args);\n\t\t}.bind(this), time);\n\t\tthis._scheduledEvents.push(id);\n\t}.bind(this);\n};\n\n/**\n * Unsync the instrument from the Transport\n * @returns {Tone.Instrument} this\n */\nTone.Instrument.prototype.unsync = function(){\n\tthis._scheduledEvents.forEach(function(id){\n\t\tTone.Transport.clear(id);\n\t});\n\tthis._scheduledEvents = [];\n\tif (this._original_triggerAttack){\n\t\tthis.triggerAttack = this._original_triggerAttack;\n\t\tthis.triggerRelease = this._original_triggerRelease;\n\t}\n\treturn this;\n};\n\n/**\n *  Trigger the attack and then the release after the duration.\n *  @param  {Frequency} note     The note to trigger.\n *  @param  {Time} duration How long the note should be held for before\n *                          triggering the release. This value must be greater than 0.\n *  @param {Time} [time=now]  When the note should be triggered.\n *  @param  {NormalRange} [velocity=1] The velocity the note should be triggered at.\n *  @returns {Tone.Instrument} this\n *  @example\n * //trigger \"C4\" for the duration of an 8th note\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n */\nTone.Instrument.prototype.triggerAttackRelease = function(note, duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tduration = this.toSeconds(duration);\n\tthis.triggerAttack(note, time, velocity);\n\tthis.triggerRelease(time + duration);\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.Instrument} this\n */\nTone.Instrument.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis._writable([\"volume\"]);\n\tthis.volume = null;\n\tthis.unsync();\n\tthis._scheduledEvents = null;\n\treturn this;\n};\n\nexport default Tone.Instrument;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  AudioBuffer.copyTo/FromChannel polyfill\n *  @private\n */\nif (Tone.supported){\n\tif (!AudioBuffer.prototype.copyToChannel){\n\t\tAudioBuffer.prototype.copyToChannel = function(src, chanNum, start){\n\t\t\tvar channel = this.getChannelData(chanNum);\n\t\t\tstart = start || 0;\n\t\t\tfor (var i = 0; i < channel.length; i++){\n\t\t\t\tchannel[i+start] = src[i];\n\t\t\t}\n\t\t};\n\t\tAudioBuffer.prototype.copyFromChannel = function(dest, chanNum, start){\n\t\t\tvar channel = this.getChannelData(chanNum);\n\t\t\tstart = start || 0;\n\t\t\tfor (var i = 0; i < dest.length; i++){\n\t\t\t\tdest[i] = channel[i+start];\n\t\t\t}\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Emitter\";\nimport \"../type/Type\";\nimport \"../shim/AudioBuffer\";\n\n/**\n *  @class  Buffer loading and storage. Tone.Buffer is used internally by all\n *          classes that make requests for audio files such as Tone.Player,\n *          Tone.Sampler and Tone.Convolver.\n *\n *          Aside from load callbacks from individual buffers, Tone.Buffer\n *  \t\tprovides events which keep track of the loading progress\n *  \t\tof _all_ of the buffers. These are Tone.Buffer.on(\"load\" / \"progress\" / \"error\")\n *\n *  @constructor\n *  @extends {Tone}\n *  @param {AudioBuffer|String} url The url to load, or the audio buffer to set.\n *  @param {Function=} onload A callback which is invoked after the buffer is loaded.\n *                            It's recommended to use `Tone.Buffer.on('load', callback)` instead\n *                            since it will give you a callback when _all_ buffers are loaded.\n *  @param {Function=} onerror The callback to invoke if there is an error\n *  @example\n * var buffer = new Tone.Buffer(\"path/to/sound.mp3\", function(){\n * \t//the buffer is now available.\n * \tvar buff = buffer.get();\n * });\n *  @example\n * //can load provide fallback extension types if the first type is not supported.\n * var buffer = new Tone.Buffer(\"path/to/sound.[mp3|ogg|wav]\");\n */\nTone.Buffer = function(){\n\n\tvar options = Tone.defaults(arguments, [\"url\", \"onload\", \"onerror\"], Tone.Buffer);\n\tTone.call(this);\n\n\t/**\n\t *  stores the loaded AudioBuffer\n\t *  @type {AudioBuffer}\n\t *  @private\n\t */\n\tthis._buffer = null;\n\n\t/**\n\t *  indicates if the buffer should be reversed or not\n\t *  @type {Boolean}\n\t *  @private\n\t */\n\tthis._reversed = options.reverse;\n\n\t/**\n\t *  The XHR\n\t *  @type  {XMLHttpRequest}\n\t *  @private\n\t */\n\tthis._xhr = null;\n\n\t/**\n\t * Private callback when the buffer is loaded.\n\t * @type {Function}\n\t * @private\n\t */\n\tthis.onload = Tone.noOp;\n\n\tif (options.url instanceof AudioBuffer || options.url instanceof Tone.Buffer){\n\t\tthis.set(options.url);\n\t\tif (!this.loaded){\n\t\t\tthis.onload = options.onload;\n\t\t}\n\t} else if (Tone.isString(options.url)){\n\t\tthis.load(options.url).then(options.onload).catch(options.onerror);\n\t}\n};\n\nTone.extend(Tone.Buffer);\n\n/**\n *  the default parameters\n *  @type {Object}\n */\nTone.Buffer.defaults = {\n\t\"url\" : undefined,\n\t\"reverse\" : false,\n\t\"onload\" : Tone.noOp,\n\t\"onerror\" : Tone.noOp\n};\n\n/**\n *  Pass in an AudioBuffer or Tone.Buffer to set the value\n *  of this buffer.\n *  @param {AudioBuffer|Tone.Buffer} buffer the buffer\n *  @returns {Tone.Buffer} this\n */\nTone.Buffer.prototype.set = function(buffer){\n\tif (buffer instanceof Tone.Buffer){\n\t\t//if it's loaded, set it\n\t\tif (buffer.loaded){\n\t\t\tthis._buffer = buffer.get();\n\t\t} else {\n\t\t\t//otherwise when it's loaded, invoke it's callback\n\t\t\tbuffer.onload = function(){\n\t\t\t\tthis.set(buffer);\n\t\t\t\tthis.onload(this);\n\t\t\t}.bind(this);\n\t\t}\n\t} else {\n\t\tthis._buffer = buffer;\n\t}\n\t//reverse it initially\n\tif (this._reversed){\n\t\tthis._reverse();\n\t}\n\treturn this;\n};\n\n/**\n *  @return {AudioBuffer} The audio buffer stored in the object.\n */\nTone.Buffer.prototype.get = function(){\n\treturn this._buffer;\n};\n\n/**\n *  Makes an xhr reqest for the selected url then decodes\n *  the file as an audio buffer. Invokes\n *  the callback once the audio buffer loads.\n *  @param {String} url The url of the buffer to load.\n *                      filetype support depends on the\n *                      browser.\n *  @returns {Promise} returns a Promise which resolves with the Tone.Buffer\n */\nTone.Buffer.prototype.load = function(url, onload, onerror){\n\n\tvar promise = new Promise(function(load, error){\n\n\t\tthis._xhr = Tone.Buffer.load(url,\n\n\t\t\t//success\n\t\t\tfunction(buff){\n\t\t\t\tthis._xhr = null;\n\t\t\t\tthis.set(buff);\n\t\t\t\tload(this);\n\t\t\t\tthis.onload(this);\n\t\t\t\tif (onload){\n\t\t\t\t\tonload(this);\n\t\t\t\t}\n\t\t\t}.bind(this),\n\n\t\t\t//error\n\t\t\tfunction(err){\n\t\t\t\tthis._xhr = null;\n\t\t\t\terror(err);\n\t\t\t\tif (onerror){\n\t\t\t\t\tonerror(err);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\n\t}.bind(this));\n\n\treturn promise;\n};\n\n/**\n *  dispose and disconnect\n *  @returns {Tone.Buffer} this\n */\nTone.Buffer.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis._buffer = null;\n\tif (this._xhr){\n\t\tTone.Buffer._removeFromDownloadQueue(this._xhr);\n\t\tthis._xhr.abort();\n\t\tthis._xhr = null;\n\t}\n\treturn this;\n};\n\n/**\n * If the buffer is loaded or not\n * @memberOf Tone.Buffer#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"loaded\", {\n\t\"get\" : function(){\n\t\treturn this.length > 0;\n\t},\n});\n\n/**\n * The duration of the buffer.\n * @memberOf Tone.Buffer#\n * @type {Number}\n * @name duration\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"duration\", {\n\t\"get\" : function(){\n\t\tif (this._buffer){\n\t\t\treturn this._buffer.duration;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t},\n});\n\n/**\n * The length of the buffer in samples\n * @memberOf Tone.Buffer#\n * @type {Number}\n * @name length\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"length\", {\n\t\"get\" : function(){\n\t\tif (this._buffer){\n\t\t\treturn this._buffer.length;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t},\n});\n\n/**\n * The number of discrete audio channels. Returns 0 if no buffer\n * is loaded.\n * @memberOf Tone.Buffer#\n * @type {Number}\n * @name numberOfChannels\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"numberOfChannels\", {\n\t\"get\" : function(){\n\t\tif (this._buffer){\n\t\t\treturn this._buffer.numberOfChannels;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t},\n});\n\n/**\n *  Set the audio buffer from the array. To create a multichannel AudioBuffer,\n *  pass in a multidimensional array.\n *  @param {Float32Array} array The array to fill the audio buffer\n *  @return {Tone.Buffer} this\n */\nTone.Buffer.prototype.fromArray = function(array){\n\tvar isMultidimensional = array[0].length > 0;\n\tvar channels = isMultidimensional ? array.length : 1;\n\tvar len = isMultidimensional ? array[0].length : array.length;\n\tvar buffer = this.context.createBuffer(channels, len, this.context.sampleRate);\n\tif (!isMultidimensional && channels === 1){\n\t\tarray = [array];\n\t}\n\tfor (var c = 0; c < channels; c++){\n\t\tbuffer.copyToChannel(array[c], c);\n\t}\n\tthis._buffer = buffer;\n\treturn this;\n};\n\n/**\n * \tSums muliple channels into 1 channel\n *  @param {Number=} channel Optionally only copy a single channel from the array.\n *  @return {Array}\n */\nTone.Buffer.prototype.toMono = function(chanNum){\n\tif (Tone.isNumber(chanNum)){\n\t\tthis.fromArray(this.toArray(chanNum));\n\t} else {\n\t\tvar outputArray = new Float32Array(this.length);\n\t\tvar numChannels = this.numberOfChannels;\n\t\tfor (var channel = 0; channel < numChannels; channel++){\n\t\t\tvar channelArray = this.toArray(channel);\n\t\t\tfor (var i = 0; i < channelArray.length; i++){\n\t\t\t\toutputArray[i] += channelArray[i];\n\t\t\t}\n\t\t}\n\t\t//divide by the number of channels\n\t\toutputArray = outputArray.map(function(sample){\n\t\t\treturn sample / numChannels;\n\t\t});\n\t\tthis.fromArray(outputArray);\n\t}\n\treturn this;\n};\n\n/**\n * \tGet the buffer as an array. Single channel buffers will return a 1-dimensional\n * \tFloat32Array, and multichannel buffers will return multidimensional arrays.\n *  @param {Number=} channel Optionally only copy a single channel from the array.\n *  @return {Array}\n */\nTone.Buffer.prototype.toArray = function(channel){\n\tif (Tone.isNumber(channel)){\n\t\treturn this.getChannelData(channel);\n\t} else if (this.numberOfChannels === 1){\n\t\treturn this.toArray(0);\n\t} else {\n\t\tvar ret = [];\n\t\tfor (var c = 0; c < this.numberOfChannels; c++){\n\t\t\tret[c] = this.getChannelData(c);\n\t\t}\n\t\treturn ret;\n\t}\n};\n\n/**\n *  Returns the Float32Array representing the PCM audio data for the specific channel.\n *  @param  {Number}  channel  The channel number to return\n *  @return  {Float32Array}  The audio as a TypedArray\n */\nTone.Buffer.prototype.getChannelData = function(channel){\n\treturn this._buffer.getChannelData(channel);\n};\n\n/**\n *  Cut a subsection of the array and return a buffer of the\n *  subsection. Does not modify the original buffer\n *  @param {Time} start The time to start the slice\n *  @param {Time=} end The end time to slice. If none is given\n *                     will default to the end of the buffer\n *  @return {Tone.Buffer} this\n */\nTone.Buffer.prototype.slice = function(start, end){\n\tend = Tone.defaultArg(end, this.duration);\n\tvar startSamples = Math.floor(this.context.sampleRate * this.toSeconds(start));\n\tvar endSamples = Math.floor(this.context.sampleRate * this.toSeconds(end));\n\tvar replacement = [];\n\tfor (var i = 0; i < this.numberOfChannels; i++){\n\t\treplacement[i] = this.toArray(i).slice(startSamples, endSamples);\n\t}\n\tvar retBuffer = new Tone.Buffer().fromArray(replacement);\n\treturn retBuffer;\n};\n\n/**\n *  Reverse the buffer.\n *  @private\n *  @return {Tone.Buffer} this\n */\nTone.Buffer.prototype._reverse = function(){\n\tif (this.loaded){\n\t\tfor (var i = 0; i < this.numberOfChannels; i++){\n\t\t\tArray.prototype.reverse.call(this.getChannelData(i));\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n * Reverse the buffer.\n * @memberOf Tone.Buffer#\n * @type {Boolean}\n * @name reverse\n */\nObject.defineProperty(Tone.Buffer.prototype, \"reverse\", {\n\t\"get\" : function(){\n\t\treturn this._reversed;\n\t},\n\t\"set\" : function(rev){\n\t\tif (this._reversed !== rev){\n\t\t\tthis._reversed = rev;\n\t\t\tthis._reverse();\n\t\t}\n\t},\n});\n\n///////////////////////////////////////////////////////////////////////////\n// STATIC METHODS\n///////////////////////////////////////////////////////////////////////////\n\n//statically inherits Emitter methods\nTone.Emitter.mixin(Tone.Buffer);\n\n/**\n *  the static queue for all of the xhr requests\n *  @type {Array}\n *  @private\n */\nTone.Buffer._downloadQueue = [];\n\n/**\n *  A path which is prefixed before every url.\n *  @type  {String}\n *  @static\n */\nTone.Buffer.baseUrl = \"\";\n\n/**\n *  Create a Tone.Buffer from the array. To create a multichannel AudioBuffer,\n *  pass in a multidimensional array.\n *  @param {Float32Array} array The array to fill the audio buffer\n *  @return {Tone.Buffer} A Tone.Buffer created from the array\n */\nTone.Buffer.fromArray = function(array){\n\treturn (new Tone.Buffer()).fromArray(array);\n};\n\n/**\n * Creates a Tone.Buffer from a URL, returns a promise\n * which resolves to a Tone.Buffer\n * @param  {String} url The url to load.\n * @return {Promise<Tone.Buffer>}     A promise which resolves to a Tone.Buffer\n */\nTone.Buffer.fromUrl = function(url){\n\tvar buffer = new Tone.Buffer();\n\treturn buffer.load(url).then(function(){\n\t\treturn buffer;\n\t});\n};\n\n/**\n * Remove an xhr request from the download queue\n * @private\n */\nTone.Buffer._removeFromDownloadQueue = function(request){\n\tvar index = Tone.Buffer._downloadQueue.indexOf(request);\n\tif (index !== -1){\n\t\tTone.Buffer._downloadQueue.splice(index, 1);\n\t}\n};\n\n/**\n *  Loads a url using XMLHttpRequest.\n *  @param {String} url\n *  @param {Function} onload\n *  @param {Function} onerror\n *  @param {Function} onprogress\n *  @return {XMLHttpRequest}\n */\nTone.Buffer.load = function(url, onload, onerror){\n\t//default\n\tonload = Tone.defaultArg(onload, Tone.noOp);\n\n\t// test if the url contains multiple extensions\n\tvar matches = url.match(/\\[(.+\\|?)+\\]$/);\n\tif (matches){\n\t\tvar extensions = matches[1].split(\"|\");\n\t\tvar extension = extensions[0];\n\t\tfor (var i = 0; i < extensions.length; i++){\n\t\t\tif (Tone.Buffer.supportsType(extensions[i])){\n\t\t\t\textension = extensions[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\turl = url.replace(matches[0], extension);\n\t}\n\n\tfunction onError(e){\n\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\tTone.Buffer.emit(\"error\", e);\n\t\tif (onerror){\n\t\t\tonerror(e);\n\t\t} else {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tfunction onProgress(){\n\t\t//calculate the progress\n\t\tvar totalProgress = 0;\n\t\tfor (var i = 0; i < Tone.Buffer._downloadQueue.length; i++){\n\t\t\ttotalProgress += Tone.Buffer._downloadQueue[i].progress;\n\t\t}\n\t\tTone.Buffer.emit(\"progress\", totalProgress / Tone.Buffer._downloadQueue.length);\n\t}\n\n\tvar request = new XMLHttpRequest();\n\trequest.open(\"GET\", Tone.Buffer.baseUrl + url, true);\n\trequest.responseType = \"arraybuffer\";\n\t//start out as 0\n\trequest.progress = 0;\n\n\tTone.Buffer._downloadQueue.push(request);\n\n\trequest.addEventListener(\"load\", function(){\n\n\t\tif (request.status === 200){\n\t\t\tTone.context.decodeAudioData(request.response).then(function(buff){\n\n\t\t\t\trequest.progress = 1;\n\t\t\t\tonProgress();\n\t\t\t\tonload(buff);\n\n\t\t\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\t\t\tif (Tone.Buffer._downloadQueue.length === 0){\n\t\t\t\t\t//emit the event at the end\n\t\t\t\t\tTone.Buffer.emit(\"load\");\n\t\t\t\t}\n\t\t\t}).catch(function(){\n\t\t\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\t\t\tonError(\"Tone.Buffer: could not decode audio data: \"+url);\n\t\t\t});\n\t\t} else {\n\t\t\tonError(\"Tone.Buffer: could not locate file: \"+url);\n\t\t}\n\t});\n\trequest.addEventListener(\"error\", onError);\n\n\trequest.addEventListener(\"progress\", function(event){\n\t\tif (event.lengthComputable){\n\t\t\t//only go to 95%, the last 5% is when the audio is decoded\n\t\t\trequest.progress = (event.loaded / event.total) * 0.95;\n\t\t\tonProgress();\n\t\t}\n\t});\n\n\trequest.send();\n\n\treturn request;\n};\n\n/**\n *  Stop all of the downloads in progress\n *  @return {Tone.Buffer}\n *  @static\n */\nTone.Buffer.cancelDownloads = function(){\n\tTone.Buffer._downloadQueue.slice().forEach(function(request){\n\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\trequest.abort();\n\t});\n\treturn Tone.Buffer;\n};\n\n/**\n *  Checks a url's extension to see if the current browser can play that file type.\n *  @param {String} url The url/extension to test\n *  @return {Boolean} If the file extension can be played\n *  @static\n *  @example\n * Tone.Buffer.supportsType(\"wav\"); //returns true\n * Tone.Buffer.supportsType(\"path/to/file.wav\"); //returns true\n */\nTone.Buffer.supportsType = function(url){\n\tvar extension = url.split(\".\");\n\textension = extension[extension.length - 1];\n\tvar response = document.createElement(\"audio\").canPlayType(\"audio/\"+extension);\n\treturn response !== \"\";\n};\n\n/**\n *  Returns a Promise which resolves when all of the buffers have loaded\n *  @return {Promise}\n */\nTone.loaded = function(){\n\tvar onload, onerror;\n\tfunction removeEvents(){\n\t\t//remove the events when it's resolved\n\t\tTone.Buffer.off(\"load\", onload);\n\t\tTone.Buffer.off(\"error\", onerror);\n\t}\n\treturn new Promise(function(success, fail){\n\t\tonload = function(){\n\t\t\tsuccess();\n\t\t};\n\t\tonerror = function(){\n\t\t\tfail();\n\t\t};\n\t\t//add the event listeners\n\t\tTone.Buffer.on(\"load\", onload);\n\t\tTone.Buffer.on(\"error\", onerror);\n\t}).then(removeEvents).catch(function(e){\n\t\tremoveEvents();\n\t\tthrow new Error(e);\n\t});\n};\n\nexport default Tone.Buffer;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\n\n/**\n *  @class A data structure for holding multiple buffers.\n *  \n *  @param  {Object|Array}    urls      An object literal or array\n *                                      of urls to load.\n *  @param  {Function=}  callback  The callback to invoke when\n *                                 the buffers are loaded. \n *  @extends {Tone}\n *  @example\n * //load a whole bank of piano samples\n * var pianoSamples = new Tone.Buffers({\n * \t\"C4\" : \"path/to/C4.mp3\"\n * \t\"C#4\" : \"path/to/C#4.mp3\"\n * \t\"D4\" : \"path/to/D4.mp3\"\n * \t\"D#4\" : \"path/to/D#4.mp3\"\n * \t...\n * }, function(){\n * \t//play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"C4\");\n * \tplayer.start();\n * });\n * \t@example\n * //To pass in additional parameters in the second parameter\n * var buffers = new Tone.Buffers(urls, {\n * \t\"onload\" : callback,\n * \t\"baseUrl\" : \"../path/to/audio/\"\n * })\n */\nTone.Buffers = function(urls){\n\n\t//remove the urls from the options\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.shift();\n\tvar options = Tone.defaults(args, [\"onload\", \"baseUrl\"], Tone.Buffers);\n\tTone.call(this);\n\n\t/**\n\t *  All of the buffers\n\t *  @type  {Object}\n\t *  @private\n\t */\n\tthis._buffers = {};\n\n\t/**\n\t *  A path which is prefixed before every url.\n\t *  @type  {String}\n\t */\n\tthis.baseUrl = options.baseUrl;\n\n\tthis._loadingCount = 0;\n\t//add each one\n\tfor (var key in urls){\n\t\tthis._loadingCount++;\n\t\tthis.add(key, urls[key], this._bufferLoaded.bind(this, options.onload));\n\t}\n};\n\nTone.extend(Tone.Buffers);\n\n/**\n *  Defaults\n *  @type  {Object}\n */\nTone.Buffers.defaults = {\n\t\"onload\" : Tone.noOp,\n\t\"baseUrl\" : \"\"\n};\n\n/**\n *  True if the buffers object has a buffer by that name.\n *  @param  {String|Number}  name  The key or index of the \n *                                 buffer.\n *  @return  {Boolean}\n */\nTone.Buffers.prototype.has = function(name){\n\treturn this._buffers.hasOwnProperty(name);\n};\n\n/**\n *  Get a buffer by name. If an array was loaded, \n *  then use the array index.\n *  @param  {String|Number}  name  The key or index of the \n *                                 buffer.\n *  @return  {Tone.Buffer}\n */\nTone.Buffers.prototype.get = function(name){\n\tif (this.has(name)){\n\t\treturn this._buffers[name];\n\t} else {\n\t\tthrow new Error(\"Tone.Buffers: no buffer named \"+name);\n\t}\n};\n\n/**\n *  A buffer was loaded. decrement the counter.\n *  @param  {Function}  callback \n *  @private\n */\nTone.Buffers.prototype._bufferLoaded = function(callback){\n\tthis._loadingCount--;\n\tif (this._loadingCount === 0 && callback){\n\t\tcallback(this);\n\t}\n};\n\n/**\n * If the buffers are loaded or not\n * @memberOf Tone.Buffers#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Buffers.prototype, \"loaded\", {\n\tget : function(){\n\t\tvar isLoaded = true;\n\t\tfor (var buffName in this._buffers){\n\t\t\tvar buff = this.get(buffName);\n\t\t\tisLoaded = isLoaded && buff.loaded;\n\t\t}\n\t\treturn isLoaded;\n\t}\n});\n\n/**\n *  Add a buffer by name and url to the Buffers\n *  @param  {String}    name      A unique name to give\n *                                the buffer\n *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer, \n *                                                 or a buffer which will be added\n *                                                 with the given name.\n *  @param  {Function=}  callback  The callback to invoke \n *                                 when the url is loaded.\n */\nTone.Buffers.prototype.add = function(name, url, callback){\n\tcallback = Tone.defaultArg(callback, Tone.noOp);\n\tif (url instanceof Tone.Buffer){\n\t\tthis._buffers[name] = url;\n\t\tcallback(this);\n\t} else if (url instanceof AudioBuffer){\n\t\tthis._buffers[name] = new Tone.Buffer(url);\n\t\tcallback(this);\n\t} else if (Tone.isString(url)){\n\t\tthis._buffers[name] = new Tone.Buffer(this.baseUrl + url, callback);\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Buffers} this\n */\nTone.Buffers.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tfor (var name in this._buffers){\n\t\tthis._buffers[name].dispose();\n\t}\n\tthis._buffers = null;\n\treturn this;\n};\n\nexport default Tone.Buffers;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\n\n/**\n * @class Tone.TickSignal extends Tone.Signal, but adds the capability\n *        to calculate the number of elapsed ticks. exponential and target curves\n *        are approximated with multiple linear ramps.\n *\n *        Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos, for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n *        describing integrating timing functions for tempo calculations.\n *\n * @param {Number} value The initial value of the signal\n * @extends {Tone.Signal}\n */\nTone.TickSignal = function(value){\n\n\tvalue = Tone.defaultArg(value, 1);\n\n\tTone.Signal.call(this, {\n\t\t\"units\" : Tone.Type.Ticks,\n\t\t\"value\" : value\n\t});\n\n\t//extend the memory\n\tthis._events.memory = Infinity;\n\n\t//clear the clock from the beginning\n\tthis.cancelScheduledValues(0);\n\t//set an initial event\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\"time\" : 0,\n\t\t\"value\" : value\n\t});\n};\n\nTone.extend(Tone.TickSignal, Tone.Signal);\n\n/**\n * Wraps Tone.Signal methods so that they also\n * record the ticks.\n * @param  {Function} method\n * @return {Function}\n * @private\n */\nfunction _wrapScheduleMethods(method){\n\treturn function(value, time){\n\t\ttime = this.toSeconds(time);\n\t\tmethod.apply(this, arguments);\n\t\tvar event = this._events.get(time);\n\t\tvar previousEvent = this._events.previousEvent(event);\n\t\tvar ticksUntilTime = this._getTicksUntilEvent(previousEvent, time);\n\t\tevent.ticks = Math.max(ticksUntilTime, 0);\n\t\treturn this;\n\t};\n}\n\nTone.TickSignal.prototype.setValueAtTime = _wrapScheduleMethods(Tone.Signal.prototype.setValueAtTime);\nTone.TickSignal.prototype.linearRampToValueAtTime = _wrapScheduleMethods(Tone.Signal.prototype.linearRampToValueAtTime);\n\n/**\n *  Start exponentially approaching the target value at the given time with\n *  a rate having the given time constant.\n *  @param {number} value\n *  @param {Time} startTime\n *  @param {number} timeConstant\n *  @returns {Tone.TickSignal} this\n */\nTone.TickSignal.prototype.setTargetAtTime = function(value, time, constant){\n\t//aproximate it with multiple linear ramps\n\ttime = this.toSeconds(time);\n\tthis.setRampPoint(time);\n\tvalue = this._fromUnits(value);\n\n\t//start from previously scheduled value\n\tvar prevEvent = this._events.get(time);\n\tvar segments = Math.round(Math.max(1 / constant, 1));\n\tfor (var i = 0; i <= segments; i++){\n\t\tvar segTime = constant * i + time;\n\t\tvar rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, value, constant, segTime);\n\t\tthis.linearRampToValueAtTime(this._toUnits(rampVal), segTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Schedules an exponential continuous change in parameter value from\n *  the previous scheduled parameter value to the given value.\n *  @param  {number} value\n *  @param  {Time} endTime\n *  @returns {Tone.TickSignal} this\n */\nTone.TickSignal.prototype.exponentialRampToValueAtTime = function(value, time){\n\t//aproximate it with multiple linear ramps\n\ttime = this.toSeconds(time);\n\tvalue = this._fromUnits(value);\n\n\t//start from previously scheduled value\n\tvar prevEvent = this._events.get(time);\n\t//approx 10 segments per second\n\tvar segments = Math.round(Math.max((time - prevEvent.time)*10, 1));\n\tvar segmentDur = ((time - prevEvent.time)/segments);\n\tfor (var i = 0; i <= segments; i++){\n\t\tvar segTime = segmentDur * i + prevEvent.time;\n\t\tvar rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, value, segTime);\n\t\tthis.linearRampToValueAtTime(this._toUnits(rampVal), segTime);\n\t}\n\treturn this;\n};\n\n/**\n * Returns the tick value at the time. Takes into account\n * any automation curves scheduled on the signal.\n * @private\n * @param  {Time} time The time to get the tick count at\n * @return {Ticks}      The number of ticks which have elapsed at the time\n *                          given any automations.\n */\nTone.TickSignal.prototype._getTicksUntilEvent = function(event, time){\n\tif (event === null){\n\t\tevent = {\n\t\t\t\"ticks\" : 0,\n\t\t\t\"time\" : 0\n\t\t};\n\t} else if (Tone.isUndef(event.ticks)){\n\t\tvar previousEvent = this._events.previousEvent(event);\n\t\tevent.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n\t}\n\tvar val0 = this.getValueAtTime(event.time);\n\tvar val1 = this.getValueAtTime(time);\n\t//if it's right on the line, take the previous value\n\tif (this._events.get(time).time === time && this._events.get(time).type === Tone.Param.AutomationType.SetValue){\n\t\tval1 = this.getValueAtTime(time - this.sampleTime);\n\t}\n\treturn 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n};\n\n/**\n * Returns the tick value at the time. Takes into account\n * any automation curves scheduled on the signal.\n * @param  {Time} time The time to get the tick count at\n * @return {Ticks}      The number of ticks which have elapsed at the time\n *                          given any automations.\n */\nTone.TickSignal.prototype.getTicksAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar event = this._events.get(time);\n\treturn Math.max(this._getTicksUntilEvent(event, time), 0);\n};\n\n/**\n * Return the elapsed time of the number of ticks from the given time\n * @param {Ticks} ticks The number of ticks to calculate\n * @param  {Time} time The time to get the next tick from\n * @return {Seconds} The duration of the number of ticks from the given time in seconds\n */\nTone.TickSignal.prototype.getDurationOfTicks = function(ticks, time){\n\ttime = this.toSeconds(time);\n\tvar currentTick = this.getTicksAtTime(time);\n\treturn this.getTimeOfTick(currentTick + ticks) - time;\n};\n\n/**\n * Given a tick, returns the time that tick occurs at.\n * @param  {Ticks} tick\n * @return {Time}      The time that the tick occurs.\n */\nTone.TickSignal.prototype.getTimeOfTick = function(tick){\n\tvar before = this._events.get(tick, \"ticks\");\n\tvar after = this._events.getAfter(tick, \"ticks\");\n\tif (before && before.ticks === tick){\n\t\treturn before.time;\n\t} else if (before && after &&\n\t\tafter.type === Tone.Param.AutomationType.Linear &&\n\t\tbefore.value !== after.value){\n\t\tvar val0 = this.getValueAtTime(before.time);\n\t\tvar val1 = this.getValueAtTime(after.time);\n\t\tvar delta = (val1 - val0) / (after.time - before.time);\n\t\tvar k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n\t\tvar sol1 = (-val0 + k) / delta;\n\t\tvar sol2 = (-val0 - k) / delta;\n\t\treturn (sol1 > 0 ? sol1 : sol2) + before.time;\n\t} else if (before){\n\t\tif (before.value === 0){\n\t\t\treturn Infinity;\n\t\t} else {\n\t\t\treturn before.time + (tick - before.ticks) / before.value;\n\t\t}\n\t} else {\n\t\treturn tick / this._initialValue;\n\t}\n};\n\n/**\n * Convert some number of ticks their the duration in seconds accounting\n * for any automation curves starting at the given time.\n * @param  {Ticks} ticks The number of ticks to convert to seconds.\n * @param  {Time} [when=now]  When along the automation timeline to convert the ticks.\n * @return {Tone.Time}       The duration in seconds of the ticks.\n */\nTone.TickSignal.prototype.ticksToTime = function(ticks, when){\n\twhen = this.toSeconds(when);\n\treturn new Tone.Time(this.getDurationOfTicks(ticks, when));\n};\n\n/**\n * The inverse of [ticksToTime](#tickstotime). Convert a duration in\n * seconds to the corresponding number of ticks accounting for any\n * automation curves starting at the given time.\n * @param  {Time} duration The time interval to convert to ticks.\n * @param  {Time} [when=now]     When along the automation timeline to convert the ticks.\n * @return {Tone.Ticks}          The duration in ticks.\n */\nTone.TickSignal.prototype.timeToTicks = function(duration, when){\n\twhen = this.toSeconds(when);\n\tduration = this.toSeconds(duration);\n\tvar startTicks = this.getTicksAtTime(when);\n\tvar endTicks = this.getTicksAtTime(when + duration);\n\treturn new Tone.Ticks(endTicks - startTicks);\n};\n\nexport default Tone.TickSignal;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Timeline\";\nimport \"../type/Type\";\n\n/**\n *  @class  A Timeline State. Provides the methods: <code>setStateAtTime(\"state\", time)</code>\n *          and <code>getValueAtTime(time)</code>.\n *\n *  @extends {Tone.Timeline}\n *  @param {String} initial The initial state of the TimelineState. \n *                          Defaults to <code>undefined</code>\n */\nTone.TimelineState = function(initial){\n\n\tTone.Timeline.call(this);\n\n\t/**\n\t *  The initial state\n\t *  @private\n\t *  @type {String}\n\t */\n\tthis._initial = initial;\n};\n\nTone.extend(Tone.TimelineState, Tone.Timeline);\n\n/**\n *  Returns the scheduled state scheduled before or at\n *  the given time.\n *  @param  {Number}  time  The time to query.\n *  @return  {String}  The name of the state input in setStateAtTime.\n */\nTone.TimelineState.prototype.getValueAtTime = function(time){\n\tvar event = this.get(time);\n\tif (event !== null){\n\t\treturn event.state;\n\t} else {\n\t\treturn this._initial;\n\t}\n};\n\n/**\n *  Add a state to the timeline.\n *  @param  {String}  state The name of the state to set.\n *  @param  {Number}  time  The time to query.\n *  @returns {Tone.TimelineState} this\n */\nTone.TimelineState.prototype.setStateAtTime = function(state, time){\n\t//all state changes need to be >= the previous state time\n\t//TODO throw error if time < the previous event time\n\tthis.add({\n\t\t\"state\" : state,\n\t\t\"time\" : time\n\t});\n\treturn this;\n};\n\n/**\n *  Return the event before the time with the given state\n *  @param {Tone.State} state The state to look for\n *  @param  {Time}  time  When to check before\t\t\t\n *  @return  {Object}  The event with the given state before the time\n */\nTone.TimelineState.prototype.getLastState = function(state, time){\n\ttime = this.toSeconds(time);\n\tvar index = this._search(time);\n\tfor (var i = index; i >= 0; i--){\n\t\tvar event = this._timeline[i];\n\t\tif (event.state === state){\n\t\t\treturn event;\n\t\t}\n\t}\n};\n\n/**\n *  Return the event after the time with the given state\n *  @param {Tone.State} state The state to look for\n *  @param  {Time}  time  When to check from\n *  @return  {Object}  The event with the given state after the time\n */\nTone.TimelineState.prototype.getNextState = function(state, time){\n\ttime = this.toSeconds(time);\n\tvar index = this._search(time);\n\tif (index !== -1){\n\t\tfor (var i = index; i < this._timeline.length; i++){\n\t\t\tvar event = this._timeline[i];\n\t\t\tif (event.state === state){\n\t\t\t\treturn event;\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default Tone.TimelineState;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/TickSignal\";\nimport \"../core/TimelineState\";\nimport \"../core/Timeline\";\nimport \"../core/Param\";\n\n/**\n *  @class  Uses [Tone.TickSignal](TickSignal) to track elapsed ticks with\n *  \t\tcomplex automation curves.\n *\n * \t@constructor\n *  @extends {Tone}\n *  @param {Frequency} frequency The initial frequency that the signal ticks at\n *  @param {Tone.Param=} param A parameter to control (such as playbackRate)\n */\nTone.TickSource = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\"], Tone.TickSource);\n\n\t/**\n\t *  The frequency the callback function should be invoked.\n\t *  @type  {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.TickSignal(options.frequency);\n\tthis._readOnly(\"frequency\");\n\n\t/**\n\t *  The state timeline\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\tthis._state.setStateAtTime(Tone.State.Stopped, 0);\n\n\t/**\n\t * The offset values of the ticks\n\t * @type {Tone.Timeline}\n\t * @private\n\t */\n\tthis._tickOffset = new Tone.Timeline();\n\t//add the first event\n\tthis.setTicksAtTime(0, 0);\n};\n\nTone.extend(Tone.TickSource);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.TickSource.defaults = {\n\t\"frequency\" : 1,\n};\n\n/**\n *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.TickSource#\n *  @name state\n */\nObject.defineProperty(Tone.TickSource.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._state.getValueAtTime(this.now());\n\t}\n});\n\n/**\n *  Start the clock at the given time. Optionally pass in an offset\n *  of where to start the tick counter from.\n *  @param  {Time=}  time    The time the clock should start\n *  @param {Ticks} [offset=0] The number of ticks to start the source at\n *  @return  {Tone.TickSource}  this\n */\nTone.TickSource.prototype.start = function(time, offset){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) !== Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tif (Tone.isDefined(offset)){\n\t\t\tthis.setTicksAtTime(offset, time);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the clock. Stopping the clock resets the tick counter to 0.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.TickSource} this\n *  @example\n * clock.stop();\n */\nTone.TickSource.prototype.stop = function(time){\n\ttime = this.toSeconds(time);\n\t//cancel the previous stop\n\tif (this._state.getValueAtTime(time) === Tone.State.Stopped){\n\t\tvar event = this._state.get(time);\n\t\tif (event.time > 0){\n\t\t\tthis._tickOffset.cancel(event.time);\n\t\t\tthis._state.cancel(event.time);\n\t\t}\n\t}\n\tthis._state.cancel(time);\n\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\tthis.setTicksAtTime(0, time);\n\treturn this;\n};\n\n/**\n *  Pause the clock. Pausing does not reset the tick counter.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.TickSource} this\n */\nTone.TickSource.prototype.pause = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Paused, time);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n *  @param {Time} [time=now] When to clear the events after\n *  @returns {Tone.TickSource} this\n */\nTone.TickSource.prototype.cancel = function(time){\n\ttime = this.toSeconds(time);\n\tthis._state.cancel(time);\n\tthis._tickOffset.cancel(time);\n\treturn this;\n};\n\n/**\n * Get the elapsed ticks at the given time\n * @param  {Time} time  When to get the tick value\n * @return {Ticks}     The number of ticks\n */\nTone.TickSource.prototype.getTicksAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar stopEvent = this._state.getLastState(Tone.State.Stopped, time);\n\t//this event allows forEachBetween to iterate until the current time\n\tvar tmpEvent = { state : Tone.State.Paused, time : time };\n\tthis._state.add(tmpEvent);\n\n\t//keep track of the previous offset event\n\tvar lastState = stopEvent;\n\tvar elapsedTicks = 0;\n\n\t//iterate through all the events since the last stop\n\tthis._state.forEachBetween(stopEvent.time, time + this.sampleTime, function(e){\n\t\tvar periodStartTime = lastState.time;\n\t\t//if there is an offset event in this period use that\n\t\tvar offsetEvent = this._tickOffset.get(e.time);\n\t\tif (offsetEvent.time >= lastState.time){\n\t\t\telapsedTicks = offsetEvent.ticks;\n\t\t\tperiodStartTime = offsetEvent.time;\n\t\t}\n\t\tif (lastState.state === Tone.State.Started && e.state !== Tone.State.Started){\n\t\t\telapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);\n\t\t} \n\t\tlastState = e;\n\t}.bind(this));\n\n\t//remove the temporary event\n\tthis._state.remove(tmpEvent);\n\n\t//return the ticks\n\treturn elapsedTicks;\n};\n\n/**\n *  The number of times the callback was invoked. Starts counting at 0\n *  and increments after the callback was invoked. Returns -1 when stopped.\n *  @memberOf Tone.TickSource#\n *  @name ticks\n *  @type {Ticks}\n */\nObject.defineProperty(Tone.TickSource.prototype, \"ticks\", {\n\tget : function(){\n\t\treturn this.getTicksAtTime(this.now());\n\t},\n\tset : function(t){\n\t\tthis.setTicksAtTime(t, this.now());\n\t}\n});\n\n/**\n *  The time since ticks=0 that the TickSource has been running. Accounts\n *  for tempo curves\n *  @memberOf Tone.TickSource#\n *  @name seconds\n *  @type {Seconds}\n */\nObject.defineProperty(Tone.TickSource.prototype, \"seconds\", {\n\tget : function(){\n\t\treturn this.getSecondsAtTime(this.now());\n\t},\n\tset : function(s){\n\t\tvar now = this.now();\n\t\tvar ticks = this.frequency.timeToTicks(s, now);\n\t\tthis.setTicksAtTime(ticks, now);\n\t}\n});\n\n/**\n *  Return the elapsed seconds at the given time.\n *  @param  {Time}  time  When to get the elapsed seconds\n *  @return  {Seconds}  The number of elapsed seconds\n */\nTone.TickSource.prototype.getSecondsAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar stopEvent = this._state.getLastState(Tone.State.Stopped, time);\n\t//this event allows forEachBetween to iterate until the current time\n\tvar tmpEvent = { state : Tone.State.Paused, time : time };\n\tthis._state.add(tmpEvent);\n\n\t//keep track of the previous offset event\n\tvar lastState = stopEvent;\n\tvar elapsedSeconds = 0;\n\n\t//iterate through all the events since the last stop\n\tthis._state.forEachBetween(stopEvent.time, time + this.sampleTime, function(e){\n\t\tvar periodStartTime = lastState.time;\n\t\t//if there is an offset event in this period use that\n\t\tvar offsetEvent = this._tickOffset.get(e.time);\n\t\tif (offsetEvent.time >= lastState.time){\n\t\t\telapsedSeconds = offsetEvent.seconds;\n\t\t\tperiodStartTime = offsetEvent.time;\n\t\t}\n\t\tif (lastState.state === Tone.State.Started && e.state !== Tone.State.Started){\n\t\t\telapsedSeconds += e.time - periodStartTime;\n\t\t} \n\t\tlastState = e;\n\t}.bind(this));\n\n\t//remove the temporary event\n\tthis._state.remove(tmpEvent);\n\n\t//return the ticks\n\treturn elapsedSeconds;\n};\n\n/**\n * Set the clock's ticks at the given time.\n * @param  {Ticks} ticks The tick value to set\n * @param  {Time} time  When to set the tick value\n * @return {Tone.TickSource}       this\n */\nTone.TickSource.prototype.setTicksAtTime = function(ticks, time){\n\ttime = this.toSeconds(time);\n\tthis._tickOffset.cancel(time);\n\tthis._tickOffset.add({\n\t\t\"time\" : time,\n\t\t\"ticks\" : ticks,\n\t\t\"seconds\" : this.frequency.getDurationOfTicks(ticks, time)\n\t});\n\treturn this;\n};\n\n/**\n *  Returns the scheduled state at the given time.\n *  @param  {Time}  time  The time to query.\n *  @return  {String}  The name of the state input in setStateAtTime.\n *  @example\n * source.start(\"+0.1\");\n * source.getStateAtTime(\"+0.1\"); //returns \"started\"\n */\nTone.TickSource.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\treturn this._state.getValueAtTime(time);\n};\n\n/**\n * Get the time of the given tick. The second argument\n * is when to test before. Since ticks can be set (with setTicksAtTime)\n * there may be multiple times for a given tick value. \n * @param  {Ticks} ticks The tick number.\n * @param  {Time=} before When to measure the tick value from. \n * @return {Time}       The time of the tick\n */\nTone.TickSource.prototype.getTimeOfTick = function(tick, before){\n\tbefore = Tone.defaultArg(before, this.now());\n\tvar offset = this._tickOffset.get(before);\n\tvar event = this._state.get(before);\n\tvar startTime = Math.max(offset.time, event.time);\n\tvar absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n\treturn this.frequency.getTimeOfTick(absoluteTicks);\n};\n\n/**\n * @callback forEachTickBetween\n * @param {Time} when\n * @param {Ticks} when\n */\n\n/**\n *  Invoke the callback event at all scheduled ticks between the \n *  start time and the end time\n *  @param  {Time}    startTime  The beginning of the search range\n *  @param  {Time}    endTime    The end of the search range\n *  @param  {ForEachCallback}  callback   The callback to invoke with each tick\n *  @return  {Tone.TickSource}    this\n */\nTone.TickSource.prototype.forEachTickBetween = function(startTime, endTime, callback){\n\n\t//only iterate through the sections where it is \"started\"\n\tvar lastStateEvent = this._state.get(startTime);\n\tthis._state.forEachBetween(startTime, endTime, function(event){\n\t\tif (lastStateEvent.state === Tone.State.Started && event.state !== Tone.State.Started){\n\t\t\tthis.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);\n\t\t}\n\t\tlastStateEvent = event;\n\t}.bind(this));\n\n\tstartTime = Math.max(lastStateEvent.time, startTime);\n\n\tif (lastStateEvent.state === Tone.State.Started && this._state){\n\t\t//figure out the difference between the frequency ticks and the \n\t\tvar startTicks = this.frequency.getTicksAtTime(startTime);\n\t\tvar ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n\t\tvar diff = startTicks - ticksAtStart;\n\t\tvar offset = diff % 1;\n\t\tif (offset !== 0){\n\t\t\toffset = 1 - offset;\n\t\t}\n\t\tvar nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n\t\tvar error = null;\n\t\twhile (nextTickTime < endTime && this._state){\n\t\t\ttry {\n\t\t\t\tcallback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n\t\t\t} catch (e){\n\t\t\t\terror = e;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (this._state){\n\t\t\t\tnextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n\t\t\t} \n\t\t}\n\t}\n\n\tif (error){\n\t\tthrow error;\n\t}\n\t\n\treturn this;\n};\n\n/**\n *  Clean up\n *  @returns {Tone.TickSource} this\n */\nTone.TickSource.prototype.dispose = function(){\n\tTone.Param.prototype.dispose.call(this);\n\tthis._state.dispose();\n\tthis._state = null;\n\tthis._tickOffset.dispose();\n\tthis._tickOffset = null;\n\tthis._writable(\"frequency\");\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\treturn this;\n};\n\nexport default Tone.TickSource;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/TickSource\";\nimport \"../core/TimelineState\";\nimport \"../core/Emitter\";\nimport \"../core/Context\";\n\n/**\n *  @class  A sample accurate clock which provides a callback at the given rate.\n *          While the callback is not sample-accurate (it is still susceptible to\n *          loose JS timing), the time passed in as the argument to the callback\n *          is precise. For most applications, it is better to use Tone.Transport\n *          instead of the Clock by itself since you can synchronize multiple callbacks.\n *\n * \t@constructor\n *  @extends {Tone.Emitter}\n * \t@param {function} callback The callback to be invoked with the time of the audio event\n * \t@param {Frequency} frequency The rate of the callback\n * \t@example\n * //the callback will be invoked approximately once a second\n * //and will print the time exactly once a second apart.\n * var clock = new Tone.Clock(function(time){\n * \tconsole.log(time);\n * }, 1);\n */\nTone.Clock = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"frequency\"], Tone.Clock);\n\tTone.Emitter.call(this);\n\n\t/**\n\t *  The callback function to invoke at the scheduled tick.\n\t *  @type  {Function}\n\t */\n\tthis.callback = options.callback;\n\n\t/**\n\t *  The next time the callback is scheduled.\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._nextTick = 0;\n\n\t/**\n\t *  The tick counter\n\t *  @type  {Tone.TickSource}\n\t *  @private\n\t */\n\tthis._tickSource = new Tone.TickSource(options.frequency);\n\n\t/**\n\t *  The last time the loop callback was invoked\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._lastUpdate = 0;\n\n\t/**\n\t *  The rate the callback function should be invoked.\n\t *  @type  {BPM}\n\t *  @signal\n\t */\n\tthis.frequency = this._tickSource.frequency;\n\tthis._readOnly(\"frequency\");\n\n\t/**\n\t *  The state timeline\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\t//add an initial state\n\tthis._state.setStateAtTime(Tone.State.Stopped, 0);\n\n\t/**\n\t *  The loop function bound to its context.\n\t *  This is necessary to remove the event in the end.\n\t *  @type {Function}\n\t *  @private\n\t */\n\tthis._boundLoop = this._loop.bind(this);\n\n\t//bind a callback to the worker thread\n\tthis.context.on(\"tick\", this._boundLoop);\n};\n\nTone.extend(Tone.Clock, Tone.Emitter);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Clock.defaults = {\n\t\"callback\" : Tone.noOp,\n\t\"frequency\" : 1,\n};\n\n/**\n *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.Clock#\n *  @name state\n */\nObject.defineProperty(Tone.Clock.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._state.getValueAtTime(this.now());\n\t}\n});\n\n/**\n *  Start the clock at the given time. Optionally pass in an offset\n *  of where to start the tick counter from.\n *  @param  {Time=}  time    The time the clock should start\n *  @param  {Ticks=}  offset  Where the tick counter starts counting from.\n *  @return  {Tone.Clock}  this\n */\nTone.Clock.prototype.start = function(time, offset){\n\t//make sure the context is started\n\tthis.context.resume();\n\t//start the loop\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) !== Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tthis._tickSource.start(time, offset);\n\t\tif (time < this._lastUpdate){\n\t\t\tthis.emit(\"start\", time, offset);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the clock. Stopping the clock resets the tick counter to 0.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.Clock} this\n *  @example\n * clock.stop();\n */\nTone.Clock.prototype.stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._state.cancel(time);\n\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\tthis._tickSource.stop(time);\n\tif (time < this._lastUpdate){\n\t\tthis.emit(\"stop\", time);\n\t}\n\treturn this;\n};\n\n/**\n *  Pause the clock. Pausing does not reset the tick counter.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.Clock} this\n */\nTone.Clock.prototype.pause = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Paused, time);\n\t\tthis._tickSource.pause(time);\n\t\tif (time < this._lastUpdate){\n\t\t\tthis.emit(\"pause\", time);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  The number of times the callback was invoked. Starts counting at 0\n *  and increments after the callback was invoked.\n *  @type {Ticks}\n */\nObject.defineProperty(Tone.Clock.prototype, \"ticks\", {\n\tget : function(){\n\t\treturn Math.ceil(this.getTicksAtTime(this.now()));\n\t},\n\tset : function(t){\n\t\tthis._tickSource.ticks = t;\n\t}\n});\n\n/**\n *  The time since ticks=0 that the Clock has been running. Accounts\n *  for tempo curves\n *  @type {Seconds}\n */\nObject.defineProperty(Tone.Clock.prototype, \"seconds\", {\n\tget : function(){\n\t\treturn this._tickSource.seconds;\n\t},\n\tset : function(s){\n\t\tthis._tickSource.seconds = s;\n\t}\n});\n\n/**\n *  Return the elapsed seconds at the given time.\n *  @param  {Time}  time  When to get the elapsed seconds\n *  @return  {Seconds}  The number of elapsed seconds\n */\nTone.Clock.prototype.getSecondsAtTime = function(time){\n\treturn this._tickSource.getSecondsAtTime(time);\n};\n\n/**\n * Set the clock's ticks at the given time.\n * @param  {Ticks} ticks The tick value to set\n * @param  {Time} time  When to set the tick value\n * @return {Tone.Clock}       this\n */\nTone.Clock.prototype.setTicksAtTime = function(ticks, time){\n\tthis._tickSource.setTicksAtTime(ticks, time);\n\treturn this;\n};\n\n/**\n * Get the clock's ticks at the given time.\n * @param  {Time} time  When to get the tick value\n * @return {Ticks}       The tick value at the given time.\n */\nTone.Clock.prototype.getTicksAtTime = function(time){\n\treturn this._tickSource.getTicksAtTime(time);\n};\n\n/**\n * Get the time of the next tick\n * @param  {Ticks} ticks The tick number.\n * @param  {Time} before \n * @return {Tone.Clock}       this\n */\nTone.Clock.prototype.nextTickTime = function(offset, when){\n\twhen = this.toSeconds(when);\n\tvar currentTick = this.getTicksAtTime(when);\n\treturn this._tickSource.getTimeOfTick(currentTick+offset, when);\n};\n\n/**\n *  The scheduling loop.\n *  @private\n */\nTone.Clock.prototype._loop = function(){\n\n\tvar startTime = this._lastUpdate;\n\tvar endTime = this.now();\n\tthis._lastUpdate = endTime;\n\n\tif (startTime !== endTime){\n\t\t//the state change events\n\t\tthis._state.forEachBetween(startTime, endTime, function(e){\n\t\t\tswitch (e.state){\n\t\t\t\tcase Tone.State.Started : \n\t\t\t\t\tvar offset = this._tickSource.getTicksAtTime(e.time);\n\t\t\t\t\tthis.emit(\"start\", e.time, offset);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tone.State.Stopped : \n\t\t\t\t\tif (e.time !== 0){\n\t\t\t\t\t\tthis.emit(\"stop\", e.time);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tone.State.Paused :\n\t\t\t\t\tthis.emit(\"pause\", e.time); \n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}.bind(this));\n\t\t//the tick callbacks\n\t\tthis._tickSource.forEachTickBetween(startTime, endTime, function(time, ticks){\n\t\t\tthis.callback(time, ticks);\n\t\t}.bind(this));\n\t}\n};\n\n/**\n *  Returns the scheduled state at the given time.\n *  @param  {Time}  time  The time to query.\n *  @return  {String}  The name of the state input in setStateAtTime.\n *  @example\n * clock.start(\"+0.1\");\n * clock.getStateAtTime(\"+0.1\"); //returns \"started\"\n */\nTone.Clock.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\treturn this._state.getValueAtTime(time);\n};\n\n/**\n *  Clean up\n *  @returns {Tone.Clock} this\n */\nTone.Clock.prototype.dispose = function(){\n\tTone.Emitter.prototype.dispose.call(this);\n\tthis.context.off(\"tick\", this._boundLoop);\n\tthis._writable(\"frequency\");\n\tthis._tickSource.dispose();\n\tthis._tickSource = null;\n\tthis.frequency = null;\n\tthis._boundLoop = null;\n\tthis._nextTick = Infinity;\n\tthis.callback = null;\n\tthis._state.dispose();\n\tthis._state = null;\n};\n\nexport default Tone.Clock;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\n\n/**\n *  @class Similar to Tone.Timeline, but all events represent\n *         intervals with both \"time\" and \"duration\" times. The\n *         events are placed in a tree structure optimized\n *         for querying an intersection point with the timeline\n *         events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n *         to represent the data.\n *  @extends {Tone}\n */\nTone.IntervalTimeline = function(){\n\n\tTone.call(this);\n\n\t/**\n\t *  The root node of the inteval tree\n\t *  @type  {IntervalNode}\n\t *  @private\n\t */\n\tthis._root = null;\n\n\t/**\n\t *  Keep track of the length of the timeline.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._length = 0;\n};\n\nTone.extend(Tone.IntervalTimeline);\n\n/**\n *  The event to add to the timeline. All events must\n *  have a time and duration value\n *  @param  {Object}  event  The event to add to the timeline\n *  @return  {Tone.IntervalTimeline}  this\n */\nTone.IntervalTimeline.prototype.add = function(event){\n\tif (Tone.isUndef(event.time) || Tone.isUndef(event.duration)){\n\t\tthrow new Error(\"Tone.IntervalTimeline: events must have time and duration parameters\");\n\t}\n\tevent.time = event.time.valueOf();\n\tvar node = new IntervalNode(event.time, event.time + event.duration, event);\n\tif (this._root === null){\n\t\tthis._root = node;\n\t} else {\n\t\tthis._root.insert(node);\n\t}\n\tthis._length++;\n\t// Restructure tree to be balanced\n\twhile (node !== null){\n\t\tnode.updateHeight();\n\t\tnode.updateMax();\n\t\tthis._rebalance(node);\n\t\tnode = node.parent;\n\t}\n\treturn this;\n};\n\n/**\n *  Remove an event from the timeline.\n *  @param  {Object}  event  The event to remove from the timeline\n *  @return  {Tone.IntervalTimeline}  this\n */\nTone.IntervalTimeline.prototype.remove = function(event){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.search(event.time, results);\n\t\tfor (var i = 0; i < results.length; i++){\n\t\t\tvar node = results[i];\n\t\t\tif (node.event === event){\n\t\t\t\tthis._removeNode(node);\n\t\t\t\tthis._length--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  The number of items in the timeline.\n *  @type {Number}\n *  @memberOf Tone.IntervalTimeline#\n *  @name length\n *  @readOnly\n */\nObject.defineProperty(Tone.IntervalTimeline.prototype, \"length\", {\n\tget : function(){\n\t\treturn this._length;\n\t}\n});\n\n/**\n *  Remove events whose time time is after the given time\n *  @param  {Number}  time  The time to query.\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.cancel = function(after){\n\tthis.forEachFrom(after, function(event){\n\t\tthis.remove(event);\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n *  Set the root node as the given node\n *  @param {IntervalNode} node\n *  @private\n */\nTone.IntervalTimeline.prototype._setRoot = function(node){\n\tthis._root = node;\n\tif (this._root !== null){\n\t\tthis._root.parent = null;\n\t}\n};\n\n/**\n *  Replace the references to the node in the node's parent\n *  with the replacement node.\n *  @param  {IntervalNode}  node\n *  @param  {IntervalNode}  replacement\n *  @private\n */\nTone.IntervalTimeline.prototype._replaceNodeInParent = function(node, replacement){\n\tif (node.parent !== null){\n\t\tif (node.isLeftChild()){\n\t\t\tnode.parent.left = replacement;\n\t\t} else {\n\t\t\tnode.parent.right = replacement;\n\t\t}\n\t\tthis._rebalance(node.parent);\n\t} else {\n\t\tthis._setRoot(replacement);\n\t}\n};\n\n/**\n *  Remove the node from the tree and replace it with\n *  a successor which follows the schema.\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._removeNode = function(node){\n\tif (node.left === null && node.right === null){\n\t\tthis._replaceNodeInParent(node, null);\n\t} else if (node.right === null){\n\t\tthis._replaceNodeInParent(node, node.left);\n\t} else if (node.left === null){\n\t\tthis._replaceNodeInParent(node, node.right);\n\t} else {\n\t\tvar balance = node.getBalance();\n\t\tvar replacement, temp;\n\t\tif (balance > 0){\n\t\t\tif (node.left.right === null){\n\t\t\t\treplacement = node.left;\n\t\t\t\treplacement.right = node.right;\n\t\t\t\ttemp = replacement;\n\t\t\t} else {\n\t\t\t\treplacement = node.left.right;\n\t\t\t\twhile (replacement.right !== null){\n\t\t\t\t\treplacement = replacement.right;\n\t\t\t\t}\n\t\t\t\treplacement.parent.right = replacement.left;\n\t\t\t\ttemp = replacement.parent;\n\t\t\t\treplacement.left = node.left;\n\t\t\t\treplacement.right = node.right;\n\t\t\t}\n\t\t} else if (node.right.left === null){\n\t\t\treplacement = node.right;\n\t\t\treplacement.left = node.left;\n\t\t\ttemp = replacement;\n\t\t} else {\n\t\t\treplacement = node.right.left;\n\t\t\twhile (replacement.left !== null){\n\t\t\t\treplacement = replacement.left;\n\t\t\t}\n\t\t\treplacement.parent.left = replacement.right;\n\t\t\ttemp = replacement.parent;\n\t\t\treplacement.left = node.left;\n\t\t\treplacement.right = node.right;\n\t\t}\n\t\tif (node.parent !== null){\n\t\t\tif (node.isLeftChild()){\n\t\t\t\tnode.parent.left = replacement;\n\t\t\t} else {\n\t\t\t\tnode.parent.right = replacement;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setRoot(replacement);\n\t\t}\n\t\t// this._replaceNodeInParent(node, replacement);\n\t\tthis._rebalance(temp);\n\t}\n\tnode.dispose();\n};\n\n/**\n *  Rotate the tree to the left\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._rotateLeft = function(node){\n\tvar parent = node.parent;\n\tvar isLeftChild = node.isLeftChild();\n\n\t// Make node.right the new root of this sub tree (instead of node)\n\tvar pivotNode = node.right;\n\tnode.right = pivotNode.left;\n\tpivotNode.left = node;\n\n\tif (parent !== null){\n\t\tif (isLeftChild){\n\t\t\tparent.left = pivotNode;\n\t\t} else {\n\t\t\tparent.right = pivotNode;\n\t\t}\n\t} else {\n\t\tthis._setRoot(pivotNode);\n\t}\n};\n\n/**\n *  Rotate the tree to the right\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._rotateRight = function(node){\n\tvar parent = node.parent;\n\tvar isLeftChild = node.isLeftChild();\n\n\t// Make node.left the new root of this sub tree (instead of node)\n\tvar pivotNode = node.left;\n\tnode.left = pivotNode.right;\n\tpivotNode.right = node;\n\n\tif (parent !== null){\n\t\tif (isLeftChild){\n\t\t\tparent.left = pivotNode;\n\t\t} else {\n\t\t\tparent.right = pivotNode;\n\t\t}\n\t} else {\n\t\tthis._setRoot(pivotNode);\n\t}\n};\n\n/**\n *  Balance the BST\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._rebalance = function(node){\n\tvar balance = node.getBalance();\n\tif (balance > 1){\n\t\tif (node.left.getBalance() < 0){\n\t\t\tthis._rotateLeft(node.left);\n\t\t} else {\n\t\t\tthis._rotateRight(node);\n\t\t}\n\t} else if (balance < -1){\n\t\tif (node.right.getBalance() > 0){\n\t\t\tthis._rotateRight(node.right);\n\t\t} else {\n\t\t\tthis._rotateLeft(node);\n\t\t}\n\t}\n};\n\n/**\n *  Get an event whose time and duration span the give time. Will\n *  return the match whose \"time\" value is closest to the given time.\n *  @param  {Object}  event  The event to add to the timeline\n *  @return  {Object}  The event which spans the desired time\n */\nTone.IntervalTimeline.prototype.get = function(time){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.search(time, results);\n\t\tif (results.length > 0){\n\t\t\tvar max = results[0];\n\t\t\tfor (var i = 1; i < results.length; i++){\n\t\t\t\tif (results[i].low > max.low){\n\t\t\t\t\tmax = results[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn max.event;\n\t\t}\n\t}\n\treturn null;\n};\n\n/**\n *  Iterate over everything in the timeline.\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.forEach = function(callback){\n\tif (this._root !== null){\n\t\tvar allNodes = [];\n\t\tthis._root.traverse(function(node){\n\t\t\tallNodes.push(node);\n\t\t});\n\t\tfor (var i = 0; i < allNodes.length; i++){\n\t\t\tvar ev = allNodes[i].event;\n\t\t\tif (ev){\n\t\t\t\tcallback(ev);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array in which the given time\n *  overlaps with the time and duration time of the event.\n *  @param  {Number}  time The time to check if items are overlapping\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.forEachAtTime = function(time, callback){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.search(time, results);\n\t\tfor (var i = results.length - 1; i >= 0; i--){\n\t\t\tvar ev = results[i].event;\n\t\t\tif (ev){\n\t\t\t\tcallback(ev);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array in which the time is greater\n *  than or equal to the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.forEachFrom = function(time, callback){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.searchAfter(time, results);\n\t\tfor (var i = results.length - 1; i >= 0; i--){\n\t\t\tvar ev = results[i].event;\n\t\t\tcallback(ev);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up\n *  @return  {Tone.IntervalTimeline}  this\n */\nTone.IntervalTimeline.prototype.dispose = function(){\n\tvar allNodes = [];\n\tif (this._root !== null){\n\t\tthis._root.traverse(function(node){\n\t\t\tallNodes.push(node);\n\t\t});\n\t}\n\tfor (var i = 0; i < allNodes.length; i++){\n\t\tallNodes[i].dispose();\n\t}\n\tallNodes = null;\n\tthis._root = null;\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tINTERVAL NODE HELPER\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Represents a node in the binary search tree, with the addition\n *  of a \"high\" value which keeps track of the highest value of\n *  its children.\n *  References:\n *  https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n *  http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n *  @param {Number} low\n *  @param {Number} high\n *  @private\n */\nvar IntervalNode = function(low, high, event){\n\t//the event container\n\tthis.event = event;\n\t//the low value\n\tthis.low = low;\n\t//the high value\n\tthis.high = high;\n\t//the high value for this and all child nodes\n\tthis.max = this.high;\n\t//the nodes to the left\n\tthis._left = null;\n\t//the nodes to the right\n\tthis._right = null;\n\t//the parent node\n\tthis.parent = null;\n\t//the number of child nodes\n\tthis.height = 0;\n};\n\n/**\n *  Insert a node into the correct spot in the tree\n *  @param  {IntervalNode}  node\n */\nIntervalNode.prototype.insert = function(node){\n\tif (node.low <= this.low){\n\t\tif (this.left === null){\n\t\t\tthis.left = node;\n\t\t} else {\n\t\t\tthis.left.insert(node);\n\t\t}\n\t} else if (this.right === null){\n\t\tthis.right = node;\n\t} else {\n\t\tthis.right.insert(node);\n\t}\n};\n\n/**\n *  Search the tree for nodes which overlap\n *  with the given point\n *  @param  {Number}  point  The point to query\n *  @param  {Array}  results  The array to put the results\n */\nIntervalNode.prototype.search = function(point, results){\n\t// If p is to the right of the rightmost point of any interval\n\t// in this node and all children, there won't be any matches.\n\tif (point > this.max){\n\t\treturn;\n\t}\n\t// Search left children\n\tif (this.left !== null){\n\t\tthis.left.search(point, results);\n\t}\n\t// Check this node\n\tif (this.low <= point && this.high > point){\n\t\tresults.push(this);\n\t}\n\t// If p is to the left of the time of this interval,\n\t// then it can't be in any child to the right.\n\tif (this.low > point){\n\t\treturn;\n\t}\n\t// Search right children\n\tif (this.right !== null){\n\t\tthis.right.search(point, results);\n\t}\n};\n\n/**\n *  Search the tree for nodes which are less\n *  than the given point\n *  @param  {Number}  point  The point to query\n *  @param  {Array}  results  The array to put the results\n */\nIntervalNode.prototype.searchAfter = function(point, results){\n\t// Check this node\n\tif (this.low >= point){\n\t\tresults.push(this);\n\t\tif (this.left !== null){\n\t\t\tthis.left.searchAfter(point, results);\n\t\t}\n\t}\n\t// search the right side\n\tif (this.right !== null){\n\t\tthis.right.searchAfter(point, results);\n\t}\n};\n\n/**\n *  Invoke the callback on this element and both it's branches\n *  @param  {Function}  callback\n */\nIntervalNode.prototype.traverse = function(callback){\n\tcallback(this);\n\tif (this.left !== null){\n\t\tthis.left.traverse(callback);\n\t}\n\tif (this.right !== null){\n\t\tthis.right.traverse(callback);\n\t}\n};\n\n/**\n *  Update the height of the node\n */\nIntervalNode.prototype.updateHeight = function(){\n\tif (this.left !== null && this.right !== null){\n\t\tthis.height = Math.max(this.left.height, this.right.height) + 1;\n\t} else if (this.right !== null){\n\t\tthis.height = this.right.height + 1;\n\t} else if (this.left !== null){\n\t\tthis.height = this.left.height + 1;\n\t} else {\n\t\tthis.height = 0;\n\t}\n};\n\n/**\n *  Update the height of the node\n */\nIntervalNode.prototype.updateMax = function(){\n\tthis.max = this.high;\n\tif (this.left !== null){\n\t\tthis.max = Math.max(this.max, this.left.max);\n\t}\n\tif (this.right !== null){\n\t\tthis.max = Math.max(this.max, this.right.max);\n\t}\n};\n\n/**\n *  The balance is how the leafs are distributed on the node\n *  @return  {Number}  Negative numbers are balanced to the right\n */\nIntervalNode.prototype.getBalance = function(){\n\tvar balance = 0;\n\tif (this.left !== null && this.right !== null){\n\t\tbalance = this.left.height - this.right.height;\n\t} else if (this.left !== null){\n\t\tbalance = this.left.height + 1;\n\t} else if (this.right !== null){\n\t\tbalance = -(this.right.height + 1);\n\t}\n\treturn balance;\n};\n\n/**\n *  @returns {Boolean} true if this node is the left child\n *  of its parent\n */\nIntervalNode.prototype.isLeftChild = function(){\n\treturn this.parent !== null && this.parent.left === this;\n};\n\n/**\n *  get/set the left node\n *  @type {IntervalNode}\n */\nObject.defineProperty(IntervalNode.prototype, \"left\", {\n\tget : function(){\n\t\treturn this._left;\n\t},\n\tset : function(node){\n\t\tthis._left = node;\n\t\tif (node !== null){\n\t\t\tnode.parent = this;\n\t\t}\n\t\tthis.updateHeight();\n\t\tthis.updateMax();\n\t}\n});\n\n/**\n *  get/set the right node\n *  @type {IntervalNode}\n */\nObject.defineProperty(IntervalNode.prototype, \"right\", {\n\tget : function(){\n\t\treturn this._right;\n\t},\n\tset : function(node){\n\t\tthis._right = node;\n\t\tif (node !== null){\n\t\t\tnode.parent = this;\n\t\t}\n\t\tthis.updateHeight();\n\t\tthis.updateMax();\n\t}\n});\n\n/**\n *  null out references.\n */\nIntervalNode.prototype.dispose = function(){\n\tthis.parent = null;\n\tthis._left = null;\n\tthis._right = null;\n\tthis.event = null;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tEND INTERVAL NODE HELPER\n///////////////////////////////////////////////////////////////////////////\n\nexport default Tone.IntervalTimeline;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/TransportTime\";\n\n/**\n *  @class Tone.Ticks is a primitive type for encoding Time values.\n *         Tone.Ticks can be constructed with or without the `new` keyword. Tone.Ticks can be passed\n *         into the parameter of any method which takes time as an argument.\n *  @constructor\n *  @extends {Tone.TransportTime}\n *  @param  {String|Number}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * var t = Tone.Ticks(\"4n\");//a quarter note\n */\nTone.Ticks = function(val, units){\n\tif (this instanceof Tone.Ticks){\n\n\t\tTone.TransportTime.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Ticks(val, units);\n\t}\n};\n\nTone.extend(Tone.Ticks, Tone.TransportTime);\n\n/**\n *  The default units if none are given.\n *  @type {String}\n *  @private\n */\nTone.Ticks.prototype._defaultUnits = \"i\";\n\n/**\n * Get the current time in the given units\n * @return {Ticks}\n * @private\n */\nTone.Ticks.prototype._now = function(){\n\treturn Tone.Transport.ticks;\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.Ticks.prototype._beatsToUnits = function(beats){\n\treturn this._getPPQ() * beats;\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.Ticks.prototype._secondsToUnits = function(seconds){\n\treturn Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.Ticks.prototype._ticksToUnits = function(ticks){\n\treturn ticks;\n};\n\n/**\n *  Return the time in ticks\n *  @return  {Ticks}\n */\nTone.Ticks.prototype.toTicks = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the time in ticks\n *  @return  {Ticks}\n */\nTone.Ticks.prototype.toSeconds = function(){\n\treturn (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n};\n\nexport default Tone.Ticks;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Ticks\";\n\n/**\n *  @class Tone.TransportEvent is an internal class used by (Tone.Transport)[Transport]\n *         to schedule events. Do no invoke this class directly, it is\n *         handled from within Tone.Transport.\n *  @extends {Tone}\n *  @param {Object} options\n */\nTone.TransportEvent = function(Transport, options){\n\n\toptions = Tone.defaultArg(options, Tone.TransportEvent.defaults);\n\tTone.call(this);\n\n\t/**\n\t * Reference to the Transport that created it\n\t * @type {Tone.Transport}\n\t */\n\tthis.Transport = Transport;\n\n\t/**\n\t * The unique id of the event\n\t * @type {Number}\n\t */\n\tthis.id = Tone.TransportEvent._eventId++;\n\n\t/**\n\t * The time the event starts\n\t * @type {Ticks}\n\t */\n\tthis.time = Tone.Ticks(options.time);\n\n\t/**\n\t * The callback to invoke\n\t * @type {Function}\n\t */\n\tthis.callback = options.callback;\n\n\t/**\n\t * If the event should be removed after being created.\n\t * @type {Boolean}\n\t * @private\n\t */\n\tthis._once = options.once;\n};\n\nTone.extend(Tone.TransportEvent);\n\n/**\n * The defaults\n * @static\n * @type {Object}\n */\nTone.TransportEvent.defaults = {\n\t\"once\" : false,\n\t\"callback\" : Tone.noOp,\n};\n\n/**\n * Current ID counter\n * @private\n * @static\n * @type {Number}\n */\nTone.TransportEvent._eventId = 0;\n\n/**\n * Invoke the event callback.\n * @param  {Time} time  The AudioContext time in seconds of the event\n */\nTone.TransportEvent.prototype.invoke = function(time){\n\tif (this.callback){\n\t\tthis.callback(time);\n\t\tif (this._once && this.Transport){\n\t\t\tthis.Transport.clear(this.id);\n\t\t}\n\t}\n};\n\n/**\n * Clean up\n * @return {Tone.TransportEvent} this\n */\nTone.TransportEvent.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis.Transport = null;\n\tthis.callback = null;\n\tthis.time = null;\n\treturn this;\n};\n\nexport default Tone.TransportEvent;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/TransportEvent\";\nimport \"../type/Ticks\";\n\n/**\n *  @class Tone.TransportRepeatEvent is an internal class used by Tone.Transport\n *         to schedule repeat events. This class should not be instantiated directly.\n *  @extends {Tone.TransportEvent}\n *  @param {Object} options\n */\nTone.TransportRepeatEvent = function(Transport, options){\n\n\tTone.TransportEvent.call(this, Transport, options);\n\toptions = Tone.defaultArg(options, Tone.TransportRepeatEvent.defaults);\n\n\t/**\n\t * When the event should stop repeating\n\t * @type {Ticks}\n\t * @private\n\t */\n\tthis.duration = Tone.Ticks(options.duration);\n\n\t/**\n\t * The interval of the repeated event\n\t * @type {Ticks}\n\t * @private\n\t */\n\tthis._interval = Tone.Ticks(options.interval);\n\n\t/**\n\t * The ID of the current timeline event\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._currentId = -1;\n\n\t/**\n\t * The ID of the next timeline event\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._nextId = -1;\n\n\t/**\n\t  * The time of the next event\n\t  * @type {Ticks}\n\t  * @private\n\t  */\n\tthis._nextTick = this.time;\n\n\t/**\n\t * a reference to the bound start method\n\t * @type {Function}\n\t * @private\n\t */\n\tthis._boundRestart = this._restart.bind(this);\n\tthis.Transport.on(\"start loopStart\", this._boundRestart);\n\tthis._restart();\n};\n\nTone.extend(Tone.TransportRepeatEvent, Tone.TransportEvent);\n\n/**\n * The defaults\n * @static\n * @type {Object}\n */\nTone.TransportRepeatEvent.defaults = {\n\t\"duration\" : Infinity,\n\t\"interval\" : 1\n};\n\n/**\n * Invoke the callback. Returns the tick time which\n * the next event should be scheduled at.\n * @param  {Number} time  The AudioContext time in seconds of the event\n */\nTone.TransportRepeatEvent.prototype.invoke = function(time){\n\t//create more events if necessary\n\tthis._createEvents(time);\n\t//call the super class\n\tTone.TransportEvent.prototype.invoke.call(this, time);\n};\n\n/**\n * Push more events onto the timeline to keep up with the position of the timeline\n * @private\n */\nTone.TransportRepeatEvent.prototype._createEvents = function(time){\n\t// schedule the next event\n\tvar ticks = this.Transport.getTicksAtTime(time);\n\tif (ticks >= this.time && ticks >= this._nextTick &&\n\tthis._nextTick + this._interval < this.time + this.duration){\n\t\tthis._nextTick += this._interval;\n\t\tthis._currentId = this._nextId;\n\t\tthis._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n\t}\n};\n\n/**\n * Push more events onto the timeline to keep up with the position of the timeline\n * @private\n */\nTone.TransportRepeatEvent.prototype._restart = function(time){\n\tthis.Transport.clear(this._currentId);\n\tthis.Transport.clear(this._nextId);\n\tthis._nextTick = this.time;\n\tvar ticks = this.Transport.getTicksAtTime(time);\n\tif (ticks > this.time){\n\t\tthis._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n\t}\n\tthis._currentId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n\tthis._nextTick += this._interval;\n\tthis._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n};\n\n/**\n * Clean up\n * @return {Tone.TransportRepeatEvent} this\n */\nTone.TransportRepeatEvent.prototype.dispose = function(){\n\tthis.Transport.clear(this._currentId);\n\tthis.Transport.clear(this._nextId);\n\tthis.Transport.off(\"start loopStart\", this._boundRestart);\n\tthis._boundCreateEvents = null;\n\tTone.TransportEvent.prototype.dispose.call(this);\n\tthis.duration = null;\n\tthis._interval = null;\n\treturn this;\n};\n\nexport default Tone.TransportRepeatEvent;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Clock\";\nimport \"../type/Type\";\nimport \"../core/Timeline\";\nimport \"../core/Emitter\";\nimport \"../core/Gain\";\nimport \"../core/IntervalTimeline\";\nimport \"../core/TransportRepeatEvent\";\nimport \"../core/TransportEvent\";\n\n/**\n *  @class  Transport for timing musical events.\n *          Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n *          Tone.Transport timing events pass in the exact time of the scheduled event\n *          in the argument of the callback function. Pass that time value to the object\n *          you're scheduling. <br><br>\n *          A single transport is created for you when the library is initialized.\n *          <br><br>\n *          The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n *          called with the time of that event as the argument.\n *\n *  @extends {Tone.Emitter}\n *  @singleton\n *  @example\n * //repeated event every 8th note\n * Tone.Transport.scheduleRepeat(function(time){\n * \t//do something with the time\n * }, \"8n\");\n *  @example\n * //schedule an event on the 16th measure\n * Tone.Transport.schedule(function(time){\n * \t//do something with the time\n * }, \"16:0:0\");\n */\nTone.Transport = function(){\n\n\tTone.Emitter.call(this);\n\n\tTone.getContext(function(){\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tLOOPING\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t * \tIf the transport loops or not.\n\t\t *  @type {boolean}\n\t\t */\n\t\tthis.loop = false;\n\n\t\t/**\n\t\t * \tThe loop start position in ticks\n\t\t *  @type {Ticks}\n\t\t *  @private\n\t\t */\n\t\tthis._loopStart = 0;\n\n\t\t/**\n\t\t * \tThe loop end position in ticks\n\t\t *  @type {Ticks}\n\t\t *  @private\n\t\t */\n\t\tthis._loopEnd = 0;\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tCLOCK/TEMPO\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  Pulses per quarter is the number of ticks per quarter note.\n\t\t *  @private\n\t\t *  @type  {Number}\n\t\t */\n\t\tthis._ppq = TransportConstructor.defaults.PPQ;\n\n\t\t/**\n\t\t *  watches the main oscillator for timing ticks\n\t\t *  initially starts at 120bpm\n\t\t *  @private\n\t\t *  @type {Tone.Clock}\n\t\t */\n\t\tthis._clock = new Tone.Clock({\n\t\t\t\"callback\" : this._processTick.bind(this),\n\t\t\t\"frequency\" : 0,\n\t\t});\n\n\t\tthis._bindClockEvents();\n\n\t\t/**\n\t\t *  The Beats Per Minute of the Transport.\n\t\t *  @type {BPM}\n\t\t *  @signal\n\t\t *  @example\n\t\t * Tone.Transport.bpm.value = 80;\n\t\t * //ramp the bpm to 120 over 10 seconds\n\t\t * Tone.Transport.bpm.rampTo(120, 10);\n\t\t */\n\t\tthis.bpm = this._clock.frequency;\n\t\tthis.bpm._toUnits = this._toUnits.bind(this);\n\t\tthis.bpm._fromUnits = this._fromUnits.bind(this);\n\t\tthis.bpm.units = Tone.Type.BPM;\n\t\tthis.bpm.value = TransportConstructor.defaults.bpm;\n\t\tthis._readOnly(\"bpm\");\n\n\t\t/**\n\t\t *  The time signature, or more accurately the numerator\n\t\t *  of the time signature over a denominator of 4.\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._timeSignature = TransportConstructor.defaults.timeSignature;\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tTIMELINE EVENTS\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  All the events in an object to keep track by ID\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t\tthis._scheduledEvents = {};\n\n\t\t/**\n\t\t * \tThe scheduled events.\n\t\t *  @type {Tone.Timeline}\n\t\t *  @private\n\t\t */\n\t\tthis._timeline = new Tone.Timeline();\n\n\t\t/**\n\t\t *  Repeated events\n\t\t *  @type {Array}\n\t\t *  @private\n\t\t */\n\t\tthis._repeatedEvents = new Tone.IntervalTimeline();\n\n\t\t/**\n\t\t *  All of the synced Signals\n\t\t *  @private\n\t\t *  @type {Array}\n\t\t */\n\t\tthis._syncedSignals = [];\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tSWING\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  The subdivision of the swing\n\t\t *  @type  {Ticks}\n\t\t *  @private\n\t\t */\n\t\tthis._swingTicks = TransportConstructor.defaults.PPQ / 2; //8n\n\n\t\t/**\n\t\t *  The swing amount\n\t\t *  @type {NormalRange}\n\t\t *  @private\n\t\t */\n\t\tthis._swingAmount = 0;\n\n\t\t//transport is a singleton so it adds itself to the context\n\t\tthis.context.transport = this;\n\n\t}.bind(this));\n};\n\nTone.extend(Tone.Transport, Tone.Emitter);\n\n/**\n *  the defaults\n *  @type {Object}\n *  @const\n *  @static\n */\nTone.Transport.defaults = {\n\t\"bpm\" : 120,\n\t\"swing\" : 0,\n\t\"swingSubdivision\" : \"8n\",\n\t\"timeSignature\" : 4,\n\t\"loopStart\" : 0,\n\t\"loopEnd\" : \"4m\",\n\t\"PPQ\" : 192\n};\n\n/**\n * Is an instanceof Tone.Transport\n * @type {Boolean}\n */\nTone.Transport.prototype.isTransport = true;\n\n///////////////////////////////////////////////////////////////////////////////\n//\tTICKS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  called on every tick\n *  @param   {number} tickTime clock relative tick time\n *  @private\n */\nTone.Transport.prototype._processTick = function(tickTime, ticks){\n\t//handle swing\n\tif (this._swingAmount > 0 &&\n\t\tticks % this._ppq !== 0 && //not on a downbeat\n\t\tticks % (this._swingTicks * 2) !== 0){\n\t\t//add some swing\n\t\tvar progress = (ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);\n\t\tvar amount = Math.sin((progress) * Math.PI) * this._swingAmount;\n\t\ttickTime += Tone.Ticks(this._swingTicks * 2/3).toSeconds() * amount;\n\t}\n\t//do the loop test\n\tif (this.loop){\n\t\tif (ticks >= this._loopEnd){\n\t\t\tthis.emit(\"loopEnd\", tickTime);\n\t\t\tthis._clock.setTicksAtTime(this._loopStart, tickTime);\n\t\t\tticks = this._loopStart;\n\t\t\tthis.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n\t\t\tthis.emit(\"loop\", tickTime);\n\t\t}\n\t}\n\t//invoke the timeline events scheduled on this tick\n\tthis._timeline.forEachAtTime(ticks, function(event){\n\t\tevent.invoke(tickTime);\n\t});\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSCHEDULABLE EVENTS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  Schedule an event along the timeline.\n *  @param {Function} callback The callback to be invoked at the time.\n *  @param {TransportTime}  time The time to invoke the callback at.\n *  @return {Number} The id of the event which can be used for canceling the event.\n *  @example\n * //trigger the callback when the Transport reaches the desired time\n * Tone.Transport.schedule(function(time){\n * \tenvelope.triggerAttack(time);\n * }, \"128i\");\n */\nTone.Transport.prototype.schedule = function(callback, time){\n\tvar event = new Tone.TransportEvent(this, {\n\t\t\"time\" : Tone.TransportTime(time),\n\t\t\"callback\" : callback\n\t});\n\treturn this._addEvent(event, this._timeline);\n};\n\n/**\n *  Schedule a repeated event along the timeline. The event will fire\n *  at the `interval` starting at the `startTime` and for the specified\n *  `duration`.\n *  @param  {Function}  callback   The callback to invoke.\n *  @param  {Time}    interval   The duration between successive\n *                               callbacks. Must be a positive number.\n *  @param  {TransportTime=}    startTime  When along the timeline the events should\n *                               start being invoked.\n *  @param {Time} [duration=Infinity] How long the event should repeat.\n *  @return  {Number}    The ID of the scheduled event. Use this to cancel\n *                           the event.\n *  @example\n * //a callback invoked every eighth note after the first measure\n * Tone.Transport.scheduleRepeat(callback, \"8n\", \"1m\");\n */\nTone.Transport.prototype.scheduleRepeat = function(callback, interval, startTime, duration){\n\tvar event = new Tone.TransportRepeatEvent(this, {\n\t\t\"callback\" : callback,\n\t\t\"interval\" : Tone.Time(interval),\n\t\t\"time\" : Tone.TransportTime(startTime),\n\t\t\"duration\" : Tone.Time(Tone.defaultArg(duration, Infinity)),\n\t});\n\t//kick it off if the Transport is started\n\treturn this._addEvent(event, this._repeatedEvents);\n};\n\n/**\n *  Schedule an event that will be removed after it is invoked. \n *  @param {Function} callback The callback to invoke once.\n *  @param {TransportTime} time The time the callback should be invoked.\n *  @returns {Number} The ID of the scheduled event.\n */\nTone.Transport.prototype.scheduleOnce = function(callback, time){\n\tvar event = new Tone.TransportEvent(this, {\n\t\t\"time\" : Tone.TransportTime(time),\n\t\t\"callback\" : callback,\n\t\t\"once\" : true\n\t});\n\treturn this._addEvent(event, this._timeline);\n};\n\n/**\n *  Clear the passed in event id from the timeline\n *  @param {Number} eventId The id of the event.\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.clear = function(eventId){\n\tif (this._scheduledEvents.hasOwnProperty(eventId)){\n\t\tvar item = this._scheduledEvents[eventId.toString()];\n\t\titem.timeline.remove(item.event);\n\t\titem.event.dispose();\n\t\tdelete this._scheduledEvents[eventId.toString()];\n\t}\n\treturn this;\n};\n\n/**\n * Add an event to the correct timeline. Keep track of the\n * timeline it was added to.\n * @param {Tone.TransportEvent}\tevent\n * @param {Tone.Timeline} timeline\n * @returns {Number} the event id which was just added\n * @private\n */\nTone.Transport.prototype._addEvent = function(event, timeline){\n\tthis._scheduledEvents[event.id.toString()] = {\n\t\t\"event\" : event,\n\t\t\"timeline\" : timeline\n\t};\n\ttimeline.add(event);\n\treturn event.id;\n};\n\n/**\n *  Remove scheduled events from the timeline after\n *  the given time. Repeated events will be removed\n *  if their startTime is after the given time\n *  @param {TransportTime} [after=0] Clear all events after\n *                          this time.\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.cancel = function(after){\n\tafter = Tone.defaultArg(after, 0);\n\tafter = this.toTicks(after);\n\tthis._timeline.forEachFrom(after, function(event){\n\t\tthis.clear(event.id);\n\t}.bind(this));\n\tthis._repeatedEvents.forEachFrom(after, function(event){\n\t\tthis.clear(event.id);\n\t}.bind(this));\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSTART/STOP/PAUSE\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  Bind start/stop/pause events from the clock and emit them.\n *  @private\n */\nTone.Transport.prototype._bindClockEvents = function(){\n\tthis._clock.on(\"start\", function(time, offset){\n\t\toffset = Tone.Ticks(offset).toSeconds();\n\t\tthis.emit(\"start\", time, offset);\n\t}.bind(this));\n\n\tthis._clock.on(\"stop\", function(time){\n\t\tthis.emit(\"stop\", time);\n\t}.bind(this));\n\n\tthis._clock.on(\"pause\", function(time){\n\t\tthis.emit(\"pause\", time);\n\t}.bind(this));\n};\n\n/**\n *  Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.Transport#\n *  @name state\n */\nObject.defineProperty(Tone.Transport.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._clock.getStateAtTime(this.now());\n\t}\n});\n\n/**\n *  Start the transport and all sources synced to the transport.\n *  @param  {Time} [time=now] The time when the transport should start.\n *  @param  {TransportTime=} offset The timeline offset to start the transport.\n *  @returns {Tone.Transport} this\n *  @example\n * //start the transport in one second starting at beginning of the 5th measure.\n * Tone.Transport.start(\"+1\", \"4:0:0\");\n */\nTone.Transport.prototype.start = function(time, offset){\n\t//start the clock\n\tif (Tone.isDefined(offset)){\n\t\toffset = this.toTicks(offset);\n\t}\n\tthis._clock.start(time, offset);\n\treturn this;\n};\n\n/**\n *  Stop the transport and all sources synced to the transport.\n *  @param  {Time} [time=now] The time when the transport should stop.\n *  @returns {Tone.Transport} this\n *  @example\n * Tone.Transport.stop();\n */\nTone.Transport.prototype.stop = function(time){\n\tthis._clock.stop(time);\n\treturn this;\n};\n\n/**\n *  Pause the transport and all sources synced to the transport.\n *  @param  {Time} [time=now]\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.pause = function(time){\n\tthis._clock.pause(time);\n\treturn this;\n};\n\n/**\n * Toggle the current state of the transport. If it is\n * started, it will stop it, otherwise it will start the Transport.\n * @param  {Time=} time The time of the event\n * @return {Tone.Transport}      this\n */\nTone.Transport.prototype.toggle = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._clock.getStateAtTime(time) !== Tone.State.Started){\n\t\tthis.start(time);\n\t} else {\n\t\tthis.stop(time);\n\t}\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSETTERS/GETTERS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  The time signature as just the numerator over 4.\n *  For example 4/4 would be just 4 and 6/8 would be 3.\n *  @memberOf Tone.Transport#\n *  @type {Number|Array}\n *  @name timeSignature\n *  @example\n * //common time\n * Tone.Transport.timeSignature = 4;\n * // 7/8\n * Tone.Transport.timeSignature = [7, 8];\n * //this will be reduced to a single number\n * Tone.Transport.timeSignature; //returns 3.5\n */\nObject.defineProperty(Tone.Transport.prototype, \"timeSignature\", {\n\tget : function(){\n\t\treturn this._timeSignature;\n\t},\n\tset : function(timeSig){\n\t\tif (Tone.isArray(timeSig)){\n\t\t\ttimeSig = (timeSig[0] / timeSig[1]) * 4;\n\t\t}\n\t\tthis._timeSignature = timeSig;\n\t}\n});\n\n/**\n * When the Tone.Transport.loop = true, this is the starting position of the loop.\n * @memberOf Tone.Transport#\n * @type {Time}\n * @name loopStart\n */\nObject.defineProperty(Tone.Transport.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopStart).toSeconds();\n\t},\n\tset : function(startPosition){\n\t\tthis._loopStart = this.toTicks(startPosition);\n\t}\n});\n\n/**\n * When the Tone.Transport.loop = true, this is the ending position of the loop.\n * @memberOf Tone.Transport#\n * @type {Time}\n * @name loopEnd\n */\nObject.defineProperty(Tone.Transport.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopEnd).toSeconds();\n\t},\n\tset : function(endPosition){\n\t\tthis._loopEnd = this.toTicks(endPosition);\n\t}\n});\n\n/**\n *  Set the loop start and stop at the same time.\n *  @param {TransportTime} startPosition\n *  @param {TransportTime} endPosition\n *  @returns {Tone.Transport} this\n *  @example\n * //loop over the first measure\n * Tone.Transport.setLoopPoints(0, \"1m\");\n * Tone.Transport.loop = true;\n */\nTone.Transport.prototype.setLoopPoints = function(startPosition, endPosition){\n\tthis.loopStart = startPosition;\n\tthis.loopEnd = endPosition;\n\treturn this;\n};\n\n/**\n *  The swing value. Between 0-1 where 1 equal to\n *  the note + half the subdivision.\n *  @memberOf Tone.Transport#\n *  @type {NormalRange}\n *  @name swing\n */\nObject.defineProperty(Tone.Transport.prototype, \"swing\", {\n\tget : function(){\n\t\treturn this._swingAmount;\n\t},\n\tset : function(amount){\n\t\t//scale the values to a normal range\n\t\tthis._swingAmount = amount;\n\t}\n});\n\n/**\n *  Set the subdivision which the swing will be applied to.\n *  The default value is an 8th note. Value must be less\n *  than a quarter note.\n *\n *  @memberOf Tone.Transport#\n *  @type {Time}\n *  @name swingSubdivision\n */\nObject.defineProperty(Tone.Transport.prototype, \"swingSubdivision\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._swingTicks).toNotation();\n\t},\n\tset : function(subdivision){\n\t\tthis._swingTicks = this.toTicks(subdivision);\n\t}\n});\n\n/**\n *  The Transport's position in Bars:Beats:Sixteenths.\n *  Setting the value will jump to that position right away.\n *  @memberOf Tone.Transport#\n *  @type {BarsBeatsSixteenths}\n *  @name position\n */\nObject.defineProperty(Tone.Transport.prototype, \"position\", {\n\tget : function(){\n\t\tvar now = this.now();\n\t\tvar ticks = this._clock.getTicksAtTime(now);\n\t\treturn Tone.Ticks(ticks).toBarsBeatsSixteenths();\n\t},\n\tset : function(progress){\n\t\tvar ticks = this.toTicks(progress);\n\t\tthis.ticks = ticks;\n\t}\n});\n\n/**\n *  The Transport's position in seconds\n *  Setting the value will jump to that position right away.\n *  @memberOf Tone.Transport#\n *  @type {Seconds}\n *  @name seconds\n */\nObject.defineProperty(Tone.Transport.prototype, \"seconds\", {\n\tget : function(){\n\t\treturn this._clock.seconds;\n\t},\n\tset : function(s){\n\t\tvar now = this.now();\n\t\tvar ticks = this.bpm.timeToTicks(s, now);\n\t\tthis.ticks = ticks;\n\t}\n});\n\n/**\n *  The Transport's loop position as a normalized value. Always\n *  returns 0 if the transport if loop is not true.\n *  @memberOf Tone.Transport#\n *  @name progress\n *  @type {NormalRange}\n */\nObject.defineProperty(Tone.Transport.prototype, \"progress\", {\n\tget : function(){\n\t\tif (this.loop){\n\t\t\tvar now = this.now();\n\t\t\tvar ticks = this._clock.getTicksAtTime(now);\n\t\t\treturn (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  The transports current tick position.\n *\n *  @memberOf Tone.Transport#\n *  @type {Ticks}\n *  @name ticks\n */\nObject.defineProperty(Tone.Transport.prototype, \"ticks\", {\n\tget : function(){\n\t\treturn this._clock.ticks;\n\t},\n\tset : function(t){\n\t\tif (this._clock.ticks !== t){\n\t\t\tvar now = this.now();\n\t\t\t//stop everything synced to the transport\n\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\tthis.emit(\"stop\", now);\n\t\t\t\tthis._clock.setTicksAtTime(t, now);\n\t\t\t\t//restart it with the new time\n\t\t\t\tthis.emit(\"start\", now, this.seconds);\n\t\t\t} else {\n\t\t\t\tthis._clock.setTicksAtTime(t, now);\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n * Get the clock's ticks at the given time.\n * @param  {Time} time  When to get the tick value\n * @return {Ticks}       The tick value at the given time.\n */\nTone.Transport.prototype.getTicksAtTime = function(time){\n\treturn Math.round(this._clock.getTicksAtTime(time));\n};\n\n/**\n *  Return the elapsed seconds at the given time.\n *  @param  {Time}  time  When to get the elapsed seconds\n *  @return  {Seconds}  The number of elapsed seconds\n */\nTone.Transport.prototype.getSecondsAtTime = function(time){\n\treturn this._clock.getSecondsAtTime(time);\n};\n\n/**\n *  Pulses Per Quarter note. This is the smallest resolution\n *  the Transport timing supports. This should be set once\n *  on initialization and not set again. Changing this value\n *  after other objects have been created can cause problems.\n *\n *  @memberOf Tone.Transport#\n *  @type {Number}\n *  @name PPQ\n */\nObject.defineProperty(Tone.Transport.prototype, \"PPQ\", {\n\tget : function(){\n\t\treturn this._ppq;\n\t},\n\tset : function(ppq){\n\t\tvar bpm = this.bpm.value;\n\t\tthis._ppq = ppq;\n\t\tthis.bpm.value = bpm;\n\t}\n});\n\n/**\n *  Convert from BPM to frequency (factoring in PPQ)\n *  @param  {BPM}  bpm The BPM value to convert to frequency\n *  @return  {Frequency}  The BPM as a frequency with PPQ factored in.\n *  @private\n */\nTone.Transport.prototype._fromUnits = function(bpm){\n\treturn 1 / (60 / bpm / this.PPQ);\n};\n\n/**\n *  Convert from frequency (with PPQ) into BPM\n *  @param  {Frequency}  freq The clocks frequency to convert to BPM\n *  @return  {BPM}  The frequency value as BPM.\n *  @private\n */\nTone.Transport.prototype._toUnits = function(freq){\n\treturn (freq / this.PPQ) * 60;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSYNCING\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  Returns the time aligned to the next subdivision\n *  of the Transport. If the Transport is not started,\n *  it will return 0.\n *  Note: this will not work precisely during tempo ramps.\n *  @param  {Time}  subdivision  The subdivision to quantize to\n *  @return  {Number}  The context time of the next subdivision.\n *  @example\n * Tone.Transport.start(); //the transport must be started\n * Tone.Transport.nextSubdivision(\"4n\");\n */\nTone.Transport.prototype.nextSubdivision = function(subdivision){\n\tsubdivision = this.toTicks(subdivision);\n\tif (this.state !== Tone.State.Started){\n\t\t//if the transport's not started, return 0\n\t\treturn 0;\n\t} else {\n\t\tvar now = this.now();\n\t\t//the remainder of the current ticks and the subdivision\n\t\tvar transportPos = this.getTicksAtTime(now);\n\t\tvar remainingTicks = subdivision - transportPos % subdivision;\n\t\treturn this._clock.nextTickTime(remainingTicks, now);\n\t}\n};\n\n/**\n *  Attaches the signal to the tempo control signal so that\n *  any changes in the tempo will change the signal in the same\n *  ratio.\n *\n *  @param  {Tone.Signal} signal\n *  @param {number=} ratio Optionally pass in the ratio between\n *                         the two signals. Otherwise it will be computed\n *                         based on their current values.\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.syncSignal = function(signal, ratio){\n\tif (!ratio){\n\t\t//get the sync ratio\n\t\tvar now = this.now();\n\t\tif (signal.getValueAtTime(now) !== 0){\n\t\t\tratio = signal.getValueAtTime(now) / this.bpm.getValueAtTime(now);\n\t\t} else {\n\t\t\tratio = 0;\n\t\t}\n\t}\n\tvar ratioSignal = new Tone.Gain(ratio);\n\tthis.bpm.chain(ratioSignal, signal._param);\n\tthis._syncedSignals.push({\n\t\t\"ratio\" : ratioSignal,\n\t\t\"signal\" : signal,\n\t\t\"initial\" : signal.value\n\t});\n\tsignal.value = 0;\n\treturn this;\n};\n\n/**\n *  Unsyncs a previously synced signal from the transport's control.\n *  See Tone.Transport.syncSignal.\n *  @param  {Tone.Signal} signal\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.unsyncSignal = function(signal){\n\tfor (var i = this._syncedSignals.length - 1; i >= 0; i--){\n\t\tvar syncedSignal = this._syncedSignals[i];\n\t\tif (syncedSignal.signal === signal){\n\t\t\tsyncedSignal.ratio.dispose();\n\t\t\tsyncedSignal.signal.value = syncedSignal.initial;\n\t\t\tthis._syncedSignals.splice(i, 1);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Transport} this\n *  @private\n */\nTone.Transport.prototype.dispose = function(){\n\tTone.Emitter.prototype.dispose.call(this);\n\tthis._clock.dispose();\n\tthis._clock = null;\n\tthis._writable(\"bpm\");\n\tthis.bpm = null;\n\tthis._timeline.dispose();\n\tthis._timeline = null;\n\tthis._repeatedEvents.dispose();\n\tthis._repeatedEvents = null;\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tINITIALIZATION\n///////////////////////////////////////////////////////////////////////////////\n\nvar TransportConstructor = Tone.Transport;\nTone.Transport = new TransportConstructor();\n\nTone.Context.on(\"init\", function(context){\n\tif (context.transport && context.transport.isTransport){\n\t\tTone.Transport = context.transport;\n\t} else {\n\t\tTone.Transport = new TransportConstructor();\n\t}\n});\n\nTone.Context.on(\"close\", function(context){\n\tif (context.transport && context.transport.isTransport){\n\t\tcontext.transport.dispose();\n\t}\n});\n\nexport default Tone.Transport;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Transport\";\nimport \"../component/Volume\";\nimport \"../core/Master\";\nimport \"../type/Type\";\nimport \"../core/TimelineState\";\nimport \"../signal/Signal\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Base class for sources. Sources have start/stop methods\n *          and the ability to be synced to the\n *          start/stop of Tone.Transport.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @example\n * //Multiple state change events can be chained together,\n * //but must be set in the correct order and with ascending times\n *\n * // OK\n * state.start().stop(\"+0.2\");\n * // AND\n * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n *\n * // BAD\n * state.stop(\"+0.2\").start();\n * // OR\n * state.start(\"+0.3\").stop(\"+0.2\");\n *\n */\nTone.Source = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.Source.defaults);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The output volume node\n\t *  @type  {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @type {Decibels}\n\t * @signal\n\t * @example\n\t * source.volume.value = -6;\n\t */\n\tthis.volume = this._volume.volume;\n\tthis._readOnly(\"volume\");\n\n\t/**\n\t * \tKeep track of the scheduled state.\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\tthis._state.memory = 100;\n\n\t/**\n\t *  The synced `start` callback function from the transport\n\t *  @type {Function}\n\t *  @private\n\t */\n\tthis._synced = false;\n\n\t/**\n\t *  Keep track of all of the scheduled event ids\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._scheduled = [];\n\n\t//make the output explicitly stereo\n\tthis._volume.output.output.channelCount = 2;\n\tthis._volume.output.output.channelCountMode = \"explicit\";\n\t//mute initially\n\tthis.mute = options.mute;\n};\n\nTone.extend(Tone.Source, Tone.AudioNode);\n\n/**\n *  The default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Source.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n *  Returns the playback state of the source, either \"started\" or \"stopped\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.Source#\n *  @name state\n */\nObject.defineProperty(Tone.Source.prototype, \"state\", {\n\tget : function(){\n\t\tif (this._synced){\n\t\t\tif (Tone.Transport.state === Tone.State.Started){\n\t\t\t\treturn this._state.getValueAtTime(Tone.Transport.seconds);\n\t\t\t} else {\n\t\t\t\treturn Tone.State.Stopped;\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._state.getValueAtTime(this.now());\n\t\t}\n\t}\n});\n\n/**\n * Mute the output.\n * @memberOf Tone.Source#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * source.mute = true;\n */\nObject.defineProperty(Tone.Source.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n//overwrite these functions\nTone.Source.prototype._start = Tone.noOp;\nTone.Source.prototype.restart = Tone.noOp;\nTone.Source.prototype._stop = Tone.noOp;\n\n/**\n *  Start the source at the specified time. If no time is given,\n *  start the source now.\n *  @param  {Time} [time=now] When the source should be started.\n *  @returns {Tone.Source} this\n *  @example\n * source.start(\"+0.5\"); //starts the source 0.5 seconds from now\n */\nTone.Source.prototype.start = function(time, offset, duration){\n\tif (Tone.isUndef(time) && this._synced){\n\t\ttime = Tone.Transport.seconds;\n\t} else {\n\t\ttime = this.toSeconds(time);\n\t\ttime = Math.max(time, this.context.currentTime);\n\t}\n\t//if it's started, stop it and restart it\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.cancel(time);\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tthis.restart(time, offset, duration);\n\t} else {\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tif (this._synced){\n\t\t\t// add the offset time to the event\n\t\t\tvar event = this._state.get(time);\n\t\t\tevent.offset = Tone.defaultArg(offset, 0);\n\t\t\tevent.duration = duration;\n\t\t\tvar sched = Tone.Transport.schedule(function(t){\n\t\t\t\tthis._start(t, offset, duration);\n\t\t\t}.bind(this), time);\n\t\t\tthis._scheduled.push(sched);\n\n\t\t\t//if it's already started\n\t\t\tif (Tone.Transport.state === Tone.State.Started){\n\t\t\t\tthis._syncedStart(this.now(), Tone.Transport.seconds);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._start.apply(this, arguments);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the source at the specified time. If no time is given,\n *  stop the source now.\n *  @param  {Time} [time=now] When the source should be stopped.\n *  @returns {Tone.Source} this\n *  @example\n * source.stop(); // stops the source immediately\n */\nTone.Source.prototype.stop = function(time){\n\tif (Tone.isUndef(time) && this._synced){\n\t\ttime = Tone.Transport.seconds;\n\t} else {\n\t\ttime = this.toSeconds(time);\n\t\ttime = Math.max(time, this.context.currentTime);\n\t}\n\tif (!this._synced){\n\t\tthis._stop.apply(this, arguments);\n\t} else {\n\t\tvar sched = Tone.Transport.schedule(this._stop.bind(this), time);\n\t\tthis._scheduled.push(sched);\n\t}\n\tthis._state.cancel(time);\n\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\treturn this;\n};\n\n/**\n *  Sync the source to the Transport so that all subsequent\n *  calls to `start` and `stop` are synced to the TransportTime\n *  instead of the AudioContext time.\n *\n *  @returns {Tone.Source} this\n *  @example\n * //sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n * source.sync().start(0).stop(0.3);\n * //start the transport.\n * Tone.Transport.start();\n *\n *  @example\n * //start the transport with an offset and the sync'ed sources\n * //will start in the correct position\n * source.sync().start(0.1);\n * //the source will be invoked with an offset of 0.4\n * Tone.Transport.start(\"+0.5\", 0.5);\n */\nTone.Source.prototype.sync = function(){\n\tthis._synced = true;\n\tthis._syncedStart = function(time, offset){\n\t\tif (offset > 0){\n\t\t\t// get the playback state at that time\n\t\t\tvar stateEvent = this._state.get(offset);\n\t\t\t// listen for start events which may occur in the middle of the sync'ed time\n\t\t\tif (stateEvent && stateEvent.state === Tone.State.Started && stateEvent.time !== offset){\n\t\t\t\t// get the offset\n\t\t\t\tvar startOffset = offset - this.toSeconds(stateEvent.time);\n\t\t\t\tvar duration;\n\t\t\t\tif (stateEvent.duration){\n\t\t\t\t\tduration = this.toSeconds(stateEvent.duration) - startOffset;\n\t\t\t\t}\n\t\t\t\tthis._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n\t\t\t}\n\t\t}\n\t}.bind(this);\n\tthis._syncedStop = function(time){\n\t\tvar seconds = Tone.Transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));\n\t\tif (this._state.getValueAtTime(seconds) === Tone.State.Started){\n\t\t\tthis._stop(time);\n\t\t}\n\t}.bind(this);\n\tTone.Transport.on(\"start loopStart\", this._syncedStart);\n\tTone.Transport.on(\"stop pause loopEnd\", this._syncedStop);\n\treturn this;\n};\n\n/**\n *  Unsync the source to the Transport. See Tone.Source.sync\n *  @returns {Tone.Source} this\n */\nTone.Source.prototype.unsync = function(){\n\tif (this._synced){\n\t\tTone.Transport.off(\"stop pause loopEnd\", this._syncedStop);\n\t\tTone.Transport.off(\"start loopStart\", this._syncedStart);\n\t}\n\tthis._synced = false;\n\t// clear all of the scheduled ids\n\tfor (var i = 0; i < this._scheduled.length; i++){\n\t\tvar id = this._scheduled[i];\n\t\tTone.Transport.clear(id);\n\t}\n\tthis._scheduled = [];\n\tthis._state.cancel(0);\n\treturn this;\n};\n\n/**\n *\tClean up.\n *  @return {Tone.Source} this\n */\nTone.Source.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.unsync();\n\tthis._scheduled = null;\n\tthis._writable(\"volume\");\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis.volume = null;\n\tthis._state.dispose();\n\tthis._state = null;\n};\n\nexport default Tone.Source;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\nimport \"../source/Source\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Wrapper around the native BufferSourceNode.\n *  @extends {Tone.AudioNode}\n *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n *  @param  {Function}  onload  The callback to invoke when the\n *                               buffer is done playing.\n */\nTone.BufferSource = function(){\n\n\tvar options = Tone.defaults(arguments, [\"buffer\", \"onload\"], Tone.BufferSource);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The callback to invoke after the\n\t *  buffer source is done playing.\n\t *  @type  {Function}\n\t */\n\tthis.onended = options.onended;\n\n\t/**\n\t *  The time that the buffer was started.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._startTime = -1;\n\n\t/**\n\t *  An additional flag if the actual BufferSourceNode\n\t *  has been started. b/c stopping an unstarted buffer\n\t *  will throw it into an invalid state\n\t *  @type  {Boolean}\n\t *  @private\n\t */\n\tthis._sourceStarted = false;\n\n\t/**\n\t *  Flag if the source has already been stopped\n\t *  @type  {Boolean}\n\t *  @private\n\t */\n\tthis._sourceStopped = false;\n\n\t/**\n\t *  The time that the buffer is scheduled to stop.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._stopTime = -1;\n\n\t/**\n\t *  The gain node which envelopes the BufferSource\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._gainNode = this.output = new Tone.Gain(0);\n\n\t/**\n\t *  The buffer source\n\t *  @type  {AudioBufferSourceNode}\n\t *  @private\n\t */\n\tthis._source = this.context.createBufferSource();\n\tTone.connect(this._source, this._gainNode);\n\tthis._source.onended = this._onended.bind(this);\n\n\t/**\n\t * The private buffer instance\n\t * @type {Tone.Buffer}\n\t * @private\n\t */\n\tthis._buffer = new Tone.Buffer(options.buffer, options.onload);\n\n\t/**\n\t *  The playbackRate of the buffer\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis.playbackRate = new Tone.Param({\n\t\tparam : this._source.playbackRate,\n\t\tunits : Tone.Type.Positive,\n\t\tvalue : options.playbackRate\n\t});\n\n\t/**\n\t *  The fadeIn time of the amplitude envelope.\n\t *  @type {Time}\n\t */\n\tthis.fadeIn = options.fadeIn;\n\n\t/**\n\t *  The fadeOut time of the amplitude envelope.\n\t *  @type {Time}\n\t */\n\tthis.fadeOut = options.fadeOut;\n\n\t/**\n\t * The curve applied to the fades, either \"linear\" or \"exponential\"\n\t * @type {String}\n\t */\n\tthis.curve = options.curve;\n\n\t/**\n\t * The onended timeout\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._onendedTimeout = -1;\n\n\t//set some values initially\n\tthis.loop = options.loop;\n\tthis.loopStart = options.loopStart;\n\tthis.loopEnd = options.loopEnd;\n};\n\nTone.extend(Tone.BufferSource, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.BufferSource.defaults = {\n\t\"onended\" : Tone.noOp,\n\t\"onload\" : Tone.noOp,\n\t\"loop\" : false,\n\t\"loopStart\" : 0,\n\t\"loopEnd\" : 0,\n\t\"fadeIn\" : 0,\n\t\"fadeOut\" : 0,\n\t\"curve\" : \"linear\",\n\t\"playbackRate\" : 1\n};\n\n/**\n *  Returns the playback state of the source, either \"started\" or \"stopped\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.BufferSource#\n *  @name state\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"state\", {\n\tget : function(){\n\t\treturn this.getStateAtTime(this.now());\n\t}\n});\n\n/**\n *  Get the playback state at the given time\n *  @param  {Time}  time  The time to test the state at\n *  @return  {Tone.State}  The playback state. \n */\nTone.BufferSource.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._startTime !== -1 && \n\t\tthis._startTime <= time && \n\t\t(this._stopTime === -1 || time < this._stopTime) && \n\t\t!this._sourceStopped){\n\t\treturn Tone.State.Started;\n\t} else {\n\t\treturn Tone.State.Stopped;\n\t}\n};\n\n/**\n *  Start the buffer\n *  @param  {Time} [startTime=now] When the player should start.\n *  @param  {Time} [offset=0] The offset from the beginning of the sample\n *                                 to start at.\n *  @param  {Time=} duration How long the sample should play. If no duration\n *                                is given, it will default to the full length\n *                                of the sample (minus any offset)\n *  @param  {Gain}  [gain=1]  The gain to play the buffer back at.\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.start = function(time, offset, duration, gain){\n\tthis.log(\"start\", time, offset, duration, gain);\n\tthis.assert(this._startTime === -1, \"can only be started once\");\n\tthis.assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n\tthis.assert(!this._sourceStopped, \"source is already stopped\");\n\n\ttime = this.toSeconds(time);\n\t//if it's a loop the default offset is the loopstart point\n\tif (this.loop){\n\t\toffset = Tone.defaultArg(offset, this.loopStart);\n\t} else {\n\t\t//otherwise the default offset is 0\n\t\toffset = Tone.defaultArg(offset, 0);\n\t}\n\toffset = this.toSeconds(offset);\n\t//make sure the offset is not less than 0\n\toffset = Math.max(offset, 0);\n\n\tgain = Tone.defaultArg(gain, 1);\n\n\t//apply a fade in envelope\n\tvar fadeInTime = this.toSeconds(this.fadeIn);\n\tif (fadeInTime > 0){\n\t\tthis._gainNode.gain.setValueAtTime(0, time);\n\t\tif (this.curve === \"linear\"){\n\t\t\tthis._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);\n\t\t} else {\n\t\t\tthis._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);\n\t\t}\n\t} else {\n\t\tthis._gainNode.gain.setValueAtTime(gain, time);\n\t}\n\n\tthis._startTime = time;\n\n\t//if a duration is given, schedule a stop\n\tif (Tone.isDefined(duration)){\n\t\tvar computedDur = this.toSeconds(duration);\n\t\t//make sure it's never negative\n\t\tcomputedDur = Math.max(computedDur, 0);\n\n\t\tthis.stop(time + computedDur);\n\t}\n\n\t//start the buffer source\n\tif (this.loop){\n\t\t//modify the offset if it's greater than the loop time\n\t\tvar loopEnd = this.loopEnd || this.buffer.duration;\n\t\tvar loopStart = this.loopStart;\n\t\tvar loopDuration = loopEnd - loopStart;\n\t\t//move the offset back\n\t\tif (offset >= loopEnd){\n\t\t\toffset = ((offset - loopStart) % loopDuration) + loopStart;\n\t\t}\n\t}\n\tthis._source.buffer = this.buffer.get();\n\tthis._source.loopEnd = this.loopEnd || this.buffer.duration;\n\tif (offset < this.buffer.duration){\n\t\tthis._sourceStarted = true;\n\t\tthis._source.start(time, offset);\n\t}\n\n\treturn this;\n};\n\n/**\n *  Stop the buffer. \n *  @param  {Time=}  time         The time the buffer should stop.\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.stop = function(time){\n\tthis.log(\"stop\", time);\n\tthis.assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n\tthis.assert(!this._sourceStopped, \"source is already stopped\");\n\n\ttime = this.toSeconds(time);\n\n\t//if the event has already been scheduled, clear it\n\tif (this._stopTime !== -1){\n\t\tthis.cancelStop();\n\t}\n\n\t//the fadeOut time\n\tvar fadeOutTime = this.toSeconds(this.fadeOut);\n\n\t//cancel the previous curve\n\tthis._stopTime = time + fadeOutTime;\n\n\tif (fadeOutTime > 0){\n\t\t//start the fade out curve at the given time\n\t\tif (this.curve === \"linear\"){\n\t\t\tthis._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n\t\t} else {\n\t\t\tthis._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n\t\t}\n\t} else {\n\t\t//stop any ongoing ramps, and set the value to 0\n\t\tthis._gainNode.gain.cancelAndHoldAtTime(time);\n\t\tthis._gainNode.gain.setValueAtTime(0, time);\n\t}\n\n\tTone.context.clearTimeout(this._onendedTimeout);\n\tthis._onendedTimeout = Tone.context.setTimeout(this._onended.bind(this), this._stopTime - this.now());\n\n\treturn this;\n};\n\n/**\n *  Cancel a scheduled stop event\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.cancelStop = function(){\n\tif (this._startTime !== -1 && !this._sourceStopped){\n\t\t//cancel the stop envelope\n\t\tvar fadeInTime = this.toSeconds(this.fadeIn);\n\t\tthis._gainNode.gain.cancelScheduledValues(this._startTime + fadeInTime + this.sampleTime);\n\t\tthis.context.clearTimeout(this._onendedTimeout);\n\t\tthis._stopTime = -1;\n\t}\n\treturn this;\n};\n\n/**\n *  Internal callback when the buffer is ended.\n *  Invokes `onended` and disposes the node.\n *  @private\n */\nTone.BufferSource.prototype._onended = function(){\n\tif (!this._sourceStopped){\n\t\tthis._sourceStopped = true;\n\t\t//allow additional time for the exponential curve to fully decay\n\t\tvar additionalTail = this.curve === \"exponential\" ? this.fadeOut * 2 : 0;\n\t\tif (this._sourceStarted && this._stopTime !== -1){\n\t\t\tthis._source.stop(this._stopTime + additionalTail);\n\t\t}\n\t\tthis.onended(this);\n\n\t\t//dispose the source after it's come to a stop\n\t\tsetTimeout(function(){\n\t\t\t//if it hasn't already been disposed\n\t\t\tif (this._source){\n\t\t\t\tthis._source.disconnect();\n\t\t\t\tthis._gainNode.disconnect();\n\t\t\t}\n\t\t}.bind(this), additionalTail * 1000 + 100);\n\t}\n};\n\n/**\n * If loop is true, the loop will start at this position.\n * @memberOf Tone.BufferSource#\n * @type {Time}\n * @name loopStart\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn this._source.loopStart;\n\t},\n\tset : function(loopStart){\n\t\tthis._source.loopStart = this.toSeconds(loopStart);\n\t}\n});\n\n/**\n * If loop is true, the loop will end at this position.\n * @memberOf Tone.BufferSource#\n * @type {Time}\n * @name loopEnd\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn this._source.loopEnd;\n\t},\n\tset : function(loopEnd){\n\t\tthis._source.loopEnd = this.toSeconds(loopEnd);\n\t}\n});\n\n/**\n * The audio buffer belonging to the player.\n * @memberOf Tone.BufferSource#\n * @type {Tone.Buffer}\n * @name buffer\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"buffer\", {\n\tget : function(){\n\t\treturn this._buffer;\n\t},\n\tset : function(buffer){\n\t\tthis._buffer.set(buffer);\n\t}\n});\n\n/**\n * If the buffer should loop once it's over.\n * @memberOf Tone.BufferSource#\n * @type {Boolean}\n * @name loop\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"loop\", {\n\tget : function(){\n\t\treturn this._source.loop;\n\t},\n\tset : function(loop){\n\t\tthis._source.loop = loop;\n\t\tthis.cancelStop();\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.dispose = function(){\n\tif (!this._wasDisposed){\n\t\tthis._wasDisposed = true;\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis.onended = null;\n\t\tthis._source.onended = null;\n\t\tthis._source.disconnect();\n\t\tthis._source = null;\n\t\tthis._gainNode.dispose();\n\t\tthis._gainNode = null;\n\t\tthis._buffer.dispose();\n\t\tthis._buffer = null;\n\t\tthis._startTime = -1;\n\t\tthis.playbackRate = null;\n\t\tTone.context.clearTimeout(this._onendedTimeout);\n\t}\n\treturn this;\n};\n\nexport default Tone.BufferSource;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Instrument\";\nimport \"../core/Buffers\";\nimport \"../source/BufferSource\";\n\n/**\n * @class Automatically interpolates between a set of pitched samples. Pass in an object which maps the note's pitch or midi value to the url, then you can trigger the attack and release of that note like other instruments. By automatically repitching the samples, it is possible to play pitches which were not explicitly included which can save loading time.\n *        For sample or buffer playback where repitching is not necessary, use [Tone.Player](https://tonejs.github.io/docs/Player).\n * @param {Object} samples An object of samples mapping either Midi\n *                         Note Numbers or Scientific Pitch Notation\n *                         to the url of that sample.\n * @param {Function=} onload The callback to invoke when all of the samples are loaded.\n * @param {String=} baseUrl The root URL of all of the samples, which is prepended to all the URLs.\n * @example\n * var sampler = new Tone.Sampler({\n * \t\"C3\" : \"path/to/C3.mp3\",\n * \t\"D#3\" : \"path/to/Dsharp3.mp3\",\n * \t\"F#3\" : \"path/to/Fsharp3.mp3\",\n * \t\"A3\" : \"path/to/A3.mp3\",\n * }, function(){\n * \t//sampler will repitch the closest sample\n * \tsampler.triggerAttack(\"D3\")\n * })\n * @extends {Tone.Instrument}\n */\nTone.Sampler = function(urls){\n\n\t// shift arguments over one. Those are the remainder of the options\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.shift();\n\tvar options = Tone.defaults(args, [\"onload\", \"baseUrl\"], Tone.Sampler);\n\tTone.Instrument.call(this, options);\n\n\tvar urlMap = {};\n\tfor (var note in urls){\n\t\tif (Tone.isNote(note)){\n\t\t\t//convert the note name to MIDI\n\t\t\tvar mid = Tone.Frequency(note).toMidi();\n\t\t\turlMap[mid] = urls[note];\n\t\t} else if (!isNaN(parseFloat(note))){\n\t\t\t//otherwise if it's numbers assume it's midi\n\t\t\turlMap[note] = urls[note];\n\t\t} else {\n\t\t\tthrow new Error(\"Tone.Sampler: url keys must be the note's pitch\");\n\t\t}\n\t}\n\n\t/**\n\t * The stored and loaded buffers\n\t * @type {Tone.Buffers}\n\t * @private\n\t */\n\tthis._buffers = new Tone.Buffers(urlMap, options.onload, options.baseUrl);\n\n\t/**\n\t * The object of all currently playing BufferSources\n\t * @type {Object}\n\t * @private\n\t */\n\tthis._activeSources = {};\n\n\t/**\n\t * The envelope applied to the beginning of the sample.\n\t * @type {Time}\n\t */\n\tthis.attack = options.attack;\n\n\t/**\n\t * The envelope applied to the end of the envelope.\n\t * @type {Time}\n\t */\n\tthis.release = options.release;\n\n\t/**\n\t *  The shape of the attack/release curve.\n\t *  Either \"linear\" or \"exponential\"\n\t *  @type {String}\n\t */\n\tthis.curve = options.curve;\n};\n\nTone.extend(Tone.Sampler, Tone.Instrument);\n\n/**\n * The defaults\n * @const\n * @type {Object}\n */\nTone.Sampler.defaults = {\n\t\"attack\" : 0,\n\t\"release\" : 0.1,\n\t\"onload\" : Tone.noOp,\n\t\"baseUrl\" : \"\",\n\t\"curve\" : \"exponential\"\n};\n\n/**\n * Returns the difference in steps between the given midi note at the closets sample.\n * @param  {Midi} midi\n * @return {Interval}\n * @private\n */\nTone.Sampler.prototype._findClosest = function(midi){\n\t//searches within 8 octaves of the given midi note\n\tvar MAX_INTERVAL = 96; \n\tvar interval = 0;\n\twhile (interval < MAX_INTERVAL){\n\t\t// check above and below\n\t\tif (this._buffers.has(midi + interval)){\n\t\t\treturn -interval;\n\t\t} else if (this._buffers.has(midi - interval)){\n\t\t\treturn interval;\n\t\t}\n\t\tinterval++;\n\t}\n\tthrow new Error(\"No available buffers for note: \"+midi);\n};\n\n/**\n * @param  {(Frequency|Frequency[])} notes\tThe note to play, or an array of notes.\n * @param  {Time=} time     When to play the note\n * @param  {NormalRange=} velocity The velocity to play the sample back.\n * @return {Tone.Sampler}          this\n */\nTone.Sampler.prototype.triggerAttack = function(notes, time, velocity){\n\tthis.log(\"triggerAttack\", notes, time, velocity);\n\tif (!Array.isArray(notes)){\n\t\tnotes = [notes];\n\t}\n\tfor (var i = 0; i < notes.length; i++){ \n\t\tvar midi = Tone.Frequency(notes[i]).toMidi();\n\t\t// find the closest note pitch\n\t\tvar difference = this._findClosest(midi);\n\t\tvar closestNote = midi - difference;\n\t\tvar buffer = this._buffers.get(closestNote);\n\t\tvar playbackRate = Tone.intervalToFrequencyRatio(difference);\n\t\t// play that note\n\t\tvar source = new Tone.BufferSource({\n\t\t\t\"buffer\" : buffer,\n\t\t\t\"playbackRate\" : playbackRate,\n\t\t\t\"fadeIn\" : this.attack,\n\t\t\t\"fadeOut\" : this.release,\n\t\t\t\"curve\" : this.curve,\n\t\t}).connect(this.output);\n\t\tsource.start(time, 0, buffer.duration / playbackRate, velocity);\n\t\t// add it to the active sources\n\t\tif (!Tone.isArray(this._activeSources[midi])){\n\t\t\tthis._activeSources[midi] = [];\n\t\t}\n\t\tthis._activeSources[midi].push(source);\n\n\t\t//remove it when it's done\n\t\tsource.onended = function(){\n\t\t\tif (this._activeSources && this._activeSources[midi]){\n\t\t\t\tvar index = this._activeSources[midi].indexOf(source);\n\t\t\t\tif (index !== -1){\n\t\t\t\t\tthis._activeSources[midi].splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}.bind(this);\n\t}\n\treturn this;\n};\n\n/**\n * @param  {(Frequency|Frequency[])} notes\tThe note to release, or an array of notes.\n * @param  {Time=} time     \tWhen to release the note.\n * @return {Tone.Sampler}\tthis\n */\nTone.Sampler.prototype.triggerRelease = function(notes, time){\n\tthis.log(\"triggerRelease\", notes, time);\n\tif (!Array.isArray(notes)){\n\t\tnotes = [notes];\n\t}\n\tfor (var i = 0; i < notes.length; i++){  \n\t\tvar midi = Tone.Frequency(notes[i]).toMidi();\n\t\t// find the note\n\t\tif (this._activeSources[midi] && this._activeSources[midi].length){\n\t\t\ttime = this.toSeconds(time);\n\t\t\t//stop all the sources on that midi note\n\t\t\tthis._activeSources[midi].forEach(function(source){\n\t\t\t\tsource.stop(time);\n\t\t\t});\n\t\t\tthis._activeSources[midi] = [];\n\t\t}\n\t}\n\n\treturn this;\n};\n\n/**\n * Release all currently active notes.\n * @param  {Time=} time     \tWhen to release the notes.\n * @return {Tone.Sampler}\tthis\n */\nTone.Sampler.prototype.releaseAll = function(time){\n\ttime = this.toSeconds(time);\n\tfor (var note in this._activeSources){\n\t\tvar sources = this._activeSources[note];\n\t\twhile (sources.length){\n\t\t\tvar source = sources.shift();\n\t\t\tsource.stop(time);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * synth.sync()\n * //schedule 3 notes when the transport first starts\n * synth.triggerAttackRelease('8n', 0)\n * synth.triggerAttackRelease('8n', '8n')\n * synth.triggerAttackRelease('8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.Sampler.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 1);\n\tthis._syncMethod(\"triggerRelease\", 1);\n\treturn this;\n};\n\n/**\n * Invoke the attack phase, then after the duration, invoke the release.\n * @param  {(Frequency|Frequency[])} notes\tThe note to play and release, or an array of notes.\n * @param  {(Time|Time[])} duration The time the note should be held\n * @param  {Time=} time     When to start the attack\n * @param  {NormalRange} [velocity=1] The velocity of the attack\n * @return {Tone.Sampler}          this\n */\nTone.Sampler.prototype.triggerAttackRelease = function(notes, duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tthis.triggerAttack(notes, time, velocity);\n\tif (Tone.isArray(duration) && Tone.isArray(notes)){\n\t\tfor (var i = 0; i < notes.length; i++){\n\t\t\tvar d = duration[Math.min(i, duration.length - 1)];\n\t\t\tthis.triggerRelease(notes[i], time + this.toSeconds(d));\n\t\t}\n\t} else {\n\t\tthis.triggerRelease(notes, time + this.toSeconds(duration));\n\t}\n\treturn this;\n};\n\n/**\n *  Add a note to the sampler.\n *  @param  {Note|Midi}   note      The buffer's pitch.\n *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer,\n *                                                 or a buffer which will be added\n *                                                 with the given name.\n *  @param  {Function=}  callback  The callback to invoke\n *                                 when the url is loaded.\n */\nTone.Sampler.prototype.add = function(note, url, callback){\n\tif (Tone.isNote(note)){\n\t\t//convert the note name to MIDI\n\t\tvar mid = Tone.Frequency(note).toMidi();\n\t\tthis._buffers.add(mid, url, callback);\n\t} else if (!isNaN(parseFloat(note))){\n\t\t//otherwise if it's numbers assume it's midi\n\t\tthis._buffers.add(note, url, callback);\n\t} else {\n\t\tthrow new Error(\"Tone.Sampler: note must be the note's pitch. Instead got \"+note);\n\t}\n};\n\n/**\n * If the buffers are loaded or not\n * @memberOf Tone.Sampler#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Sampler.prototype, \"loaded\", {\n\t\"get\" : function(){\n\t\treturn this._buffers.loaded;\n\t}\n});\n\n/**\n * Clean up\n * @return {Tone.Sampler} this\n */\nTone.Sampler.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis._buffers.dispose();\n\tthis._buffers = null;\n\tfor (var midi in this._activeSources){\n\t\tthis._activeSources[midi].forEach(function(source){\n\t\t\tsource.dispose();\n\t\t});\n\t}\n\tthis._activeSources = null;\n\treturn this;\n};\n\nexport default Tone.Sampler;\n","import sampler from 'tone/Tone/instrument/Sampler'\r\nexport default sampler","<template>\r\n  <div class=\"happysynth-play\">\r\n      <piano-keys @notedown=\"noteOn\" @noteup=\"noteOff\" octave=\"3\"></piano-keys>\r\n      <piano-keys @notedown=\"noteOn\" @noteup=\"noteOff\" octave=\"4\"></piano-keys>\r\n      <piano-keys @notedown=\"noteOn\" @noteup=\"noteOff\" octave=\"5\"></piano-keys>\r\n      <message-container>\r\n          <message :is-shown=\"loadingMsgShown\">\r\n              <icon icon-type=\"loading\" style=\"color:#28f\"></icon>\r\n              加载音色采样中...\r\n          </message>\r\n          <message :is-shown=\"loadSuccessMsgShown\">\r\n              <icon icon-type=\"check\" style=\"color:#6b6\"></icon>\r\n              {{loadSuccessMsgText}}\r\n          </message>\r\n          <message :is-shown=\"loadFailMsgShown\">\r\n              <icon icon-type=\"warning\" style=\"color:#f32\"></icon>\r\n              加载失败\r\n          </message>\r\n      </message-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PianoKeys from '../../components/happysynth/PianoKeys'\r\nimport sampler from '../../sampler'\r\nimport MessageContainer from '../../components/common/Message/MessageContainer'\r\nimport Message from '../../components/common/Message/Message'\r\nimport Icon from '../../components/common/Icon/Icon'\r\nimport {waveform} from '../../network/happysynth'\r\nimport { setPriority } from 'os'\r\nexport default {\r\n    name:'HappySynthPlay',\r\n    data(){\r\n        return {\r\n            loadingMsgShown:false,\r\n            loadSuccessMsgShown:false,\r\n            loadFailMsgShown:false,\r\n            loadSuccessMsgText:\"加载默认音色完成\",\r\n            sampler:null\r\n        }\r\n    },\r\n    components:{\r\n        PianoKeys,Message,MessageContainer,Icon\r\n    },\r\n    methods:{\r\n        noteOn(pitch){\r\n            // console.log(pitch)\r\n            this.sampler.triggerAttack(pitch)\r\n        },\r\n        noteOff(pitch){\r\n            this.sampler.triggerRelease(pitch)\r\n        }\r\n    },\r\n    mounted(){\r\n        Promise.all([\r\n            new Promise(resolve=>{\r\n                setTimeout(()=>{resolve()},100)\r\n            }).then(()=>{\r\n                this.loadingMsgShown=true\r\n                return new Promise(resolve=>{\r\n                    setTimeout(()=>{resolve()},1000)\r\n                })\r\n            }),\r\n            waveform.get('')\r\n        ]).then(res=>{\r\n            // console.log(res)\r\n            if(res[1].data.status===404){\r\n                this.loadingMsgShown=false\r\n                this.loadSuccessMsgText='加载默认音色完成'\r\n                this.loadSuccessMsgShown=true\r\n                setTimeout(()=>{this.loadSuccessMsgShown=false},1000)\r\n                this.sampler= new sampler(\r\n                    res[1].data.data,\r\n                    ()=>{\r\n                        console.log(`sample loaded? ${this.sampler.loaded}`)\r\n                    }\r\n                ).toMaster()\r\n            }else{\r\n                this.loadingMsgShown=false\r\n                this.loadSuccessMsgText='加载用户音色完成'\r\n                this.loadSuccessMsgShown=true\r\n                setTimeout(()=>{this.loadSuccessMsgShown=false},1000)\r\n                this.sampler= new sampler(\r\n                    res[1].data.data,\r\n                    ()=>{\r\n                        console.log(`sample loaded? ${this.sampler.loaded}`)\r\n                    }\r\n                ).toMaster()                                \r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n            this.loadingMsgShown=false\r\n            this.loadFailMsgShown=true\r\n            setTimeout(()=>{this.loadFailMsgShown=false},1000)\r\n        })\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HappySynthPlay.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HappySynthPlay.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HappySynthPlay.vue?vue&type=template&id=52df12d2&\"\nimport script from \"./HappySynthPlay.vue?vue&type=script&lang=js&\"\nexport * from \"./HappySynthPlay.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PianoKeys.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PianoKeys.vue?vue&type=style&index=0&lang=css&\"","'use strict';\nvar toObject = require('../internals/to-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\n\n// `Array.prototype.fill` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.fill\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var argumentsLength = arguments.length;\n  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);\n  var end = argumentsLength > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"p-keyboard\"},[_c('svg',{attrs:{\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"xmlns:xlink\":\"http://www.w3.org/1999/xlink\",\"preserveAspectRatio\":\"xMinYMin meet\",\"viewBox\":\"0 0 1195.6 818.2\"}},[_c('path',{staticClass:\"white-key\",attrs:{\"pitch\":\"C\",\"d\":\"M0.6,16.2l0,787.1c0,8.6,7,15.7,15.7,15.7h132.3c8.6,0,15.7-7,15.7-15.7V437.7c0-6.4-5.2-11.6-11.6-11.6h-32.1\\n     c-8.6,0-15.7-7-15.7-15.7V0.5H16.3C7.6,0.5,0.6,7.6,0.6,16.2z\"}}),_c('path',{staticClass:\"black-key \",attrs:{\"pitch\":\"C#\",\"d\":\"M225.7,0.5v406c0,8.6-6.6,15.5-14.6,15.5h-85.3c-8.1,0-14.6-7-14.6-15.5V0.5H225.7z\"}}),_c('path',{staticClass:\"white-key \",attrs:{\"pitch\":\"D\",\"d\":\"M336.1,437.7v365.6c0,8.6-7,15.7-15.7,15.7H188.1c-8.6,0-15.7-7-15.7-15.7V437.7c0-6.4,5.2-11.6,11.6-11.6h32.1\\n     c8.6,0,15.7-7,15.7-15.7V0.5h45v409.9c0,8.6,7,15.7,15.7,15.7h32.1C331,426.1,336.1,431.3,336.1,437.7z\"}}),_c('path',{staticClass:\"black-key \",attrs:{\"pitch\":\"D#\",\"d\":\"M397.5,0.5v406c0,8.6-6.6,15.5-14.6,15.5h-85.3c-8.1,0-14.6-7-14.6-15.5V0.5H397.5z\"}}),_c('path',{staticClass:\"white-key \",attrs:{\"pitch\":\"E\",\"d\":\"M508,16.2v787.1c0,8.6-7,15.7-15.7,15.7H360c-8.6,0-15.7-7-15.7-15.7V437.7c0-6.4,5.2-11.6,11.6-11.6H388\\n     c8.6,0,15.7-7,15.7-15.7V0.5h88.7C501,0.5,508,7.6,508,16.2z\"}}),_c('path',{staticClass:\"white-key \",attrs:{\"pitch\":\"F\",\"d\":\"M516.2,16.2v787.1c0,8.6,7,15.7,15.7,15.7h132.3c8.6,0,15.7-7,15.7-15.7V437.7c0-6.4-5.2-11.6-11.6-11.6h-32.1\\n     c-8.6,0-15.7-7-15.7-15.7V0.5h-88.7C523.2,0.5,516.2,7.6,516.2,16.2z\"}}),_c('path',{staticClass:\"black-key \",attrs:{\"pitch\":\"F#\",\"d\":\"M741.3,0.5v406c0,8.6-6.6,15.5-14.6,15.5h-85.3c-8.1,0-14.6-7-14.6-15.5V0.5H741.3z\"}}),_c('path',{staticClass:\"white-key \",attrs:{\"pitch\":\"G\",\"d\":\"M851.7,437.7v365.6c0,8.6-7,15.7-15.7,15.7H703.7c-8.6,0-15.7-7-15.7-15.7V437.7c0-6.4,5.2-11.6,11.6-11.6h32.1\\n     c8.6,0,15.7-7,15.7-15.7V0.5h45v409.9c0,8.6,7,15.7,15.7,15.7h32.1C846.5,426.1,851.7,431.3,851.7,437.7z\"}}),_c('path',{staticClass:\"black-key \",attrs:{\"pitch\":\"G#\",\"d\":\"M913.1,0.5v406c0,8.6-6.6,15.5-14.6,15.5h-85.3c-8.1,0-14.6-7-14.6-15.5V0.5H913.1z\"}}),_c('path',{staticClass:\"white-key \",attrs:{\"pitch\":\"A\",\"d\":\"M1023.6,437.7v365.6c0,8.6-7,15.7-15.7,15.7H875.6c-8.6,0-15.7-7-15.7-15.7V437.7c0-6.4,5.2-11.6,11.6-11.6\\n     h32.1c8.6,0,15.7-7,15.7-15.7V0.5h45v409.9c0,8.6,7,15.7,15.7,15.7h32.1C1018.4,426.1,1023.6,431.3,1023.6,437.7z\"}}),_c('path',{staticClass:\"black-key \",attrs:{\"pitch\":\"A#\",\"d\":\"M1085,0.5v406c0,8.6-6.6,15.5-14.6,15.5H985c-8.1,0-14.6-7-14.6-15.5V0.5H1085z\"}}),_c('path',{staticClass:\"white-key \",attrs:{\"pitch\":\"B\",\"d\":\"M1195.5,16.2v787.1c0,8.6-7,15.7-15.7,15.7h-132.3c-8.6,0-15.7-7-15.7-15.7V437.7c0-6.4,5.2-11.6,11.6-11.6\\n     h32.1c8.6,0,15.7-7,15.7-15.7V0.5h88.7C1188.4,0.5,1195.5,7.6,1195.5,16.2z\"}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"p-keyboard\">\r\n      <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n        preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 1195.6 818.2\">\r\n        <path class=\"white-key\" pitch=\"C\" d=\"M0.6,16.2l0,787.1c0,8.6,7,15.7,15.7,15.7h132.3c8.6,0,15.7-7,15.7-15.7V437.7c0-6.4-5.2-11.6-11.6-11.6h-32.1\r\n       c-8.6,0-15.7-7-15.7-15.7V0.5H16.3C7.6,0.5,0.6,7.6,0.6,16.2z\" />\r\n        <path class=\"black-key \" pitch=\"C#\"\r\n            d=\"M225.7,0.5v406c0,8.6-6.6,15.5-14.6,15.5h-85.3c-8.1,0-14.6-7-14.6-15.5V0.5H225.7z\" />\r\n        <path class=\"white-key \" pitch=\"D\" d=\"M336.1,437.7v365.6c0,8.6-7,15.7-15.7,15.7H188.1c-8.6,0-15.7-7-15.7-15.7V437.7c0-6.4,5.2-11.6,11.6-11.6h32.1\r\n       c8.6,0,15.7-7,15.7-15.7V0.5h45v409.9c0,8.6,7,15.7,15.7,15.7h32.1C331,426.1,336.1,431.3,336.1,437.7z\" />\r\n        <path class=\"black-key \" pitch=\"D#\"\r\n            d=\"M397.5,0.5v406c0,8.6-6.6,15.5-14.6,15.5h-85.3c-8.1,0-14.6-7-14.6-15.5V0.5H397.5z\" />\r\n        <path class=\"white-key \" pitch=\"E\" d=\"M508,16.2v787.1c0,8.6-7,15.7-15.7,15.7H360c-8.6,0-15.7-7-15.7-15.7V437.7c0-6.4,5.2-11.6,11.6-11.6H388\r\n       c8.6,0,15.7-7,15.7-15.7V0.5h88.7C501,0.5,508,7.6,508,16.2z\" />\r\n        <path class=\"white-key \" pitch=\"F\" d=\"M516.2,16.2v787.1c0,8.6,7,15.7,15.7,15.7h132.3c8.6,0,15.7-7,15.7-15.7V437.7c0-6.4-5.2-11.6-11.6-11.6h-32.1\r\n       c-8.6,0-15.7-7-15.7-15.7V0.5h-88.7C523.2,0.5,516.2,7.6,516.2,16.2z\" />\r\n        <path class=\"black-key \" pitch=\"F#\"\r\n            d=\"M741.3,0.5v406c0,8.6-6.6,15.5-14.6,15.5h-85.3c-8.1,0-14.6-7-14.6-15.5V0.5H741.3z\" />\r\n        <path class=\"white-key \" pitch=\"G\" d=\"M851.7,437.7v365.6c0,8.6-7,15.7-15.7,15.7H703.7c-8.6,0-15.7-7-15.7-15.7V437.7c0-6.4,5.2-11.6,11.6-11.6h32.1\r\n       c8.6,0,15.7-7,15.7-15.7V0.5h45v409.9c0,8.6,7,15.7,15.7,15.7h32.1C846.5,426.1,851.7,431.3,851.7,437.7z\" />\r\n        <path class=\"black-key \" pitch=\"G#\"\r\n            d=\"M913.1,0.5v406c0,8.6-6.6,15.5-14.6,15.5h-85.3c-8.1,0-14.6-7-14.6-15.5V0.5H913.1z\" />\r\n        <path class=\"white-key \" pitch=\"A\"\r\n            d=\"M1023.6,437.7v365.6c0,8.6-7,15.7-15.7,15.7H875.6c-8.6,0-15.7-7-15.7-15.7V437.7c0-6.4,5.2-11.6,11.6-11.6\r\n       h32.1c8.6,0,15.7-7,15.7-15.7V0.5h45v409.9c0,8.6,7,15.7,15.7,15.7h32.1C1018.4,426.1,1023.6,431.3,1023.6,437.7z\" />\r\n        <path class=\"black-key \" pitch=\"A#\"\r\n            d=\"M1085,0.5v406c0,8.6-6.6,15.5-14.6,15.5H985c-8.1,0-14.6-7-14.6-15.5V0.5H1085z\" />\r\n        <path class=\"white-key \" pitch=\"B\" d=\"M1195.5,16.2v787.1c0,8.6-7,15.7-15.7,15.7h-132.3c-8.6,0-15.7-7-15.7-15.7V437.7c0-6.4,5.2-11.6,11.6-11.6\r\n       h32.1c8.6,0,15.7-7,15.7-15.7V0.5h88.7C1188.4,0.5,1195.5,7.6,1195.5,16.2z\" />\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name:'PKeyboard',\r\n    data(){\r\n        return {\r\n            glide:false\r\n        }\r\n    },\r\n    props:{\r\n        octave:{\r\n            type:String,\r\n            required:true\r\n        }\r\n    },\r\n    mounted(){\r\n        const pianoKeys=this.$el.getElementsByTagName(\"path\")\r\n        pianoKeys.forEach(elem => {\r\n            elem.addEventListener(\"mousedown\",ev=>{\r\n                // console.log(ev)\r\n                this.glide=true\r\n                ev.target.style.fill=\"var(--key-down-color)\"\r\n                this.$emit(\"notedown\",ev.target.getAttribute(\"pitch\")+this.octave)\r\n            })\r\n            elem.addEventListener(\"mouseup\",ev=>{\r\n                // console.log(ev)\r\n                this.glide=false\r\n                ev.target.style.fill=\"\"\r\n                this.$emit(\"noteup\",ev.target.getAttribute(\"pitch\")+this.octave)\r\n            })\r\n            elem.addEventListener(\"mouseenter\",ev=>{\r\n                if(this.glide){\r\n                    ev.target.style.fill=\"var(--key-down-color)\"\r\n                    this.$emit(\"notedown\",ev.target.getAttribute(\"pitch\")+this.octave)\r\n                }\r\n            })\r\n            elem.addEventListener(\"mouseleave\",ev=>{\r\n                ev.target.style.fill=\"\"\r\n                this.$emit(\"noteup\",ev.target.getAttribute(\"pitch\")+this.octave)\r\n            })\r\n        })\r\n        document.addEventListener(\"mouseup\",()=>{\r\n            this.glide=false\r\n        })\r\n        document.addEventListener(\"mousedown\",()=>{\r\n            this.glide=true\r\n        })\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n.p-keyboard{\r\n    display: inline-block;\r\n    margin: 0 0.8px;\r\n    height: 200px;\r\n    --white-key-color: #d72;\r\n    --black-key-color: #444;\r\n    --key-down-color : #853;\r\n}\r\n.p-keyboard svg{\r\n    height: 200px;\r\n}\r\n.p-keyboard .white-key{\r\n    fill: var(--white-key-color);\r\n}\r\n.p-keyboard .black-key{\r\n    fill: var(--black-key-color);\r\n}\r\n.p-keyboard .key-down{\r\n    fill: var(--key-down-color);\r\n}\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PianoKeys.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PianoKeys.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PianoKeys.vue?vue&type=template&id=67582d4e&\"\nimport script from \"./PianoKeys.vue?vue&type=script&lang=js&\"\nexport * from \"./PianoKeys.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PianoKeys.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var $ = require('../internals/export');\nvar fill = require('../internals/array-fill');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.fill` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.fill\n$({ target: 'Array', proto: true }, {\n  fill: fill\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('fill');\n","export default \"13.8.25\";\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n"],"sourceRoot":""}